Functn00:
0000: push bp
0001: mov bp, sp
0003: xor ax, ax
0005: push ax
0006: mov ax, 0x3a
0009: push ax
000A: mov ax, 0x1
000D: push ax
000E: mov ax, 0x1
0011: push ax
0012: les bx, [bp+0x6]
0015: call far word [es:bx+0xbc]
001A: add sp, 0x8
001D: pop bp
001E: retf
Functn01:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x3
0006: push ax
0007: mov ax, 0xf5
000A: push ax
000B: mov ax, 0x3
000E: push ax
000F: mov ax, 0x1
0012: push ax
0013: les bx, [bp+0x6]
0016: call far word [es:bx+0xbc]
001B: add sp, 0x8
001E: pop bp
001F: retf
Functn02:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x3fc
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: pop bp
0011: retf
Functn03:
0000: push bp
0001: mov bp, sp
0003: xor ax, ax
0005: push ax
0006: mov ax, 0xf7
0009: push ax
000A: mov ax, 0x4
000D: push ax
000E: mov ax, 0x3
0011: push ax
0012: les bx, [bp+0x6]
0015: call far word [es:bx+0xbc]
001A: add sp, 0x8
001D: pop bp
001E: retf
Functn04:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x2
0006: push ax
0007: mov ax, 0x57
000A: push ax
000B: mov ax, 0x4
000E: push ax
000F: mov ax, 0x1
0012: push ax
0013: les bx, [bp+0x6]
0016: call far word [es:bx+0xbc]
001B: add sp, 0x8
001E: pop bp
001F: retf
Functn05:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x3
0006: push ax
0007: mov ax, 0x4f
000A: push ax
000B: mov ax, 0x4
000E: push ax
000F: mov ax, 0x1
0012: push ax
0013: les bx, [bp+0x6]
0016: call far word [es:bx+0xbc]
001B: add sp, 0x8
001E: pop bp
001F: retf
Functn06:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x1
0006: push ax
0007: mov ax, 0x8f
000A: push ax
000B: mov ax, 0x5
000E: push ax
000F: mov ax, 0x1
0012: push ax
0013: les bx, [bp+0x6]
0016: call far word [es:bx+0xbc]
001B: add sp, 0x8
001E: pop bp
001F: retf
Functn07:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x420
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: pop bp
0011: retf
Functn08:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x1
0006: push ax
0007: mov ax, 0x5
000A: push ax
000B: mov ax, 0x1
000E: push ax
000F: mov ax, 0x2
0012: push ax
0013: les bx, [bp+0x6]
0016: call far word [es:bx+0xbc]
001B: add sp, 0x8
001E: pop bp
001F: retf
Functn09:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0xc4
0006: push ax
0007: mov ax, 0xc0
000A: push ax
000B: les bx, [bp+0x6]
000E: call far word [es:bx+0x54]
0012: pop cx
0013: pop cx
0014: or ax, ax
0016: jnz 0x29
0018: mov ax, 0xe
001B: push ax
001C: les bx, [bp+0x6]
001F: call far word [es:bx+0x58]
0023: pop cx
0024: cmp ax, 0x4
0027: jb 0x68
0029: mov ax, 0x1
002C: push ax
002D: mov ax, 0x3
0030: push ax
0031: mov ax, 0x6f
0034: push ax
0035: les bx, [bp+0x6]
0038: call far word [es:bx+0x2c]
003C: add sp, 0x6
003F: mov ax, 0x3
0042: push ax
0043: les bx, [bp+0x6]
0046: call far word [es:bx+0x20]
004A: push ax
004B: mov ax, 0x1
004E: push ax
004F: les bx, [bp+0x6]
0052: call far word [es:bx+0x30]
0056: add sp, 0x6
0059: mov ax, 0x46f
005C: push ax
005D: les bx, [bp+0x6]
0060: call far word [es:bx+0xf8]
0065: pop cx
0066: jmp 0x8a
0068: xor ax, ax
006A: push ax
006B: mov ax, 0x3
006E: push ax
006F: mov ax, 0x6f
0072: push ax
0073: les bx, [bp+0x6]
0076: call far word [es:bx+0x2c]
007A: add sp, 0x6
007D: mov ax, 0x498
0080: push ax
0081: les bx, [bp+0x6]
0084: call far word [es:bx+0xf8]
0089: pop cx
008A: pop bp
008B: retf
Functn0A:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x2
0006: push ax
0007: mov ax, 0xe
000A: push ax
000B: mov ax, 0x1
000E: push ax
000F: mov ax, 0x2
0012: push ax
0013: les bx, [bp+0x6]
0016: call far word [es:bx+0xbc]
001B: add sp, 0x8
001E: pop bp
001F: retf
Functn0B:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0xc4
0006: push ax
0007: mov ax, 0xc2
000A: push ax
000B: les bx, [bp+0x6]
000E: call far word [es:bx+0x54]
0012: pop cx
0013: pop cx
0014: or ax, ax
0016: jnz 0x29
0018: mov ax, 0xe
001B: push ax
001C: les bx, [bp+0x6]
001F: call far word [es:bx+0x58]
0023: pop cx
0024: cmp ax, 0x8
0027: jb 0x68
0029: mov ax, 0x1
002C: push ax
002D: mov ax, 0x3
0030: push ax
0031: mov ax, 0x40
0034: push ax
0035: les bx, [bp+0x6]
0038: call far word [es:bx+0x2c]
003C: add sp, 0x6
003F: mov ax, 0x3
0042: push ax
0043: les bx, [bp+0x6]
0046: call far word [es:bx+0x20]
004A: push ax
004B: mov ax, 0x1
004E: push ax
004F: les bx, [bp+0x6]
0052: call far word [es:bx+0x30]
0056: add sp, 0x6
0059: mov ax, 0x4ac
005C: push ax
005D: les bx, [bp+0x6]
0060: call far word [es:bx+0xf8]
0065: pop cx
0066: jmp 0x8a
0068: xor ax, ax
006A: push ax
006B: mov ax, 0x3
006E: push ax
006F: mov ax, 0x40
0072: push ax
0073: les bx, [bp+0x6]
0076: call far word [es:bx+0x2c]
007A: add sp, 0x6
007D: mov ax, 0x4d5
0080: push ax
0081: les bx, [bp+0x6]
0084: call far word [es:bx+0xf8]
0089: pop cx
008A: pop bp
008B: retf
Functn0C:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x4e9
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: pop bp
0011: retf
Functn0D:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x519
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: pop bp
0011: retf
Functn0E:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x53f
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: pop bp
0011: retf
Functn0F:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x566
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: pop bp
0011: retf
Functn10:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x58c
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: pop bp
0011: retf
Functn11:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x5b3
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0x19
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xfc]
001C: pop cx
001D: mov ax, 0xf
0020: push ax
0021: les bx, [bp+0x6]
0024: call far word [es:bx+0xec]
0029: pop cx
002A: cmp ax, 0x8
002D: ja 0x4b
002F: mov ax, 0x5d4
0032: push ax
0033: les bx, [bp+0x6]
0036: call far word [es:bx+0xf8]
003B: pop cx
003C: mov ax, 0x678
003F: push ax
0040: les bx, [bp+0x6]
0043: call far word [es:bx+0xf8]
0048: pop cx
0049: jmp 0x58
004B: mov ax, 0x700
004E: push ax
004F: les bx, [bp+0x6]
0052: call far word [es:bx+0xf8]
0057: pop cx
0058: pop bp
0059: retf
Functn12:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x746
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0x2c
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xfc]
001C: pop cx
001D: mov ax, 0xf
0020: push ax
0021: les bx, [bp+0x6]
0024: call far word [es:bx+0xec]
0029: pop cx
002A: cmp ax, 0xc
002D: ja 0x3e
002F: mov ax, 0x764
0032: push ax
0033: les bx, [bp+0x6]
0036: call far word [es:bx+0xf8]
003B: pop cx
003C: jmp 0x5c
003E: mov ax, 0x1
0041: push ax
0042: mov ax, 0x12
0045: push ax
0046: les bx, [bp+0x6]
0049: call far word [es:bx+0x68]
004D: pop cx
004E: pop cx
004F: mov ax, 0x805
0052: push ax
0053: les bx, [bp+0x6]
0056: call far word [es:bx+0xf8]
005B: pop cx
005C: pop bp
005D: retf
Functn13:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x855
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0x21
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xfc]
001C: pop cx
001D: mov ax, 0xf
0020: push ax
0021: les bx, [bp+0x6]
0024: call far word [es:bx+0xec]
0029: pop cx
002A: cmp ax, 0xd
002D: ja 0x3e
002F: mov ax, 0x876
0032: push ax
0033: les bx, [bp+0x6]
0036: call far word [es:bx+0xf8]
003B: pop cx
003C: jmp 0x4b
003E: mov ax, 0x8cf
0041: push ax
0042: les bx, [bp+0x6]
0045: call far word [es:bx+0xf8]
004A: pop cx
004B: pop bp
004C: retf
Functn14:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x906
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0x28
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xfc]
001C: pop cx
001D: mov ax, 0xf
0020: push ax
0021: les bx, [bp+0x6]
0024: call far word [es:bx+0xec]
0029: pop cx
002A: cmp ax, 0x6
002D: ja 0x3e
002F: mov ax, 0x924
0032: push ax
0033: les bx, [bp+0x6]
0036: call far word [es:bx+0xf8]
003B: pop cx
003C: jmp 0x4b
003E: mov ax, 0x9e0
0041: push ax
0042: les bx, [bp+0x6]
0045: call far word [es:bx+0xf8]
004A: pop cx
004B: pop bp
004C: retf
Functn15:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0xa25
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0x1b
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xfc]
001C: pop cx
001D: mov ax, 0xf
0020: push ax
0021: les bx, [bp+0x6]
0024: call far word [es:bx+0xec]
0029: pop cx
002A: cmp ax, 0xb
002D: ja 0x3e
002F: mov ax, 0xa43
0032: push ax
0033: les bx, [bp+0x6]
0036: call far word [es:bx+0xf8]
003B: pop cx
003C: jmp 0x5c
003E: xor ax, ax
0040: mov dx, 0xa
0043: push ax
0044: push dx
0045: les bx, [bp+0x6]
0048: call far word [es:bx+0xac]
004D: pop cx
004E: pop cx
004F: mov ax, 0xb1d
0052: push ax
0053: les bx, [bp+0x6]
0056: call far word [es:bx+0xf8]
005B: pop cx
005C: pop bp
005D: retf
Functn16:
0000: push bp
0001: mov bp, sp
0003: les bx, [bp+0x6]
0006: call far word [es:bx+0xf0]
000B: cmp ax, 0x1
000E: jz 0x1d
0010: les bx, [bp+0x6]
0013: call far word [es:bx+0xf0]
0018: cmp ax, 0x2
001B: jnz 0x43
001D: mov ax, 0x1a
0020: push ax
0021: mov ax, 0x1
0024: push ax
0025: les bx, [bp+0x6]
0028: call far word [es:bx+0xd4]
002D: pop cx
002E: pop cx
002F: mov ax, 0x1a
0032: push ax
0033: mov ax, 0x2
0036: push ax
0037: les bx, [bp+0x6]
003A: call far word [es:bx+0xd4]
003F: pop cx
0040: pop cx
0041: jmp 0x8b
0043: mov ax, 0x1a
0046: push ax
0047: mov ax, 0x1
004A: push ax
004B: les bx, [bp+0x6]
004E: call far word [es:bx+0xd4]
0053: pop cx
0054: pop cx
0055: mov ax, 0x1a
0058: push ax
0059: mov ax, 0x2
005C: push ax
005D: les bx, [bp+0x6]
0060: call far word [es:bx+0xd4]
0065: pop cx
0066: pop cx
0067: mov ax, 0x1b
006A: push ax
006B: mov ax, 0x3
006E: push ax
006F: les bx, [bp+0x6]
0072: call far word [es:bx+0xd4]
0077: pop cx
0078: pop cx
0079: mov ax, 0x1b
007C: push ax
007D: mov ax, 0x4
0080: push ax
0081: les bx, [bp+0x6]
0084: call far word [es:bx+0xd4]
0089: pop cx
008A: pop cx
008B: pop bp
008C: retf
Functn17:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0xb5d
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0xf
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xec]
001C: pop cx
001D: cmp ax, 0x4
0020: ja 0x31
0022: mov ax, 0xb74
0025: push ax
0026: les bx, [bp+0x6]
0029: call far word [es:bx+0xf8]
002E: pop cx
002F: jmp 0x4b
0031: mov ax, 0xbfc
0034: push ax
0035: les bx, [bp+0x6]
0038: call far word [es:bx+0xf8]
003D: pop cx
003E: mov ax, 0xc18
0041: push ax
0042: les bx, [bp+0x6]
0045: call far word [es:bx+0xf8]
004A: pop cx
004B: les bx, [bp+0x6]
004E: call far word [es:bx+0xf0]
0053: cmp ax, 0x1
0056: jnz 0x7f
0058: mov ax, 0x1c
005B: push ax
005C: mov ax, 0x1
005F: push ax
0060: les bx, [bp+0x6]
0063: call far word [es:bx+0xd4]
0068: pop cx
0069: pop cx
006A: mov ax, 0x1c
006D: push ax
006E: mov ax, 0x2
0071: push ax
0072: les bx, [bp+0x6]
0075: call far word [es:bx+0xd4]
007A: pop cx
007B: pop cx
007C: jmp 0x11e
007F: les bx, [bp+0x6]
0082: call far word [es:bx+0xf0]
0087: cmp ax, 0x2
008A: jnz 0xc4
008C: mov ax, 0x1d
008F: push ax
0090: mov ax, 0x1
0093: push ax
0094: les bx, [bp+0x6]
0097: call far word [es:bx+0xd4]
009C: pop cx
009D: pop cx
009E: mov ax, 0x1c
00A1: push ax
00A2: mov ax, 0x2
00A5: push ax
00A6: les bx, [bp+0x6]
00A9: call far word [es:bx+0xd4]
00AE: pop cx
00AF: pop cx
00B0: mov ax, 0x1c
00B3: push ax
00B4: mov ax, 0x3
00B7: push ax
00B8: les bx, [bp+0x6]
00BB: call far word [es:bx+0xd4]
00C0: pop cx
00C1: pop cx
00C2: jmp 0x11e
00C4: mov ax, 0x1e
00C7: push ax
00C8: mov ax, 0x1
00CB: push ax
00CC: les bx, [bp+0x6]
00CF: call far word [es:bx+0xd4]
00D4: pop cx
00D5: pop cx
00D6: mov ax, 0x1e
00D9: push ax
00DA: mov ax, 0x2
00DD: push ax
00DE: les bx, [bp+0x6]
00E1: call far word [es:bx+0xd4]
00E6: pop cx
00E7: pop cx
00E8: mov ax, 0x1d
00EB: push ax
00EC: mov ax, 0x3
00EF: push ax
00F0: les bx, [bp+0x6]
00F3: call far word [es:bx+0xd4]
00F8: pop cx
00F9: pop cx
00FA: mov ax, 0x1d
00FD: push ax
00FE: mov ax, 0x4
0101: push ax
0102: les bx, [bp+0x6]
0105: call far word [es:bx+0xd4]
010A: pop cx
010B: pop cx
010C: mov ax, 0x1e
010F: push ax
0110: mov ax, 0x5
0113: push ax
0114: les bx, [bp+0x6]
0117: call far word [es:bx+0xd4]
011C: pop cx
011D: pop cx
011E: pop bp
011F: retf
Functn18:
0000: push bp
0001: mov bp, sp
0003: les bx, [bp+0x6]
0006: call far word [es:bx+0xf0]
000B: cmp ax, 0x1
000E: jz 0x1d
0010: les bx, [bp+0x6]
0013: call far word [es:bx+0xf0]
0018: cmp ax, 0x2
001B: jnz 0x55
001D: mov ax, 0x21
0020: push ax
0021: mov ax, 0x1
0024: push ax
0025: les bx, [bp+0x6]
0028: call far word [es:bx+0xd4]
002D: pop cx
002E: pop cx
002F: mov ax, 0x28
0032: push ax
0033: mov ax, 0x2
0036: push ax
0037: les bx, [bp+0x6]
003A: call far word [es:bx+0xd4]
003F: pop cx
0040: pop cx
0041: mov ax, 0x23
0044: push ax
0045: mov ax, 0x3
0048: push ax
0049: les bx, [bp+0x6]
004C: call far word [es:bx+0xd4]
0051: pop cx
0052: pop cx
0053: jmp 0xc1
0055: mov ax, 0x1f
0058: push ax
0059: mov ax, 0x1
005C: push ax
005D: les bx, [bp+0x6]
0060: call far word [es:bx+0xd4]
0065: pop cx
0066: pop cx
0067: mov ax, 0x20
006A: push ax
006B: mov ax, 0x2
006E: push ax
006F: les bx, [bp+0x6]
0072: call far word [es:bx+0xd4]
0077: pop cx
0078: pop cx
0079: mov ax, 0x21
007C: push ax
007D: mov ax, 0x3
0080: push ax
0081: les bx, [bp+0x6]
0084: call far word [es:bx+0xd4]
0089: pop cx
008A: pop cx
008B: mov ax, 0x21
008E: push ax
008F: mov ax, 0x4
0092: push ax
0093: les bx, [bp+0x6]
0096: call far word [es:bx+0xd4]
009B: pop cx
009C: pop cx
009D: mov ax, 0x23
00A0: push ax
00A1: mov ax, 0x5
00A4: push ax
00A5: les bx, [bp+0x6]
00A8: call far word [es:bx+0xd4]
00AD: pop cx
00AE: pop cx
00AF: mov ax, 0x28
00B2: push ax
00B3: mov ax, 0x6
00B6: push ax
00B7: les bx, [bp+0x6]
00BA: call far word [es:bx+0xd4]
00BF: pop cx
00C0: pop cx
00C1: pop bp
00C2: retf
Functn19:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0xc3c
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0xf
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xec]
001C: pop cx
001D: cmp ax, 0x3
0020: ja 0x31
0022: mov ax, 0xc52
0025: push ax
0026: les bx, [bp+0x6]
0029: call far word [es:bx+0xf8]
002E: pop cx
002F: jmp 0x4b
0031: mov ax, 0xce8
0034: push ax
0035: les bx, [bp+0x6]
0038: call far word [es:bx+0xf8]
003D: pop cx
003E: mov ax, 0xd03
0041: push ax
0042: les bx, [bp+0x6]
0045: call far word [es:bx+0xf8]
004A: pop cx
004B: les bx, [bp+0x6]
004E: call far word [es:bx+0xf0]
0053: cmp ax, 0x1
0056: jnz 0x6c
0058: mov ax, 0x22
005B: push ax
005C: mov ax, 0x1
005F: push ax
0060: les bx, [bp+0x6]
0063: call far word [es:bx+0xd4]
0068: pop cx
0069: pop cx
006A: jmp 0xe7
006C: les bx, [bp+0x6]
006F: call far word [es:bx+0xf0]
0074: cmp ax, 0x2
0077: jnz 0x9f
0079: mov ax, 0x23
007C: push ax
007D: mov ax, 0x1
0080: push ax
0081: les bx, [bp+0x6]
0084: call far word [es:bx+0xd4]
0089: pop cx
008A: pop cx
008B: mov ax, 0x23
008E: push ax
008F: mov ax, 0x2
0092: push ax
0093: les bx, [bp+0x6]
0096: call far word [es:bx+0xd4]
009B: pop cx
009C: pop cx
009D: jmp 0xe7
009F: mov ax, 0x24
00A2: push ax
00A3: mov ax, 0x1
00A6: push ax
00A7: les bx, [bp+0x6]
00AA: call far word [es:bx+0xd4]
00AF: pop cx
00B0: pop cx
00B1: mov ax, 0x24
00B4: push ax
00B5: mov ax, 0x2
00B8: push ax
00B9: les bx, [bp+0x6]
00BC: call far word [es:bx+0xd4]
00C1: pop cx
00C2: pop cx
00C3: mov ax, 0x23
00C6: push ax
00C7: mov ax, 0x3
00CA: push ax
00CB: les bx, [bp+0x6]
00CE: call far word [es:bx+0xd4]
00D3: pop cx
00D4: pop cx
00D5: mov ax, 0x23
00D8: push ax
00D9: mov ax, 0x4
00DC: push ax
00DD: les bx, [bp+0x6]
00E0: call far word [es:bx+0xd4]
00E5: pop cx
00E6: pop cx
00E7: pop bp
00E8: retf
Functn1A:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0xd17
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0xd2d
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xf8]
001C: pop cx
001D: les bx, [bp+0x6]
0020: call far word [es:bx+0xf0]
0025: cmp ax, 0x1
0028: jnz 0x3e
002A: mov ax, 0x28
002D: push ax
002E: mov ax, 0x1
0031: push ax
0032: les bx, [bp+0x6]
0035: call far word [es:bx+0xd4]
003A: pop cx
003B: pop cx
003C: jmp 0xb9
003E: les bx, [bp+0x6]
0041: call far word [es:bx+0xf0]
0046: cmp ax, 0x2
0049: jnz 0x71
004B: mov ax, 0x25
004E: push ax
004F: mov ax, 0x1
0052: push ax
0053: les bx, [bp+0x6]
0056: call far word [es:bx+0xd4]
005B: pop cx
005C: pop cx
005D: mov ax, 0x27
0060: push ax
0061: mov ax, 0x2
0064: push ax
0065: les bx, [bp+0x6]
0068: call far word [es:bx+0xd4]
006D: pop cx
006E: pop cx
006F: jmp 0xb9
0071: mov ax, 0x27
0074: push ax
0075: mov ax, 0x1
0078: push ax
0079: les bx, [bp+0x6]
007C: call far word [es:bx+0xd4]
0081: pop cx
0082: pop cx
0083: mov ax, 0x25
0086: push ax
0087: mov ax, 0x2
008A: push ax
008B: les bx, [bp+0x6]
008E: call far word [es:bx+0xd4]
0093: pop cx
0094: pop cx
0095: mov ax, 0x28
0098: push ax
0099: mov ax, 0x3
009C: push ax
009D: les bx, [bp+0x6]
00A0: call far word [es:bx+0xd4]
00A5: pop cx
00A6: pop cx
00A7: mov ax, 0x26
00AA: push ax
00AB: mov ax, 0x5
00AE: push ax
00AF: les bx, [bp+0x6]
00B2: call far word [es:bx+0xd4]
00B7: pop cx
00B8: pop cx
00B9: pop bp
00BA: retf
Functn1B:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x6
0006: push ax
0007: mov ax, 0x2
000A: push ax
000B: les bx, [bp+0x6]
000E: call far word [es:bx+0x4]
0012: pop cx
0013: pop cx
0014: cmp ax, 0x1
0017: jnz 0x47
0019: mov ax, 0x190
001C: push ax
001D: xor ax, ax
001F: push ax
0020: xor ax, ax
0022: push ax
0023: xor ax, ax
0025: push ax
0026: xor ax, ax
0028: push ax
0029: mov ax, 0xce
002C: push ax
002D: les bx, [bp+0x6]
0030: call far word [es:bx+0xd8]
0035: add sp, 0xc
0038: mov ax, 0xd51
003B: push ax
003C: les bx, [bp+0x6]
003F: call far word [es:bx+0xf8]
0044: pop cx
0045: jmp 0x89
0047: mov ax, 0x5dc
004A: push ax
004B: xor ax, ax
004D: push ax
004E: xor ax, ax
0050: push ax
0051: xor ax, ax
0053: push ax
0054: mov ax, 0xc
0057: push ax
0058: mov ax, 0x5
005B: push ax
005C: les bx, [bp+0x6]
005F: call far word [es:bx+0xd8]
0064: add sp, 0xc
0067: mov ax, 0x1
006A: push ax
006B: mov ax, 0x6
006E: push ax
006F: mov ax, 0x2
0072: push ax
0073: les bx, [bp+0x6]
0076: call far word [es:bx]
0079: add sp, 0x6
007C: mov ax, 0xd96
007F: push ax
0080: les bx, [bp+0x6]
0083: call far word [es:bx+0xf8]
0088: pop cx
0089: les bx, [bp+0x6]
008C: call far word [es:bx+0xf0]
0091: cmp ax, 0x1
0094: jnz 0xab
0096: mov ax, 0x26
0099: push ax
009A: mov ax, 0x1
009D: push ax
009E: les bx, [bp+0x6]
00A1: call far word [es:bx+0xd4]
00A6: pop cx
00A7: pop cx
00A8: jmp 0x17e
00AB: les bx, [bp+0x6]
00AE: call far word [es:bx+0xf0]
00B3: cmp ax, 0x2
00B6: jnz 0xdf
00B8: mov ax, 0x25
00BB: push ax
00BC: mov ax, 0x1
00BF: push ax
00C0: les bx, [bp+0x6]
00C3: call far word [es:bx+0xd4]
00C8: pop cx
00C9: pop cx
00CA: mov ax, 0x26
00CD: push ax
00CE: mov ax, 0x2
00D1: push ax
00D2: les bx, [bp+0x6]
00D5: call far word [es:bx+0xd4]
00DA: pop cx
00DB: pop cx
00DC: jmp 0x17e
00DF: les bx, [bp+0x6]
00E2: call far word [es:bx+0xf0]
00E7: cmp ax, 0x3
00EA: jnz 0x124
00EC: mov ax, 0x28
00EF: push ax
00F0: mov ax, 0x1
00F3: push ax
00F4: les bx, [bp+0x6]
00F7: call far word [es:bx+0xd4]
00FC: pop cx
00FD: pop cx
00FE: mov ax, 0x24
0101: push ax
0102: mov ax, 0x2
0105: push ax
0106: les bx, [bp+0x6]
0109: call far word [es:bx+0xd4]
010E: pop cx
010F: pop cx
0110: mov ax, 0x25
0113: push ax
0114: mov ax, 0x3
0117: push ax
0118: les bx, [bp+0x6]
011B: call far word [es:bx+0xd4]
0120: pop cx
0121: pop cx
0122: jmp 0x17e
0124: mov ax, 0x25
0127: push ax
0128: mov ax, 0x1
012B: push ax
012C: les bx, [bp+0x6]
012F: call far word [es:bx+0xd4]
0134: pop cx
0135: pop cx
0136: mov ax, 0x27
0139: push ax
013A: mov ax, 0x2
013D: push ax
013E: les bx, [bp+0x6]
0141: call far word [es:bx+0xd4]
0146: pop cx
0147: pop cx
0148: mov ax, 0x26
014B: push ax
014C: mov ax, 0x3
014F: push ax
0150: les bx, [bp+0x6]
0153: call far word [es:bx+0xd4]
0158: pop cx
0159: pop cx
015A: mov ax, 0x27
015D: push ax
015E: mov ax, 0x4
0161: push ax
0162: les bx, [bp+0x6]
0165: call far word [es:bx+0xd4]
016A: pop cx
016B: pop cx
016C: mov ax, 0x23
016F: push ax
0170: mov ax, 0x5
0173: push ax
0174: les bx, [bp+0x6]
0177: call far word [es:bx+0xd4]
017C: pop cx
017D: pop cx
017E: pop bp
017F: retf
Functn1C:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x7
0006: push ax
0007: mov ax, 0x2
000A: push ax
000B: les bx, [bp+0x6]
000E: call far word [es:bx+0x4]
0012: pop cx
0013: pop cx
0014: cmp ax, 0x1
0017: jnz 0x47
0019: mov ax, 0x64
001C: push ax
001D: xor ax, ax
001F: push ax
0020: xor ax, ax
0022: push ax
0023: xor ax, ax
0025: push ax
0026: xor ax, ax
0028: push ax
0029: mov ax, 0xcb
002C: push ax
002D: les bx, [bp+0x6]
0030: call far word [es:bx+0xd8]
0035: add sp, 0xc
0038: mov ax, 0xded
003B: push ax
003C: les bx, [bp+0x6]
003F: call far word [es:bx+0xf8]
0044: pop cx
0045: jmp 0x89
0047: mov ax, 0x3e8
004A: push ax
004B: xor ax, ax
004D: push ax
004E: xor ax, ax
0050: push ax
0051: xor ax, ax
0053: push ax
0054: mov ax, 0xcb
0057: push ax
0058: mov ax, 0xb5
005B: push ax
005C: les bx, [bp+0x6]
005F: call far word [es:bx+0xd8]
0064: add sp, 0xc
0067: mov ax, 0x1
006A: push ax
006B: mov ax, 0x7
006E: push ax
006F: mov ax, 0x2
0072: push ax
0073: les bx, [bp+0x6]
0076: call far word [es:bx]
0079: add sp, 0x6
007C: mov ax, 0xe1f
007F: push ax
0080: les bx, [bp+0x6]
0083: call far word [es:bx+0xf8]
0088: pop cx
0089: les bx, [bp+0x6]
008C: call far word [es:bx+0xf0]
0091: cmp ax, 0x1
0094: jz 0xa3
0096: les bx, [bp+0x6]
0099: call far word [es:bx+0xf0]
009E: cmp ax, 0x2
00A1: jnz 0xc9
00A3: mov ax, 0x1d
00A6: push ax
00A7: mov ax, 0x1
00AA: push ax
00AB: les bx, [bp+0x6]
00AE: call far word [es:bx+0xd4]
00B3: pop cx
00B4: pop cx
00B5: mov ax, 0x1c
00B8: push ax
00B9: mov ax, 0x2
00BC: push ax
00BD: les bx, [bp+0x6]
00C0: call far word [es:bx+0xd4]
00C5: pop cx
00C6: pop cx
00C7: jmp 0x111
00C9: mov ax, 0x1c
00CC: push ax
00CD: mov ax, 0x1
00D0: push ax
00D1: les bx, [bp+0x6]
00D4: call far word [es:bx+0xd4]
00D9: pop cx
00DA: pop cx
00DB: mov ax, 0x1c
00DE: push ax
00DF: mov ax, 0x2
00E2: push ax
00E3: les bx, [bp+0x6]
00E6: call far word [es:bx+0xd4]
00EB: pop cx
00EC: pop cx
00ED: mov ax, 0x1d
00F0: push ax
00F1: mov ax, 0x3
00F4: push ax
00F5: les bx, [bp+0x6]
00F8: call far word [es:bx+0xd4]
00FD: pop cx
00FE: pop cx
00FF: mov ax, 0x1d
0102: push ax
0103: mov ax, 0x4
0106: push ax
0107: les bx, [bp+0x6]
010A: call far word [es:bx+0xd4]
010F: pop cx
0110: pop cx
0111: pop bp
0112: retf
Functn1D:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x8
0006: push ax
0007: mov ax, 0x2
000A: push ax
000B: les bx, [bp+0x6]
000E: call far word [es:bx+0x4]
0012: pop cx
0013: pop cx
0014: cmp ax, 0x1
0017: jnz 0x48
0019: mov ax, 0x78
001C: push ax
001D: xor ax, ax
001F: push ax
0020: xor ax, ax
0022: push ax
0023: xor ax, ax
0025: push ax
0026: mov ax, 0xcb
0029: push ax
002A: mov ax, 0xb5
002D: push ax
002E: les bx, [bp+0x6]
0031: call far word [es:bx+0xd8]
0036: add sp, 0xc
0039: mov ax, 0xe52
003C: push ax
003D: les bx, [bp+0x6]
0040: call far word [es:bx+0xf8]
0045: pop cx
0046: jmp 0x8b
0048: mov ax, 0x1388
004B: push ax
004C: xor ax, ax
004E: push ax
004F: xor ax, ax
0051: push ax
0052: mov ax, 0xc5
0055: push ax
0056: mov ax, 0x8a
0059: push ax
005A: mov ax, 0x8e
005D: push ax
005E: les bx, [bp+0x6]
0061: call far word [es:bx+0xd8]
0066: add sp, 0xc
0069: mov ax, 0x1
006C: push ax
006D: mov ax, 0x8
0070: push ax
0071: mov ax, 0x2
0074: push ax
0075: les bx, [bp+0x6]
0078: call far word [es:bx]
007B: add sp, 0x6
007E: mov ax, 0xe8b
0081: push ax
0082: les bx, [bp+0x6]
0085: call far word [es:bx+0xf8]
008A: pop cx
008B: les bx, [bp+0x6]
008E: call far word [es:bx+0xf0]
0093: cmp ax, 0x1
0096: jnz 0xad
0098: mov ax, 0x1f
009B: push ax
009C: mov ax, 0x1
009F: push ax
00A0: les bx, [bp+0x6]
00A3: call far word [es:bx+0xd4]
00A8: pop cx
00A9: pop cx
00AA: jmp 0x180
00AD: les bx, [bp+0x6]
00B0: call far word [es:bx+0xf0]
00B5: cmp ax, 0x2
00B8: jnz 0xe1
00BA: mov ax, 0x21
00BD: push ax
00BE: mov ax, 0x1
00C1: push ax
00C2: les bx, [bp+0x6]
00C5: call far word [es:bx+0xd4]
00CA: pop cx
00CB: pop cx
00CC: mov ax, 0x20
00CF: push ax
00D0: mov ax, 0x2
00D3: push ax
00D4: les bx, [bp+0x6]
00D7: call far word [es:bx+0xd4]
00DC: pop cx
00DD: pop cx
00DE: jmp 0x180
00E1: les bx, [bp+0x6]
00E4: call far word [es:bx+0xf0]
00E9: cmp ax, 0x3
00EC: jnz 0x126
00EE: mov ax, 0x1f
00F1: push ax
00F2: mov ax, 0x1
00F5: push ax
00F6: les bx, [bp+0x6]
00F9: call far word [es:bx+0xd4]
00FE: pop cx
00FF: pop cx
0100: mov ax, 0x20
0103: push ax
0104: mov ax, 0x2
0107: push ax
0108: les bx, [bp+0x6]
010B: call far word [es:bx+0xd4]
0110: pop cx
0111: pop cx
0112: mov ax, 0x21
0115: push ax
0116: mov ax, 0x3
0119: push ax
011A: les bx, [bp+0x6]
011D: call far word [es:bx+0xd4]
0122: pop cx
0123: pop cx
0124: jmp 0x180
0126: mov ax, 0x1f
0129: push ax
012A: mov ax, 0x1
012D: push ax
012E: les bx, [bp+0x6]
0131: call far word [es:bx+0xd4]
0136: pop cx
0137: pop cx
0138: mov ax, 0x1f
013B: push ax
013C: mov ax, 0x2
013F: push ax
0140: les bx, [bp+0x6]
0143: call far word [es:bx+0xd4]
0148: pop cx
0149: pop cx
014A: mov ax, 0x20
014D: push ax
014E: mov ax, 0x3
0151: push ax
0152: les bx, [bp+0x6]
0155: call far word [es:bx+0xd4]
015A: pop cx
015B: pop cx
015C: mov ax, 0x20
015F: push ax
0160: mov ax, 0x4
0163: push ax
0164: les bx, [bp+0x6]
0167: call far word [es:bx+0xd4]
016C: pop cx
016D: pop cx
016E: mov ax, 0x21
0171: push ax
0172: mov ax, 0x5
0175: push ax
0176: les bx, [bp+0x6]
0179: call far word [es:bx+0xd4]
017E: pop cx
017F: pop cx
0180: pop bp
0181: retf
Functn1E:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn1F:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn20:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn21:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn22:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn23:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn24:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn25:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn26:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn27:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn28:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn29:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn2A:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn2B:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn2C:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn2D:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn2E:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn2F:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn30:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn31:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn32:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn33:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn34:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn35:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn36:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn37:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn38:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn39:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn3A:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn3B:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn3C:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn3D:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn3E:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn3F:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn40:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn41:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn42:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn43:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn44:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn45:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn46:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn47:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn48:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn49:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn4A:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn4B:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn4C:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn4D:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn4E:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn4F:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn50:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn51:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn52:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn53:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn54:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn55:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn56:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn57:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn58:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn59:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn5A:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn5B:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn5C:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn5D:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn5E:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn5F:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn60:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn61:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn62:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn63:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn64:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn65:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn66:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn67:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn68:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn69:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn6A:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn6B:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn6C:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn6D:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn6E:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn6F:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn70:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn71:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn72:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn73:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn74:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn75:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn76:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn77:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn78:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn79:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn7A:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn7B:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn7C:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn7D:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn7E:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn7F:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn80:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn81:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn82:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn83:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn84:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn85:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn86:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn87:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn88:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn89:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn8A:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn8B:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn8C:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn8D:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn8E:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn8F:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn90:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn91:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn92:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn93:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn94:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn95:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn96:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn97:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn98:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn99:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn9A:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn9B:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn9C:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn9D:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn9E:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
Functn9F:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnA0:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnA1:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnA2:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnA3:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnA4:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnA5:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnA6:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnA7:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnA8:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnA9:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnAA:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnAB:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnAC:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnAD:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnAE:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnAF:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnB0:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnB1:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnB2:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnB3:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnB4:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnB5:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnB6:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnB7:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnB8:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnB9:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnBA:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnBB:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnBC:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnBD:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnBE:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnBF:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnC0:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnC1:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnC2:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnC3:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnC4:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnC5:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnC6:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnC7:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnC8:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnC9:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnCA:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnCB:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnCC:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnCD:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnCE:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnCF:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnD0:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnD1:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnD2:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnD3:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnD4:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnD5:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnD6:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnD7:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnD8:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnD9:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnDA:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnDB:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnDC:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnDD:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnDE:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnDF:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnE0:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnE1:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnE2:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnE3:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnE4:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnE5:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnE6:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnE7:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnE8:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnE9:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnEA:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnEB:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnEC:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnED:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnEE:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnEF:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnF0:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnF1:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnF2:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnF3:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnF4:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnF5:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnF6:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnF7:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnF8:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnF9:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnFA:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnFB:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnFC:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnFD:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
FunctnFE:
0000: push bp
0001: mov bp, sp
0003: pop bp
0004: retf
