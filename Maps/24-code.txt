Functn00:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x3fc
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0x413
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xf4]
001C: pop cx
001D: mov ax, 0x2
0020: push ax
0021: mov ax, 0x8a
0024: push ax
0025: mov ax, 0x2
0028: push ax
0029: mov ax, 0x34
002C: push ax
002D: les bx, [bp+0x6]
0030: call far word [es:bx+0xbc]
0035: add sp, 0x8
0038: pop bp
0039: retf

Functn01:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x41b
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0x432
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xf4]
001C: pop cx
001D: mov ax, 0x3
0020: push ax
0021: mov ax, 0x38
0024: push ax
0025: mov ax, 0x2
0028: push ax
0029: mov ax, 0x34
002C: push ax
002D: les bx, [bp+0x6]
0030: call far word [es:bx+0xbc]
0035: add sp, 0x8
0038: pop bp
0039: retf

Functn02:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x43a
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0x451
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xf4]
001C: pop cx
001D: mov ax, 0x2
0020: push ax
0021: mov ax, 0x49
0024: push ax
0025: mov ax, 0x2
0028: push ax
0029: les bx, [bp+0x6]
002C: call far word [es:bx]
002F: add sp, 0x6
0032: mov ax, 0x2
0035: push ax
0036: mov ax, 0xe0
0039: push ax
003A: mov ax, 0x2
003D: push ax
003E: mov ax, 0x34
0041: push ax
0042: les bx, [bp+0x6]
0045: call far word [es:bx+0xbc]
004A: add sp, 0x8
004D: pop bp
004E: retf

Functn03:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x45d
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0x474
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xf4]
001C: pop cx
001D: xor ax, ax
001F: push ax
0020: mov ax, 0xf2
0023: push ax
0024: mov ax, 0x2
0027: push ax
0028: mov ax, 0x34
002B: push ax
002C: les bx, [bp+0x6]
002F: call far word [es:bx+0xbc]
0034: add sp, 0x8
0037: pop bp
0038: retf

Functn04:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x47b
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0x492
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xf4]
001C: pop cx
001D: mov ax, 0x3
0020: push ax
0021: mov ax, 0xf5
0024: push ax
0025: mov ax, 0x2
0028: push ax
0029: mov ax, 0x34
002C: push ax
002D: les bx, [bp+0x6]
0030: call far word [es:bx+0xbc]
0035: add sp, 0x8
0038: pop bp
0039: retf

Functn05:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x498
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0x4af
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xf4]
001C: pop cx
001D: mov ax, 0x2
0020: push ax
0021: mov ax, 0xe3
0024: push ax
0025: mov ax, 0x2
0028: push ax
0029: mov ax, 0x34
002C: push ax
002D: les bx, [bp+0x6]
0030: call far word [es:bx+0xbc]
0035: add sp, 0x8
0038: pop bp
0039: retf

Functn06:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x4b5
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0x4cc
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xf4]
001C: pop cx
001D: mov ax, 0x2
0020: push ax
0021: mov ax, 0xcc
0024: push ax
0025: mov ax, 0x2
0028: push ax
0029: mov ax, 0x34
002C: push ax
002D: les bx, [bp+0x6]
0030: call far word [es:bx+0xbc]
0035: add sp, 0x8
0038: pop bp
0039: retf

Functn07:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x49
0006: push ax
0007: mov ax, 0x2
000A: push ax
000B: les bx, [bp+0x6]
000E: call far word [es:bx+0x4]
0012: pop cx
0013: pop cx
0014: cmp ax, 0x2
0017: jnz 0x4e
0019: mov ax, 0x4d8
001C: push ax
001D: les bx, [bp+0x6]
0020: call far word [es:bx+0xf8]
0025: pop cx
0026: mov ax, 0x4ef
0029: push ax
002A: les bx, [bp+0x6]
002D: call far word [es:bx+0xf4]
0032: pop cx
0033: mov ax, 0x2
0036: push ax
0037: mov ax, 0xfa
003A: push ax
003B: mov ax, 0x2
003E: push ax
003F: mov ax, 0x34
0042: push ax
0043: les bx, [bp+0x6]
0046: call far word [es:bx+0xbc]
004B: add sp, 0x8
004E: pop bp
004F: retf

Functn08:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x4f7
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0x50e
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xf4]
001C: pop cx
001D: xor ax, ax
001F: push ax
0020: mov ax, 0x88
0023: push ax
0024: mov ax, 0x2
0027: push ax
0028: mov ax, 0x34
002B: push ax
002C: les bx, [bp+0x6]
002F: call far word [es:bx+0xbc]
0034: add sp, 0x8
0037: pop bp
0038: retf

Functn09:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x1
0006: push ax
0007: mov ax, 0x52
000A: push ax
000B: mov ax, 0x2
000E: push ax
000F: les bx, [bp+0x6]
0012: call far word [es:bx]
0015: add sp, 0x6
0018: mov ax, 0x51a
001B: push ax
001C: les bx, [bp+0x6]
001F: call far word [es:bx+0xf8]
0024: pop cx
0025: mov ax, 0x19
0028: push ax
0029: mov ax, 0x1
002C: push ax
002D: les bx, [bp+0x6]
0030: call far word [es:bx+0xd4]
0035: pop cx
0036: pop cx
0037: mov ax, 0x19
003A: push ax
003B: mov ax, 0x2
003E: push ax
003F: les bx, [bp+0x6]
0042: call far word [es:bx+0xd4]
0047: pop cx
0048: pop cx
0049: mov ax, 0x19
004C: push ax
004D: mov ax, 0x3
0050: push ax
0051: les bx, [bp+0x6]
0054: call far word [es:bx+0xd4]
0059: pop cx
005A: pop cx
005B: mov ax, 0x12
005E: push ax
005F: mov ax, 0x5
0062: push ax
0063: les bx, [bp+0x6]
0066: call far word [es:bx+0xd4]
006B: pop cx
006C: pop cx
006D: mov ax, 0x12
0070: push ax
0071: mov ax, 0x6
0074: push ax
0075: les bx, [bp+0x6]
0078: call far word [es:bx+0xd4]
007D: pop cx
007E: pop cx
007F: mov ax, 0x1f4
0082: push ax
0083: xor ax, ax
0085: push ax
0086: mov ax, 0xcf
0089: push ax
008A: mov ax, 0xcf
008D: push ax
008E: mov ax, 0xc6
0091: push ax
0092: mov ax, 0xc9
0095: push ax
0096: les bx, [bp+0x6]
0099: call far word [es:bx+0xd8]
009E: add sp, 0xc
00A1: pop bp
00A2: retf

Functn0B:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x550
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0x2
0013: push ax
0014: mov ax, 0x30
0017: push ax
0018: mov ax, 0x2
001B: push ax
001C: mov ax, 0x34
001F: push ax
0020: les bx, [bp+0x6]
0023: call far word [es:bx+0xbc]
0028: add sp, 0x8
002B: pop bp
002C: retf

Functn0C:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x57a
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0x591
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xf4]
001C: pop cx
001D: mov ax, 0x2
0020: push ax
0021: mov ax, 0xbb
0024: push ax
0025: mov ax, 0x2
0028: push ax
0029: mov ax, 0x34
002C: push ax
002D: les bx, [bp+0x6]
0030: call far word [es:bx+0xbc]
0035: add sp, 0x8
0038: pop bp
0039: retf

Functn0D:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x59a
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0x5b1
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xf4]
001C: pop cx
001D: mov ax, 0x2
0020: push ax
0021: mov ax, 0xda
0024: push ax
0025: mov ax, 0x2
0028: push ax
0029: mov ax, 0x34
002C: push ax
002D: les bx, [bp+0x6]
0030: call far word [es:bx+0xbc]
0035: add sp, 0x8
0038: pop bp
0039: retf

Functn0E:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x3
0006: push ax
0007: mov ax, 0x49
000A: push ax
000B: mov ax, 0x2
000E: push ax
000F: les bx, [bp+0x6]
0012: call far word [es:bx]
0015: add sp, 0x6
0018: mov ax, 0x5bd
001B: push ax
001C: les bx, [bp+0x6]
001F: call far word [es:bx+0xf8]
0024: pop cx
0025: mov ax, 0x5d4
0028: push ax
0029: les bx, [bp+0x6]
002C: call far word [es:bx+0xf4]
0031: pop cx
0032: mov ax, 0x2
0035: push ax
0036: mov ax, 0xb9
0039: push ax
003A: mov ax, 0x2
003D: push ax
003E: mov ax, 0x34
0041: push ax
0042: les bx, [bp+0x6]
0045: call far word [es:bx+0xbc]
004A: add sp, 0x8
004D: pop bp
004E: retf

Functn0F:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x49
0006: push ax
0007: mov ax, 0x2
000A: push ax
000B: les bx, [bp+0x6]
000E: call far word [es:bx+0x4]
0012: pop cx
0013: pop cx
0014: cmp ax, 0x3
0017: jnz 0x50
0019: mov ax, 0x5d9
001C: push ax
001D: les bx, [bp+0x6]
0020: call far word [es:bx+0xf8]
0025: pop cx
0026: mov ax, 0x5f0
0029: push ax
002A: les bx, [bp+0x6]
002D: call far word [es:bx+0xf4]
0032: pop cx
0033: mov ax, 0x2
0036: push ax
0037: mov ax, 0xcc
003A: push ax
003B: mov ax, 0x2
003E: push ax
003F: mov ax, 0x34
0042: push ax
0043: les bx, [bp+0x6]
0046: call far word [es:bx+0xbc]
004B: add sp, 0x8
004E: jmp 0x9b
0050: mov ax, 0x49
0053: push ax
0054: mov ax, 0x2
0057: push ax
0058: les bx, [bp+0x6]
005B: call far word [es:bx+0x4]
005F: pop cx
0060: pop cx
0061: cmp ax, 0x4
0064: jnz 0x9b
0066: mov ax, 0x5f9
0069: push ax
006A: les bx, [bp+0x6]
006D: call far word [es:bx+0xf8]
0072: pop cx
0073: mov ax, 0x610
0076: push ax
0077: les bx, [bp+0x6]
007A: call far word [es:bx+0xf4]
007F: pop cx
0080: mov ax, 0x2
0083: push ax
0084: mov ax, 0xd8
0087: push ax
0088: mov ax, 0x2
008B: push ax
008C: mov ax, 0x34
008F: push ax
0090: les bx, [bp+0x6]
0093: call far word [es:bx+0xbc]
0098: add sp, 0x8
009B: pop bp
009C: retf

Functn10:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x4
0006: push ax
0007: mov ax, 0x49
000A: push ax
000B: mov ax, 0x2
000E: push ax
000F: les bx, [bp+0x6]
0012: call far word [es:bx]
0015: add sp, 0x6
0018: mov ax, 0x61d
001B: push ax
001C: les bx, [bp+0x6]
001F: call far word [es:bx+0xf8]
0024: pop cx
0025: mov ax, 0x634
0028: push ax
0029: les bx, [bp+0x6]
002C: call far word [es:bx+0xf4]
0031: pop cx
0032: mov ax, 0x2
0035: push ax
0036: mov ax, 0xb9
0039: push ax
003A: mov ax, 0x2
003D: push ax
003E: mov ax, 0x34
0041: push ax
0042: les bx, [bp+0x6]
0045: call far word [es:bx+0xbc]
004A: add sp, 0x8
004D: pop bp
004E: retf

Functn11:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x63a
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0x651
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xf4]
001C: pop cx
001D: mov ax, 0x2
0020: push ax
0021: mov ax, 0x6a
0024: push ax
0025: mov ax, 0x2
0028: push ax
0029: mov ax, 0x34
002C: push ax
002D: les bx, [bp+0x6]
0030: call far word [es:bx+0xbc]
0035: add sp, 0x8
0038: pop bp
0039: retf

Functn12:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x1
0006: push ax
0007: mov ax, 0x53
000A: push ax
000B: mov ax, 0x2
000E: push ax
000F: les bx, [bp+0x6]
0012: call far word [es:bx]
0015: add sp, 0x6
0018: mov ax, 0x65a
001B: push ax
001C: les bx, [bp+0x6]
001F: call far word [es:bx+0xf8]
0024: pop cx
0025: mov ax, 0x19
0028: push ax
0029: mov ax, 0x1
002C: push ax
002D: les bx, [bp+0x6]
0030: call far word [es:bx+0xd4]
0035: pop cx
0036: pop cx
0037: mov ax, 0x19
003A: push ax
003B: mov ax, 0x2
003E: push ax
003F: les bx, [bp+0x6]
0042: call far word [es:bx+0xd4]
0047: pop cx
0048: pop cx
0049: mov ax, 0x19
004C: push ax
004D: mov ax, 0x3
0050: push ax
0051: les bx, [bp+0x6]
0054: call far word [es:bx+0xd4]
0059: pop cx
005A: pop cx
005B: mov ax, 0x19
005E: push ax
005F: mov ax, 0x4
0062: push ax
0063: les bx, [bp+0x6]
0066: call far word [es:bx+0xd4]
006B: pop cx
006C: pop cx
006D: mov ax, 0x19
0070: push ax
0071: mov ax, 0x5
0074: push ax
0075: les bx, [bp+0x6]
0078: call far word [es:bx+0xd4]
007D: pop cx
007E: pop cx
007F: mov ax, 0x64
0082: push ax
0083: xor ax, ax
0085: push ax
0086: xor ax, ax
0088: push ax
0089: xor ax, ax
008B: push ax
008C: mov ax, 0xcf
008F: push ax
0090: mov ax, 0xd0
0093: push ax
0094: les bx, [bp+0x6]
0097: call far word [es:bx+0xd8]
009C: add sp, 0xc
009F: pop bp
00A0: retf

Functn14:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x5
0006: push ax
0007: mov ax, 0x49
000A: push ax
000B: mov ax, 0x2
000E: push ax
000F: les bx, [bp+0x6]
0012: call far word [es:bx]
0015: add sp, 0x6
0018: mov ax, 0x69e
001B: push ax
001C: les bx, [bp+0x6]
001F: call far word [es:bx+0xf8]
0024: pop cx
0025: mov ax, 0x6b5
0028: push ax
0029: les bx, [bp+0x6]
002C: call far word [es:bx+0xf4]
0031: pop cx
0032: mov ax, 0x2
0035: push ax
0036: mov ax, 0xb7
0039: push ax
003A: mov ax, 0x2
003D: push ax
003E: mov ax, 0x34
0041: push ax
0042: les bx, [bp+0x6]
0045: call far word [es:bx+0xbc]
004A: add sp, 0x8
004D: pop bp
004E: retf

Functn15:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x6ba
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0x6d1
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xf4]
001C: pop cx
001D: mov ax, 0x2
0020: push ax
0021: mov ax, 0xd6
0024: push ax
0025: mov ax, 0x2
0028: push ax
0029: mov ax, 0x34
002C: push ax
002D: les bx, [bp+0x6]
0030: call far word [es:bx+0xbc]
0035: add sp, 0x8
0038: pop bp
0039: retf

Functn16:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x6d9
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0x6f0
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xf4]
001C: pop cx
001D: mov ax, 0x3
0020: push ax
0021: mov ax, 0xd0
0024: push ax
0025: mov ax, 0x2
0028: push ax
0029: mov ax, 0x34
002C: push ax
002D: les bx, [bp+0x6]
0030: call far word [es:bx+0xbc]
0035: add sp, 0x8
0038: pop bp
0039: retf

Functn17:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x6f6
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0x70d
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xf4]
001C: pop cx
001D: xor ax, ax
001F: push ax
0020: mov ax, 0x68
0023: push ax
0024: mov ax, 0x2
0027: push ax
0028: mov ax, 0x34
002B: push ax
002C: les bx, [bp+0x6]
002F: call far word [es:bx+0xbc]
0034: add sp, 0x8
0037: pop bp
0038: retf

Functn18:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x714
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0x72b
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xf4]
001C: pop cx
001D: mov ax, 0x2
0020: push ax
0021: mov ax, 0xad
0024: push ax
0025: mov ax, 0x2
0028: push ax
0029: mov ax, 0x34
002C: push ax
002D: les bx, [bp+0x6]
0030: call far word [es:bx+0xbc]
0035: add sp, 0x8
0038: pop bp
0039: retf

Functn19:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x72f
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0x746
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xf4]
001C: pop cx
001D: xor ax, ax
001F: push ax
0020: mov ax, 0x7e
0023: push ax
0024: mov ax, 0x2
0027: push ax
0028: mov ax, 0x34
002B: push ax
002C: les bx, [bp+0x6]
002F: call far word [es:bx+0xbc]
0034: add sp, 0x8
0037: pop bp
0038: retf

Functn1A:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x750
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0x767
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xf4]
001C: pop cx
001D: xor ax, ax
001F: push ax
0020: mov ax, 0x5e
0023: push ax
0024: mov ax, 0x2
0027: push ax
0028: mov ax, 0x34
002B: push ax
002C: les bx, [bp+0x6]
002F: call far word [es:bx+0xbc]
0034: add sp, 0x8
0037: pop bp
0038: retf

Functn1B:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x76f
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0x786
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xf4]
001C: pop cx
001D: mov ax, 0x2
0020: push ax
0021: mov ax, 0xc2
0024: push ax
0025: mov ax, 0x2
0028: push ax
0029: mov ax, 0x34
002C: push ax
002D: les bx, [bp+0x6]
0030: call far word [es:bx+0xbc]
0035: add sp, 0x8
0038: pop bp
0039: retf

Functn1C:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x52
0006: push ax
0007: mov ax, 0x2
000A: push ax
000B: les bx, [bp+0x6]
000E: call far word [es:bx+0x4]
0012: pop cx
0013: pop cx
0014: or ax, ax
0016: jz 0x64
0018: mov ax, 0x53
001B: push ax
001C: mov ax, 0x2
001F: push ax
0020: les bx, [bp+0x6]
0023: call far word [es:bx+0x4]
0027: pop cx
0028: pop cx
0029: or ax, ax
002B: jz 0x64
002D: mov ax, 0x78f
0030: push ax
0031: les bx, [bp+0x6]
0034: call far word [es:bx+0xf8]
0039: pop cx
003A: mov ax, 0x7c0
003D: push ax
003E: les bx, [bp+0x6]
0041: call far word [es:bx+0xf8]
0046: pop cx
0047: mov ax, 0x2
004A: push ax
004B: mov ax, 0x56
004E: push ax
004F: mov ax, 0x2
0052: push ax
0053: mov ax, 0x33
0056: push ax
0057: les bx, [bp+0x6]
005A: call far word [es:bx+0xbc]
005F: add sp, 0x8
0062: jmp 0x71
0064: mov ax, 0x7e6
0067: push ax
0068: les bx, [bp+0x6]
006B: call far word [es:bx+0xf8]
0070: pop cx
0071: pop bp
0072: retf

Functn1D:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x839
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0x850
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xf4]
001C: pop cx
001D: mov ax, 0x2
0020: push ax
0021: mov ax, 0x36
0024: push ax
0025: mov ax, 0x2
0028: push ax
0029: mov ax, 0x34
002C: push ax
002D: les bx, [bp+0x6]
0030: call far word [es:bx+0xbc]
0035: add sp, 0x8
0038: pop bp
0039: retf

Functn1E:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x856
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0x86d
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xf4]
001C: pop cx
001D: xor ax, ax
001F: push ax
0020: mov ax, 0x3b
0023: push ax
0024: mov ax, 0x2
0027: push ax
0028: mov ax, 0x34
002B: push ax
002C: les bx, [bp+0x6]
002F: call far word [es:bx+0xbc]
0034: add sp, 0x8
0037: pop bp
0038: retf

Functn1F:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x873
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0x88a
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xf4]
001C: pop cx
001D: xor ax, ax
001F: push ax
0020: mov ax, 0x2c
0023: push ax
0024: mov ax, 0x2
0027: push ax
0028: mov ax, 0x34
002B: push ax
002C: les bx, [bp+0x6]
002F: call far word [es:bx+0xbc]
0034: add sp, 0x8
0037: pop bp
0038: retf

Functn20:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x894
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0x8ab
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xf4]
001C: pop cx
001D: mov ax, 0x3
0020: push ax
0021: mov ax, 0x3e
0024: push ax
0025: mov ax, 0x2
0028: push ax
0029: mov ax, 0x34
002C: push ax
002D: les bx, [bp+0x6]
0030: call far word [es:bx+0xbc]
0035: add sp, 0x8
0038: pop bp
0039: retf

Functn21:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x8b1
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0x8c8
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xf4]
001C: pop cx
001D: xor ax, ax
001F: push ax
0020: mov ax, 0x8e
0023: push ax
0024: mov ax, 0x2
0027: push ax
0028: mov ax, 0x34
002B: push ax
002C: les bx, [bp+0x6]
002F: call far word [es:bx+0xbc]
0034: add sp, 0x8
0037: pop bp
0038: retf

Functn22:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x8cc
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0x8e3
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xf4]
001C: pop cx
001D: mov ax, 0x2
0020: push ax
0021: mov ax, 0xfd
0024: push ax
0025: mov ax, 0x2
0028: push ax
0029: mov ax, 0x34
002C: push ax
002D: les bx, [bp+0x6]
0030: call far word [es:bx+0xbc]
0035: add sp, 0x8
0038: pop bp
0039: retf

Functn23:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x1a
0006: push ax
0007: mov ax, 0x1
000A: push ax
000B: les bx, [bp+0x6]
000E: call far word [es:bx+0xd4]
0013: pop cx
0014: pop cx
0015: mov ax, 0x1a
0018: push ax
0019: mov ax, 0x2
001C: push ax
001D: les bx, [bp+0x6]
0020: call far word [es:bx+0xd4]
0025: pop cx
0026: pop cx
0027: mov ax, 0x1a
002A: push ax
002B: mov ax, 0x3
002E: push ax
002F: les bx, [bp+0x6]
0032: call far word [es:bx+0xd4]
0037: pop cx
0038: pop cx
0039: mov ax, 0x1a
003C: push ax
003D: mov ax, 0x4
0040: push ax
0041: les bx, [bp+0x6]
0044: call far word [es:bx+0xd4]
0049: pop cx
004A: pop cx
004B: mov ax, 0x1b
004E: push ax
004F: mov ax, 0x5
0052: push ax
0053: les bx, [bp+0x6]
0056: call far word [es:bx+0xd4]
005B: pop cx
005C: pop cx
005D: mov ax, 0xfa0
0060: push ax
0061: xor ax, ax
0063: push ax
0064: xor ax, ax
0066: push ax
0067: mov ax, 0xd0
006A: push ax
006B: mov ax, 0xc8
006E: push ax
006F: mov ax, 0xc6
0072: push ax
0073: les bx, [bp+0x6]
0076: call far word [es:bx+0xd8]
007B: add sp, 0xc
007E: pop bp
007F: retf

Functn24:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x1c
0006: push ax
0007: mov ax, 0x1
000A: push ax
000B: les bx, [bp+0x6]
000E: call far word [es:bx+0xd4]
0013: pop cx
0014: pop cx
0015: mov ax, 0x1c
0018: push ax
0019: mov ax, 0x2
001C: push ax
001D: les bx, [bp+0x6]
0020: call far word [es:bx+0xd4]
0025: pop cx
0026: pop cx
0027: mov ax, 0x1c
002A: push ax
002B: mov ax, 0x3
002E: push ax
002F: les bx, [bp+0x6]
0032: call far word [es:bx+0xd4]
0037: pop cx
0038: pop cx
0039: mov ax, 0x7
003C: push ax
003D: mov ax, 0x5
0040: push ax
0041: les bx, [bp+0x6]
0044: call far word [es:bx+0xd4]
0049: pop cx
004A: pop cx
004B: mov ax, 0x9
004E: push ax
004F: mov ax, 0x6
0052: push ax
0053: les bx, [bp+0x6]
0056: call far word [es:bx+0xd4]
005B: pop cx
005C: pop cx
005D: mov ax, 0x1f40
0060: push ax
0061: xor ax, ax
0063: push ax
0064: mov ax, 0xcf
0067: push ax
0068: mov ax, 0xcf
006B: push ax
006C: mov ax, 0xbc
006F: push ax
0070: mov ax, 0xc7
0073: push ax
0074: les bx, [bp+0x6]
0077: call far word [es:bx+0xd8]
007C: add sp, 0xc
007F: pop bp
0080: retf

Functn25:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x8e9
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0x900
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xf4]
001C: pop cx
001D: mov ax, 0x1
0020: push ax
0021: mov ax, 0x49
0024: push ax
0025: mov ax, 0x2
0028: push ax
0029: les bx, [bp+0x6]
002C: call far word [es:bx]
002F: add sp, 0x6
0032: mov ax, 0x2
0035: push ax
0036: mov ax, 0x27
0039: push ax
003A: mov ax, 0x2
003D: push ax
003E: mov ax, 0x34
0041: push ax
0042: les bx, [bp+0x6]
0045: call far word [es:bx+0xbc]
004A: add sp, 0x8
004D: pop bp
004E: retf

Functn26:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x906
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0x91d
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xf4]
001C: pop cx
001D: mov ax, 0x2
0020: push ax
0021: mov ax, 0xcc
0024: push ax
0025: mov ax, 0x2
0028: push ax
0029: mov ax, 0x34
002C: push ax
002D: les bx, [bp+0x6]
0030: call far word [es:bx+0xbc]
0035: add sp, 0x8
0038: pop bp
0039: retf

Functn27:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x49
0006: push ax
0007: mov ax, 0x2
000A: push ax
000B: les bx, [bp+0x6]
000E: call far word [es:bx+0x4]
0012: pop cx
0013: pop cx
0014: cmp ax, 0x1
0017: jnz 0x4e
0019: mov ax, 0x926
001C: push ax
001D: les bx, [bp+0x6]
0020: call far word [es:bx+0xf8]
0025: pop cx
0026: mov ax, 0x93d
0029: push ax
002A: les bx, [bp+0x6]
002D: call far word [es:bx+0xf4]
0032: pop cx
0033: mov ax, 0x2
0036: push ax
0037: mov ax, 0xe6
003A: push ax
003B: mov ax, 0x2
003E: push ax
003F: mov ax, 0x34
0042: push ax
0043: les bx, [bp+0x6]
0046: call far word [es:bx+0xbc]
004B: add sp, 0x8
004E: pop bp
004F: retf

Functn28:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x944
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0x95b
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xf4]
001C: pop cx
001D: mov ax, 0x1
0020: push ax
0021: mov ax, 0x7
0024: push ax
0025: mov ax, 0x2
0028: push ax
0029: mov ax, 0x34
002C: push ax
002D: les bx, [bp+0x6]
0030: call far word [es:bx+0xbc]
0035: add sp, 0x8
0038: pop bp
0039: retf

Functn29:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x962
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0x979
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xf4]
001C: pop cx
001D: xor ax, ax
001F: push ax
0020: mov ax, 0x1d
0023: push ax
0024: mov ax, 0x2
0027: push ax
0028: mov ax, 0x34
002B: push ax
002C: les bx, [bp+0x6]
002F: call far word [es:bx+0xbc]
0034: add sp, 0x8
0037: pop bp
0038: retf

Functn2A:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x981
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0x998
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xf4]
001C: pop cx
001D: mov ax, 0x2
0020: push ax
0021: mov ax, 0xbd
0024: push ax
0025: mov ax, 0x2
0028: push ax
0029: mov ax, 0x34
002C: push ax
002D: les bx, [bp+0x6]
0030: call far word [es:bx+0xbc]
0035: add sp, 0x8
0038: pop bp
0039: retf

Functn2B:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x9a0
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0x9b7
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xf4]
001C: pop cx
001D: mov ax, 0x1
0020: push ax
0021: xor ax, ax
0023: push ax
0024: mov ax, 0x2
0027: push ax
0028: mov ax, 0x34
002B: push ax
002C: les bx, [bp+0x6]
002F: call far word [es:bx+0xbc]
0034: add sp, 0x8
0037: pop bp
0038: retf

Functn2C:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x9c0
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0x9d7
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xf4]
001C: pop cx
001D: xor ax, ax
001F: push ax
0020: mov ax, 0x1d
0023: push ax
0024: mov ax, 0x2
0027: push ax
0028: mov ax, 0x34
002B: push ax
002C: les bx, [bp+0x6]
002F: call far word [es:bx+0xbc]
0034: add sp, 0x8
0037: pop bp
0038: retf

Functn2D:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x9dd
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0x9f4
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xf4]
001C: pop cx
001D: mov ax, 0x2
0020: push ax
0021: mov ax, 0xbd
0024: push ax
0025: mov ax, 0x2
0028: push ax
0029: mov ax, 0x34
002C: push ax
002D: les bx, [bp+0x6]
0030: call far word [es:bx+0xbc]
0035: add sp, 0x8
0038: pop bp
0039: retf

Functn2E:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x9f9
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0xa10
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xf4]
001C: pop cx
001D: mov ax, 0x1
0020: push ax
0021: mov ax, 0x7
0024: push ax
0025: mov ax, 0x2
0028: push ax
0029: mov ax, 0x34
002C: push ax
002D: les bx, [bp+0x6]
0030: call far word [es:bx+0xbc]
0035: add sp, 0x8
0038: pop bp
0039: retf

Functn2F:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0xa1a
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0xa31
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xf4]
001C: pop cx
001D: mov ax, 0x1
0020: push ax
0021: mov ax, 0x7
0024: push ax
0025: mov ax, 0x2
0028: push ax
0029: mov ax, 0x34
002C: push ax
002D: les bx, [bp+0x6]
0030: call far word [es:bx+0xbc]
0035: add sp, 0x8
0038: pop bp
0039: retf

Functn30:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0xa36
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0xa4d
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xf4]
001C: pop cx
001D: mov ax, 0x1
0020: push ax
0021: xor ax, ax
0023: push ax
0024: mov ax, 0x2
0027: push ax
0028: mov ax, 0x34
002B: push ax
002C: les bx, [bp+0x6]
002F: call far word [es:bx+0xbc]
0034: add sp, 0x8
0037: pop bp
0038: retf

Functn31:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x18
0006: push ax
0007: mov ax, 0x1
000A: push ax
000B: les bx, [bp+0x6]
000E: call far word [es:bx+0xd4]
0013: pop cx
0014: pop cx
0015: mov ax, 0x18
0018: push ax
0019: mov ax, 0x2
001C: push ax
001D: les bx, [bp+0x6]
0020: call far word [es:bx+0xd4]
0025: pop cx
0026: pop cx
0027: mov ax, 0x1e
002A: push ax
002B: mov ax, 0x3
002E: push ax
002F: les bx, [bp+0x6]
0032: call far word [es:bx+0xd4]
0037: pop cx
0038: pop cx
0039: mov ax, 0x21
003C: push ax
003D: mov ax, 0x5
0040: push ax
0041: les bx, [bp+0x6]
0044: call far word [es:bx+0xd4]
0049: pop cx
004A: pop cx
004B: pop bp
004C: retf

Functn33:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x1e
0006: push ax
0007: mov ax, 0x1
000A: push ax
000B: les bx, [bp+0x6]
000E: call far word [es:bx+0xd4]
0013: pop cx
0014: pop cx
0015: mov ax, 0x1e
0018: push ax
0019: mov ax, 0x2
001C: push ax
001D: les bx, [bp+0x6]
0020: call far word [es:bx+0xd4]
0025: pop cx
0026: pop cx
0027: mov ax, 0x18
002A: push ax
002B: mov ax, 0x3
002E: push ax
002F: les bx, [bp+0x6]
0032: call far word [es:bx+0xd4]
0037: pop cx
0038: pop cx
0039: mov ax, 0x18
003C: push ax
003D: mov ax, 0x4
0040: push ax
0041: les bx, [bp+0x6]
0044: call far word [es:bx+0xd4]
0049: pop cx
004A: pop cx
004B: mov ax, 0x21
004E: push ax
004F: mov ax, 0x5
0052: push ax
0053: les bx, [bp+0x6]
0056: call far word [es:bx+0xd4]
005B: pop cx
005C: pop cx
005D: mov ax, 0x21
0060: push ax
0061: mov ax, 0x6
0064: push ax
0065: les bx, [bp+0x6]
0068: call far word [es:bx+0xd4]
006D: pop cx
006E: pop cx
006F: mov ax, 0x64
0072: push ax
0073: xor ax, ax
0075: push ax
0076: xor ax, ax
0078: push ax
0079: xor ax, ax
007B: push ax
007C: mov ax, 0xcf
007F: push ax
0080: mov ax, 0xb4
0083: push ax
0084: les bx, [bp+0x6]
0087: call far word [es:bx+0xd8]
008C: add sp, 0xc
008F: pop bp
0090: retf

Functn34:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x1d
0006: push ax
0007: mov ax, 0x1
000A: push ax
000B: les bx, [bp+0x6]
000E: call far word [es:bx+0xd4]
0013: pop cx
0014: pop cx
0015: mov ax, 0x1d
0018: push ax
0019: mov ax, 0x2
001C: push ax
001D: les bx, [bp+0x6]
0020: call far word [es:bx+0xd4]
0025: pop cx
0026: pop cx
0027: mov ax, 0x1d
002A: push ax
002B: mov ax, 0x3
002E: push ax
002F: les bx, [bp+0x6]
0032: call far word [es:bx+0xd4]
0037: pop cx
0038: pop cx
0039: mov ax, 0x1d
003C: push ax
003D: mov ax, 0x4
0040: push ax
0041: les bx, [bp+0x6]
0044: call far word [es:bx+0xd4]
0049: pop cx
004A: pop cx
004B: mov ax, 0x18
004E: push ax
004F: mov ax, 0x5
0052: push ax
0053: les bx, [bp+0x6]
0056: call far word [es:bx+0xd4]
005B: pop cx
005C: pop cx
005D: mov ax, 0x18
0060: push ax
0061: mov ax, 0x6
0064: push ax
0065: les bx, [bp+0x6]
0068: call far word [es:bx+0xd4]
006D: pop cx
006E: pop cx
006F: mov ax, 0x64
0072: push ax
0073: xor ax, ax
0075: push ax
0076: xor ax, ax
0078: push ax
0079: xor ax, ax
007B: push ax
007C: mov ax, 0xcf
007F: push ax
0080: mov ax, 0xc6
0083: push ax
0084: les bx, [bp+0x6]
0087: call far word [es:bx+0xd8]
008C: add sp, 0xc
008F: pop bp
0090: retf

Functn35:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x1e
0006: push ax
0007: mov ax, 0x1
000A: push ax
000B: les bx, [bp+0x6]
000E: call far word [es:bx+0xd4]
0013: pop cx
0014: pop cx
0015: mov ax, 0x1e
0018: push ax
0019: mov ax, 0x2
001C: push ax
001D: les bx, [bp+0x6]
0020: call far word [es:bx+0xd4]
0025: pop cx
0026: pop cx
0027: mov ax, 0x18
002A: push ax
002B: mov ax, 0x5
002E: push ax
002F: les bx, [bp+0x6]
0032: call far word [es:bx+0xd4]
0037: pop cx
0038: pop cx
0039: mov ax, 0x64
003C: push ax
003D: xor ax, ax
003F: push ax
0040: xor ax, ax
0042: push ax
0043: xor ax, ax
0045: push ax
0046: mov ax, 0xcf
0049: push ax
004A: mov ax, 0xc8
004D: push ax
004E: les bx, [bp+0x6]
0051: call far word [es:bx+0xd8]
0056: add sp, 0xc
0059: pop bp
005A: retf

Functn36:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0xa53
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: les bx, [bp+0x6]
0013: call far word [es:bx+0x74]
0017: push ax
0018: les bx, [bp+0x6]
001B: call far word [es:bx+0x90]
0020: pop cx
0021: pop bp
0022: retf

Functn37:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x20
0006: push ax
0007: mov ax, 0x1
000A: push ax
000B: les bx, [bp+0x6]
000E: call far word [es:bx+0xd4]
0013: pop cx
0014: pop cx
0015: mov ax, 0x20
0018: push ax
0019: mov ax, 0x2
001C: push ax
001D: les bx, [bp+0x6]
0020: call far word [es:bx+0xd4]
0025: pop cx
0026: pop cx
0027: mov ax, 0x1f
002A: push ax
002B: mov ax, 0x3
002E: push ax
002F: les bx, [bp+0x6]
0032: call far word [es:bx+0xd4]
0037: pop cx
0038: pop cx
0039: mov ax, 0x1f
003C: push ax
003D: mov ax, 0x4
0040: push ax
0041: les bx, [bp+0x6]
0044: call far word [es:bx+0xd4]
0049: pop cx
004A: pop cx
004B: mov ax, 0x20
004E: push ax
004F: mov ax, 0x6
0052: push ax
0053: les bx, [bp+0x6]
0056: call far word [es:bx+0xd4]
005B: pop cx
005C: pop cx
005D: mov ax, 0x64
0060: push ax
0061: xor ax, ax
0063: push ax
0064: xor ax, ax
0066: push ax
0067: xor ax, ax
0069: push ax
006A: mov ax, 0xd1
006D: push ax
006E: mov ax, 0xcf
0071: push ax
0072: les bx, [bp+0x6]
0075: call far word [es:bx+0xd8]
007A: add sp, 0xc
007D: pop bp
007E: retf

Functn3A:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0xa72
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0xa94
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xf8]
001C: pop cx
001D: pop bp
001E: retf

Functn3C:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x29
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xfc]
000F: pop cx
0010: mov ax, 0xae3
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xf8]
001C: pop cx
001D: mov ax, 0xaf6
0020: push ax
0021: les bx, [bp+0x6]
0024: call far word [es:bx+0xf8]
0029: pop cx
002A: pop bp
002B: retf

Functn3D:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x1f
0006: push ax
0007: mov ax, 0x1
000A: push ax
000B: les bx, [bp+0x6]
000E: call far word [es:bx+0xd4]
0013: pop cx
0014: pop cx
0015: mov ax, 0x20
0018: push ax
0019: mov ax, 0x2
001C: push ax
001D: les bx, [bp+0x6]
0020: call far word [es:bx+0xd4]
0025: pop cx
0026: pop cx
0027: mov ax, 0x1f
002A: push ax
002B: mov ax, 0x4
002E: push ax
002F: les bx, [bp+0x6]
0032: call far word [es:bx+0xd4]
0037: pop cx
0038: pop cx
0039: mov ax, 0x2
003C: push ax
003D: mov ax, 0x5
0040: push ax
0041: les bx, [bp+0x6]
0044: call far word [es:bx+0xd4]
0049: pop cx
004A: pop cx
004B: mov ax, 0x2
004E: push ax
004F: mov ax, 0x6
0052: push ax
0053: les bx, [bp+0x6]
0056: call far word [es:bx+0xd4]
005B: pop cx
005C: pop cx
005D: mov ax, 0x64
0060: push ax
0061: xor ax, ax
0063: push ax
0064: mov ax, 0xcf
0067: push ax
0068: mov ax, 0xcf
006B: push ax
006C: mov ax, 0xd0
006F: push ax
0070: mov ax, 0xd0
0073: push ax
0074: les bx, [bp+0x6]
0077: call far word [es:bx+0xd8]
007C: add sp, 0xc
007F: pop bp
0080: retf

Functn40:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x1e
0006: push ax
0007: mov ax, 0x1
000A: push ax
000B: les bx, [bp+0x6]
000E: call far word [es:bx+0xd4]
0013: pop cx
0014: pop cx
0015: mov ax, 0x1e
0018: push ax
0019: mov ax, 0x2
001C: push ax
001D: les bx, [bp+0x6]
0020: call far word [es:bx+0xd4]
0025: pop cx
0026: pop cx
0027: mov ax, 0x1e
002A: push ax
002B: mov ax, 0x3
002E: push ax
002F: les bx, [bp+0x6]
0032: call far word [es:bx+0xd4]
0037: pop cx
0038: pop cx
0039: mov ax, 0x18
003C: push ax
003D: mov ax, 0x4
0040: push ax
0041: les bx, [bp+0x6]
0044: call far word [es:bx+0xd4]
0049: pop cx
004A: pop cx
004B: mov ax, 0x19
004E: push ax
004F: mov ax, 0x5
0052: push ax
0053: les bx, [bp+0x6]
0056: call far word [es:bx+0xd4]
005B: pop cx
005C: pop cx
005D: mov ax, 0x19
0060: push ax
0061: mov ax, 0x6
0064: push ax
0065: les bx, [bp+0x6]
0068: call far word [es:bx+0xd4]
006D: pop cx
006E: pop cx
006F: pop bp
0070: retf

Functn44:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x24
0006: push ax
0007: mov ax, 0x1
000A: push ax
000B: les bx, [bp+0x6]
000E: call far word [es:bx+0xd4]
0013: pop cx
0014: pop cx
0015: mov ax, 0x25
0018: push ax
0019: mov ax, 0x2
001C: push ax
001D: les bx, [bp+0x6]
0020: call far word [es:bx+0xd4]
0025: pop cx
0026: pop cx
0027: mov ax, 0x22
002A: push ax
002B: mov ax, 0x3
002E: push ax
002F: les bx, [bp+0x6]
0032: call far word [es:bx+0xd4]
0037: pop cx
0038: pop cx
0039: mov ax, 0x23
003C: push ax
003D: mov ax, 0x6
0040: push ax
0041: les bx, [bp+0x6]
0044: call far word [es:bx+0xd4]
0049: pop cx
004A: pop cx
004B: pop bp
004C: retf

Functn46:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x1
0006: push ax
0007: mov ax, 0x1
000A: push ax
000B: les bx, [bp+0x6]
000E: call far word [es:bx+0x4]
0012: pop cx
0013: pop cx
0014: or ax, ax
0016: jnz 0x1b
0018: jmp 0xa5
001B: mov ax, 0x2
001E: push ax
001F: mov ax, 0x1
0022: push ax
0023: les bx, [bp+0x6]
0026: call far word [es:bx+0x4]
002A: pop cx
002B: pop cx
002C: or ax, ax
002E: jz 0xa5
0030: mov ax, 0x3
0033: push ax
0034: mov ax, 0x1
0037: push ax
0038: les bx, [bp+0x6]
003B: call far word [es:bx+0x4]
003F: pop cx
0040: pop cx
0041: or ax, ax
0043: jz 0xa5
0045: mov ax, 0x4
0048: push ax
0049: mov ax, 0x1
004C: push ax
004D: les bx, [bp+0x6]
0050: call far word [es:bx+0x4]
0054: pop cx
0055: pop cx
0056: or ax, ax
0058: jz 0xa5
005A: mov ax, 0x1
005D: push ax
005E: les bx, [bp+0x6]
0061: call far word [es:bx+0x24]
0065: push ax
0066: les bx, [bp+0x6]
0069: call far word [es:bx+0x20]
006D: push ax
006E: les bx, [bp+0x6]
0071: call far word [es:bx+0x2c]
0075: add sp, 0x6
0078: les bx, [bp+0x6]
007B: call far word [es:bx+0x24]
007F: push ax
0080: les bx, [bp+0x6]
0083: call far word [es:bx+0x20]
0087: push ax
0088: mov ax, 0x1
008B: push ax
008C: les bx, [bp+0x6]
008F: call far word [es:bx+0x30]
0093: add sp, 0x6
0096: mov ax, 0xb26
0099: push ax
009A: les bx, [bp+0x6]
009D: call far word [es:bx+0xf8]
00A2: pop cx
00A3: jmp 0xb2
00A5: mov ax, 0xb3d
00A8: push ax
00A9: les bx, [bp+0x6]
00AC: call far word [es:bx+0xf8]
00B1: pop cx
00B2: pop bp
00B3: retf

Functn47:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x19
0006: push ax
0007: mov ax, 0x1
000A: push ax
000B: les bx, [bp+0x6]
000E: call far word [es:bx+0xd4]
0013: pop cx
0014: pop cx
0015: mov ax, 0x19
0018: push ax
0019: mov ax, 0x2
001C: push ax
001D: les bx, [bp+0x6]
0020: call far word [es:bx+0xd4]
0025: pop cx
0026: pop cx
0027: mov ax, 0x18
002A: push ax
002B: mov ax, 0x3
002E: push ax
002F: les bx, [bp+0x6]
0032: call far word [es:bx+0xd4]
0037: pop cx
0038: pop cx
0039: mov ax, 0x18
003C: push ax
003D: mov ax, 0x4
0040: push ax
0041: les bx, [bp+0x6]
0044: call far word [es:bx+0xd4]
0049: pop cx
004A: pop cx
004B: mov ax, 0x19
004E: push ax
004F: mov ax, 0x5
0052: push ax
0053: les bx, [bp+0x6]
0056: call far word [es:bx+0xd4]
005B: pop cx
005C: pop cx
005D: mov ax, 0x19
0060: push ax
0061: mov ax, 0x6
0064: push ax
0065: les bx, [bp+0x6]
0068: call far word [es:bx+0xd4]
006D: pop cx
006E: pop cx
006F: pop bp
0070: retf

Functn48:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x19
0006: push ax
0007: mov ax, 0x1
000A: push ax
000B: les bx, [bp+0x6]
000E: call far word [es:bx+0xd4]
0013: pop cx
0014: pop cx
0015: mov ax, 0x19
0018: push ax
0019: mov ax, 0x2
001C: push ax
001D: les bx, [bp+0x6]
0020: call far word [es:bx+0xd4]
0025: pop cx
0026: pop cx
0027: mov ax, 0x27
002A: push ax
002B: mov ax, 0x5
002E: push ax
002F: les bx, [bp+0x6]
0032: call far word [es:bx+0xd4]
0037: pop cx
0038: pop cx
0039: mov ax, 0x8b
003C: push ax
003D: mov ax, 0x2
0040: push ax
0041: les bx, [bp+0x6]
0044: call far word [es:bx+0x4]
0048: pop cx
0049: pop cx
004A: or ax, ax
004C: jz 0x6e
004E: xor ax, ax
0050: push ax
0051: xor ax, ax
0053: push ax
0054: xor ax, ax
0056: push ax
0057: xor ax, ax
0059: push ax
005A: xor ax, ax
005C: push ax
005D: mov ax, 0xcf
0060: push ax
0061: les bx, [bp+0x6]
0064: call far word [es:bx+0xd8]
0069: add sp, 0xc
006C: jmp 0xb3
006E: mov ax, 0x1
0071: push ax
0072: mov ax, 0x8b
0075: push ax
0076: mov ax, 0x2
0079: push ax
007A: les bx, [bp+0x6]
007D: call far word [es:bx]
0080: add sp, 0x6
0083: xor ax, ax
0085: push ax
0086: xor ax, ax
0088: push ax
0089: xor ax, ax
008B: push ax
008C: xor ax, ax
008E: push ax
008F: mov ax, 0xb7
0092: push ax
0093: mov ax, 0xd0
0096: push ax
0097: les bx, [bp+0x6]
009A: call far word [es:bx+0xd8]
009F: add sp, 0xc
00A2: xor ax, ax
00A4: mov dx, 0x2710
00A7: push ax
00A8: push dx
00A9: les bx, [bp+0x6]
00AC: call far word [es:bx+0x98]
00B1: pop cx
00B2: pop cx
00B3: pop bp
00B4: retf

Functn49:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x19
0006: push ax
0007: mov ax, 0x1
000A: push ax
000B: les bx, [bp+0x6]
000E: call far word [es:bx+0xd4]
0013: pop cx
0014: pop cx
0015: mov ax, 0x19
0018: push ax
0019: mov ax, 0x2
001C: push ax
001D: les bx, [bp+0x6]
0020: call far word [es:bx+0xd4]
0025: pop cx
0026: pop cx
0027: mov ax, 0x27
002A: push ax
002B: mov ax, 0x5
002E: push ax
002F: les bx, [bp+0x6]
0032: call far word [es:bx+0xd4]
0037: pop cx
0038: pop cx
0039: mov ax, 0x8c
003C: push ax
003D: mov ax, 0x2
0040: push ax
0041: les bx, [bp+0x6]
0044: call far word [es:bx+0x4]
0048: pop cx
0049: pop cx
004A: or ax, ax
004C: jz 0x6e
004E: xor ax, ax
0050: push ax
0051: xor ax, ax
0053: push ax
0054: xor ax, ax
0056: push ax
0057: xor ax, ax
0059: push ax
005A: xor ax, ax
005C: push ax
005D: mov ax, 0xc6
0060: push ax
0061: les bx, [bp+0x6]
0064: call far word [es:bx+0xd8]
0069: add sp, 0xc
006C: jmp 0xb3
006E: mov ax, 0x1
0071: push ax
0072: mov ax, 0x8c
0075: push ax
0076: mov ax, 0x2
0079: push ax
007A: les bx, [bp+0x6]
007D: call far word [es:bx]
0080: add sp, 0x6
0083: xor ax, ax
0085: push ax
0086: xor ax, ax
0088: push ax
0089: xor ax, ax
008B: push ax
008C: xor ax, ax
008E: push ax
008F: mov ax, 0xcd
0092: push ax
0093: mov ax, 0xbd
0096: push ax
0097: les bx, [bp+0x6]
009A: call far word [es:bx+0xd8]
009F: add sp, 0xc
00A2: xor ax, ax
00A4: mov dx, 0x2710
00A7: push ax
00A8: push dx
00A9: les bx, [bp+0x6]
00AC: call far word [es:bx+0x98]
00B1: pop cx
00B2: pop cx
00B3: pop bp
00B4: retf

Functn4A:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x19
0006: push ax
0007: mov ax, 0x1
000A: push ax
000B: les bx, [bp+0x6]
000E: call far word [es:bx+0xd4]
0013: pop cx
0014: pop cx
0015: mov ax, 0x19
0018: push ax
0019: mov ax, 0x2
001C: push ax
001D: les bx, [bp+0x6]
0020: call far word [es:bx+0xd4]
0025: pop cx
0026: pop cx
0027: mov ax, 0x27
002A: push ax
002B: mov ax, 0x5
002E: push ax
002F: les bx, [bp+0x6]
0032: call far word [es:bx+0xd4]
0037: pop cx
0038: pop cx
0039: mov ax, 0x8d
003C: push ax
003D: mov ax, 0x2
0040: push ax
0041: les bx, [bp+0x6]
0044: call far word [es:bx+0x4]
0048: pop cx
0049: pop cx
004A: or ax, ax
004C: jz 0x6e
004E: xor ax, ax
0050: push ax
0051: xor ax, ax
0053: push ax
0054: xor ax, ax
0056: push ax
0057: xor ax, ax
0059: push ax
005A: xor ax, ax
005C: push ax
005D: mov ax, 0xd1
0060: push ax
0061: les bx, [bp+0x6]
0064: call far word [es:bx+0xd8]
0069: add sp, 0xc
006C: jmp 0xb3
006E: mov ax, 0x1
0071: push ax
0072: mov ax, 0x8d
0075: push ax
0076: mov ax, 0x2
0079: push ax
007A: les bx, [bp+0x6]
007D: call far word [es:bx]
0080: add sp, 0x6
0083: xor ax, ax
0085: push ax
0086: xor ax, ax
0088: push ax
0089: xor ax, ax
008B: push ax
008C: xor ax, ax
008E: push ax
008F: mov ax, 0xc7
0092: push ax
0093: mov ax, 0xb2
0096: push ax
0097: les bx, [bp+0x6]
009A: call far word [es:bx+0xd8]
009F: add sp, 0xc
00A2: xor ax, ax
00A4: mov dx, 0x2710
00A7: push ax
00A8: push dx
00A9: les bx, [bp+0x6]
00AC: call far word [es:bx+0x98]
00B1: pop cx
00B2: pop cx
00B3: pop bp
00B4: retf

Functn4B:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x19
0006: push ax
0007: mov ax, 0x1
000A: push ax
000B: les bx, [bp+0x6]
000E: call far word [es:bx+0xd4]
0013: pop cx
0014: pop cx
0015: mov ax, 0x19
0018: push ax
0019: mov ax, 0x2
001C: push ax
001D: les bx, [bp+0x6]
0020: call far word [es:bx+0xd4]
0025: pop cx
0026: pop cx
0027: mov ax, 0x27
002A: push ax
002B: mov ax, 0x5
002E: push ax
002F: les bx, [bp+0x6]
0032: call far word [es:bx+0xd4]
0037: pop cx
0038: pop cx
0039: mov ax, 0x8e
003C: push ax
003D: mov ax, 0x2
0040: push ax
0041: les bx, [bp+0x6]
0044: call far word [es:bx+0x4]
0048: pop cx
0049: pop cx
004A: or ax, ax
004C: jz 0x6e
004E: xor ax, ax
0050: push ax
0051: xor ax, ax
0053: push ax
0054: xor ax, ax
0056: push ax
0057: xor ax, ax
0059: push ax
005A: xor ax, ax
005C: push ax
005D: mov ax, 0xd0
0060: push ax
0061: les bx, [bp+0x6]
0064: call far word [es:bx+0xd8]
0069: add sp, 0xc
006C: jmp 0xb3
006E: mov ax, 0x1
0071: push ax
0072: mov ax, 0x8e
0075: push ax
0076: mov ax, 0x2
0079: push ax
007A: les bx, [bp+0x6]
007D: call far word [es:bx]
0080: add sp, 0x6
0083: xor ax, ax
0085: push ax
0086: xor ax, ax
0088: push ax
0089: xor ax, ax
008B: push ax
008C: xor ax, ax
008E: push ax
008F: mov ax, 0xac
0092: push ax
0093: mov ax, 0xb7
0096: push ax
0097: les bx, [bp+0x6]
009A: call far word [es:bx+0xd8]
009F: add sp, 0xc
00A2: xor ax, ax
00A4: mov dx, 0x2710
00A7: push ax
00A8: push dx
00A9: les bx, [bp+0x6]
00AC: call far word [es:bx+0x98]
00B1: pop cx
00B2: pop cx
00B3: pop bp
00B4: retf

Functn4C:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0xb7f
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0x27
0013: push ax
0014: mov ax, 0x1
0017: push ax
0018: les bx, [bp+0x6]
001B: call far word [es:bx+0xd4]
0020: pop cx
0021: pop cx
0022: mov ax, 0x27
0025: push ax
0026: mov ax, 0x2
0029: push ax
002A: les bx, [bp+0x6]
002D: call far word [es:bx+0xd4]
0032: pop cx
0033: pop cx
0034: mov ax, 0x27
0037: push ax
0038: mov ax, 0x3
003B: push ax
003C: les bx, [bp+0x6]
003F: call far word [es:bx+0xd4]
0044: pop cx
0045: pop cx
0046: mov ax, 0x27
0049: push ax
004A: mov ax, 0x4
004D: push ax
004E: les bx, [bp+0x6]
0051: call far word [es:bx+0xd4]
0056: pop cx
0057: pop cx
0058: mov ax, 0x28
005B: push ax
005C: mov ax, 0x5
005F: push ax
0060: les bx, [bp+0x6]
0063: call far word [es:bx+0xd4]
0068: pop cx
0069: pop cx
006A: mov ax, 0xf7
006D: push ax
006E: les bx, [bp+0x6]
0071: call far word [es:bx+0x50]
0075: pop cx
0076: or ax, ax
0078: jz 0x9a
007A: xor ax, ax
007C: push ax
007D: xor ax, ax
007F: push ax
0080: xor ax, ax
0082: push ax
0083: xor ax, ax
0085: push ax
0086: xor ax, ax
0088: push ax
0089: mov ax, 0xcf
008C: push ax
008D: les bx, [bp+0x6]
0090: call far word [es:bx+0xd8]
0095: add sp, 0xc
0098: jmp 0xf6
009A: xor ax, ax
009C: push ax
009D: xor ax, ax
009F: push ax
00A0: xor ax, ax
00A2: push ax
00A3: mov ax, 0xf7
00A6: push ax
00A7: mov ax, 0xca
00AA: push ax
00AB: mov ax, 0x2d
00AE: push ax
00AF: les bx, [bp+0x6]
00B2: call far word [es:bx+0xd8]
00B7: add sp, 0xc
00BA: mov ax, 0x89
00BD: push ax
00BE: mov ax, 0x2
00C1: push ax
00C2: les bx, [bp+0x6]
00C5: call far word [es:bx+0x4]
00C9: pop cx
00CA: pop cx
00CB: or ax, ax
00CD: jnz 0xf6
00CF: mov ax, 0x1
00D2: push ax
00D3: mov ax, 0x89
00D6: push ax
00D7: mov ax, 0x2
00DA: push ax
00DB: les bx, [bp+0x6]
00DE: call far word [es:bx]
00E1: add sp, 0x6
00E4: mov ax, 0xb
00E7: mov dx, 0x71b0
00EA: push ax
00EB: push dx
00EC: les bx, [bp+0x6]
00EF: call far word [es:bx+0x98]
00F4: pop cx
00F5: pop cx
00F6: pop bp
00F7: retf

Functn4D:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0xba9
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: pop bp
0011: retf

Functn4E:
0000: push bp
0001: mov bp, sp
0003: xor ax, ax
0005: push ax
0006: mov ax, 0x3f
0009: push ax
000A: mov ax, 0x1
000D: push ax
000E: mov ax, 0x34
0011: push ax
0012: les bx, [bp+0x6]
0015: call far word [es:bx+0xbc]
001A: add sp, 0x8
001D: pop bp
001E: retf

Functn4F:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0xbda
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: pop bp
0011: retf

Functn50:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x1
0006: push ax
0007: mov ax, 0x1
000A: push ax
000B: les bx, [bp+0x6]
000E: call far word [es:bx+0x4]
0012: pop cx
0013: pop cx
0014: or ax, ax
0016: jnz 0x2d
0018: mov ax, 0x1
001B: push ax
001C: mov ax, 0x1
001F: push ax
0020: mov ax, 0x1
0023: push ax
0024: les bx, [bp+0x6]
0027: call far word [es:bx]
002A: add sp, 0x6
002D: pop bp
002E: retf

Functn51:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x2
0006: push ax
0007: mov ax, 0x1
000A: push ax
000B: les bx, [bp+0x6]
000E: call far word [es:bx+0x4]
0012: pop cx
0013: pop cx
0014: or ax, ax
0016: jnz 0x2d
0018: mov ax, 0x1
001B: push ax
001C: mov ax, 0x2
001F: push ax
0020: mov ax, 0x1
0023: push ax
0024: les bx, [bp+0x6]
0027: call far word [es:bx]
002A: add sp, 0x6
002D: pop bp
002E: retf

Functn52:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x3
0006: push ax
0007: mov ax, 0x1
000A: push ax
000B: les bx, [bp+0x6]
000E: call far word [es:bx+0x4]
0012: pop cx
0013: pop cx
0014: or ax, ax
0016: jnz 0x2d
0018: mov ax, 0x1
001B: push ax
001C: mov ax, 0x3
001F: push ax
0020: mov ax, 0x1
0023: push ax
0024: les bx, [bp+0x6]
0027: call far word [es:bx]
002A: add sp, 0x6
002D: pop bp
002E: retf

Functn53:
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x4
0006: push ax
0007: mov ax, 0x1
000A: push ax
000B: les bx, [bp+0x6]
000E: call far word [es:bx+0x4]
0012: pop cx
0013: pop cx
0014: or ax, ax
0016: jnz 0x2d
0018: mov ax, 0x1
001B: push ax
001C: mov ax, 0x4
001F: push ax
0020: mov ax, 0x1
0023: push ax
0024: les bx, [bp+0x6]
0027: call far word [es:bx]
002A: add sp, 0x6
002D: pop bp
002E: retf

