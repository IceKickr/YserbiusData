STRSTELE_01:
000A  0000        BEGIN
000D  0003        SetMoveMap(0x02, 0x01, 0x04, 0x01)
0028  001E        RETURN

STAIRSUP_02:
002A  0000        BEGIN
002D  0003        SetMoveMap(0x01, 0x2E, 0x06, 0x01)
0048  001E        RETURN

TELPORTE_03:
004A  0000        BEGIN
004D  0003        SetMoveMap(0x02, 0x07, 0x01, 0x02)
0068  001E        RETURN

TELPORTW_04:
006A  0000        BEGIN
006D  0003        SetMoveMap(00, 0x04, 0x01, 0x02)
0087  001D        RETURN

HIDNDOOR_05:
0089  0000        BEGIN
008C  0003        ax = UsedSkill(0x0D) // returns 0 if did not use, compares to 2nd op if did use
0098  000F        compare(ax, 0x0006)
009B  0012        If (result.above or result.equal) jump to 0063
009D  0014        ax = UsedSpell(0x17) // returns 0 if did not use on map, level if used
00A9  0020        RefreshCompareFlags(ax)
00AB  0022        If (result.notequal) jump to 0063
00AD  0024        ax = UsedItem(0xA2, 0xA2)
00C0  0037        If (result.notequal) jump to 0063
00C2  0039        ax = UsedItem(0xBD, 0xBD)
00D5  004C        If (result.notequal) jump to 0063
00D7  004E        ax = UsedItem(0xBE, 0xBE)
00EA  0061        If (result.equal) jump to 00A0
00EC  0063        SetMove2C(0x01, 0x02, 0x02)
0102  0079        Push(02)
0106  007D        ax = GetNextTile()
010D  0084        Push(ax)
010E  0085        Push(01)
0112  0089        SetUnblocked()
011C  0093        ShowMessage(0x03FC) = You found a hidden door in the east wall.
0129  00A0        RETURN

GOLDAENC_06:
012B  0000        BEGIN
012E  0003        ax = CheckState04(0x02, 0x16)
013F  0014        RefreshCompareFlags(ax)
0141  0016        If (result.notequal) jump to 0039
0143  0018        AddTreasure(0x00C8, 0x00, 0x00, 0x00, 0x00, 0xB5)
0162  0037        Jump to 007A
0164  0039        AddTreasure(0x0FA0, 0x00, 0x00, 0x00, 0x00, 0xCF)
0183  0058        SetState00(0x02, 0x16, 0x01)
0198  006D        ShowMessage(0x0426) = Rogues are splitting up some gold they stole.
01A5  007A        ax = PartyCount()
01AD  0082        compare(ax, 0x0001)
01B0  0085        If (result.notequal) jump to 00AE
01B2  0087        AddEncounter(0x1D, 0x01)
01C4  0099        AddEncounter(0x0A, 0x02)
01D6  00AB        Jump to 01C9
01D9  00AE        ax = PartyCount()
01E1  00B6        compare(ax, 0x0002)
01E4  00B9        If (result.notequal) jump to 00F4
01E6  00BB        AddEncounter(0x1E, 0x01)
01F8  00CD        AddEncounter(0x05, 0x02)
020A  00DF        AddEncounter(0x0D, 0x03)
021C  00F1        Jump to 01C9
021F  00F4        ax = PartyCount()
0227  00FC        compare(ax, 0x0003)
022A  00FF        If (result.notequal) jump to 015D
022C  0101        AddEncounter(0x1F, 0x01)
023E  0113        AddEncounter(0x0B, 0x02)
0250  0125        AddEncounter(0x04, 0x03)
0262  0137        AddEncounter(0x07, 0x04)
0274  0149        AddEncounter(0x0D, 0x05)
0286  015B        Jump to 01C9
0288  015D        AddEncounter(0x20, 0x01)
029A  016F        AddEncounter(0x0B, 0x02)
02AC  0181        AddEncounter(0x06, 0x03)
02BE  0193        AddEncounter(0x08, 0x04)
02D0  01A5        AddEncounter(0x0A, 0x05)
02E2  01B7        AddEncounter(0x0D, 0x06)
02F4  01C9        RETURN

FOUNTAIN_07:
02F6  0000        BEGIN
02F9  0003        ax = CheckState04(0x02, 0x1E)
030A  0014        compare(ax, 0x0001)
030D  0017        If (result.notequal) jump to 0035
030F  0019        ShowPortrait(0x0042)
031C  0026        ShowMessage(0x0454) = You take a sip from the fountain, but nothing happens.
0329  0033        Jump to 0075
032B  0035        ax = GetMaxHits()
0332  003C        AddHealth(ax)
033C  0046        SetState00(0x02, 0x1E, 0x01)
0351  005B        ShowPortrait(0x0042)
035E  0068        ShowMessage(0x048B) = You take a sip from the Healing Fountain and feel your Health improve quite a bit.
036B  0075        RETURN

LKPKDOOR_08:
036D  0000        BEGIN
0370  0003        ax = UsedItem(0xBF, 0xC4)
0383  0016        If (result.notequal) jump to 0029
0385  0018        ax = UsedSkill(0x0E) // returns 0 if did not use, compares to 2nd op if did use
0391  0024        compare(ax, 0x0006)
0394  0027        If (result.below) jump to 0074
0396  0029        Push(01)
039A  002D        ax = GetFacing()
03A1  0034        Push(ax)
03A2  0035        ax = GetNextTile()
03A9  003C        Push(ax)
03AA  003D        SetMove2C(stk[0], stk[1], stk[2])
03B4  0047        ax = GetFacing()
03BB  004E        Push(ax)
03BC  004F        ax = GetNextTile()
03C3  0056        Push(ax)
03C4  0057        Push(01)
03C8  005B        SetUnblocked()
03D2  0065        ShowMessage(0x04DE) = You skillfully pick the door lock.
03DF  0072        Jump to 009E
03E1  0074        Push(00)
03E4  0077        ax = GetFacing()
03EB  007E        Push(ax)
03EC  007F        ax = GetNextTile()
03F3  0086        Push(ax)
03F4  0087        SetMove2C(stk[0], stk[1], stk[2])
03FE  0091        ShowMessage(0x0501) = The door is locked.
040B  009E        RETURN

STRMNSTR_09:
040D  0000        BEGIN
0410  0003        ax = PartyCount()
0418  000B        compare(ax, 0x0001)
041B  000E        If (result.notequal) jump to 0025
041D  0010        AddEncounter(0x19, 0x01)
042F  0022        Jump to 0140
0432  0025        ax = PartyCount()
043A  002D        compare(ax, 0x0002)
043D  0030        If (result.notequal) jump to 006B
043F  0032        AddEncounter(0x19, 0x01)
0451  0044        AddEncounter(0x1A, 0x02)
0463  0056        AddEncounter(0x19, 0x03)
0475  0068        Jump to 0140
0478  006B        ax = PartyCount()
0480  0073        compare(ax, 0x0003)
0483  0076        If (result.notequal) jump to 00D4
0485  0078        AddEncounter(0x1A, 0x01)
0497  008A        AddEncounter(0x1A, 0x02)
04A9  009C        AddEncounter(0x1B, 0x03)
04BB  00AE        AddEncounter(0x1B, 0x04)
04CD  00C0        AddEncounter(0x19, 0x05)
04DF  00D2        Jump to 0140
04E1  00D4        AddEncounter(0x1C, 0x01)
04F3  00E6        AddEncounter(0x1C, 0x02)
0505  00F8        AddEncounter(0x1C, 0x03)
0517  010A        AddEncounter(0x1C, 0x04)
0529  011C        AddEncounter(0x19, 0x05)
053B  012E        AddEncounter(0x19, 0x06)
054D  0140        RETURN

VTFMNSTR_0A:
054F  0000        BEGIN
0552  0003        ax = PartyCount()
055A  000B        compare(ax, 0x0001)
055D  000E        If (result.notequal) jump to 0037
055F  0010        AddEncounter(0x1E, 0x01)
0571  0022        AddEncounter(0x1E, 0x02)
0583  0034        Jump to 0140
0586  0037        ax = PartyCount()
058E  003F        compare(ax, 0x0002)
0591  0042        If (result.notequal) jump to 007D
0593  0044        AddEncounter(0x1D, 0x01)
05A5  0056        AddEncounter(0x1E, 0x02)
05B7  0068        AddEncounter(0x20, 0x03)
05C9  007A        Jump to 0140
05CC  007D        ax = PartyCount()
05D4  0085        compare(ax, 0x0003)
05D7  0088        If (result.notequal) jump to 00D4
05D9  008A        AddEncounter(0x20, 0x01)
05EB  009C        AddEncounter(0x20, 0x02)
05FD  00AE        AddEncounter(0x1D, 0x03)
060F  00C0        AddEncounter(0x1D, 0x04)
0621  00D2        Jump to 0140
0623  00D4        AddEncounter(0x1D, 0x01)
0635  00E6        AddEncounter(0x1D, 0x02)
0647  00F8        AddEncounter(0x1E, 0x03)
0659  010A        AddEncounter(0x1F, 0x04)
066B  011C        AddEncounter(0x20, 0x05)
067D  012E        AddEncounter(0x20, 0x06)
068F  0140        RETURN

STRMNSTR_0B:
0691  0000        BEGIN
0694  0003        ax = PartyCount()
069C  000B        compare(ax, 0x0001)
069F  000E        If (result.notequal) jump to 0025
06A1  0010        AddEncounter(0x21, 0x01)
06B3  0022        Jump to 011C
06B6  0025        ax = PartyCount()
06BE  002D        compare(ax, 0x0002)
06C1  0030        If (result.notequal) jump to 0059
06C3  0032        AddEncounter(0x21, 0x01)
06D5  0044        AddEncounter(0x21, 0x02)
06E7  0056        Jump to 011C
06EA  0059        ax = PartyCount()
06F2  0061        compare(ax, 0x0003)
06F5  0064        If (result.notequal) jump to 00B0
06F7  0066        AddEncounter(0x24, 0x01)
0709  0078        AddEncounter(0x24, 0x02)
071B  008A        AddEncounter(0x21, 0x03)
072D  009C        AddEncounter(0x23, 0x04)
073F  00AE        Jump to 011C
0741  00B0        AddEncounter(0x23, 0x01)
0753  00C2        AddEncounter(0x23, 0x02)
0765  00D4        AddEncounter(0x24, 0x03)
0777  00E6        AddEncounter(0x24, 0x04)
0789  00F8        AddEncounter(0x22, 0x05)
079B  010A        AddEncounter(0x22, 0x06)
07AD  011C        RETURN

BADMNSTR_0C:
07AF  0000        BEGIN
07B2  0003        ax = PartyCount()
07BA  000B        compare(ax, 0x0001)
07BD  000E        If (result.notequal) jump to 0025
07BF  0010        AddEncounter(0x25, 0x01)
07D1  0022        Jump to 0140
07D4  0025        ax = PartyCount()
07DC  002D        compare(ax, 0x0002)
07DF  0030        If (result.notequal) jump to 006B
07E1  0032        AddEncounter(0x26, 0x01)
07F3  0044        AddEncounter(0x26, 0x02)
0805  0056        AddEncounter(0x28, 0x05)
0817  0068        Jump to 0140
081A  006B        ax = PartyCount()
0822  0073        compare(ax, 0x0003)
0825  0076        If (result.notequal) jump to 00D4
0827  0078        AddEncounter(0x25, 0x01)
0839  008A        AddEncounter(0x25, 0x02)
084B  009C        AddEncounter(0x27, 0x03)
085D  00AE        AddEncounter(0x27, 0x04)
086F  00C0        AddEncounter(0x28, 0x05)
0881  00D2        Jump to 0140
0883  00D4        AddEncounter(0x27, 0x01)
0895  00E6        AddEncounter(0x27, 0x02)
08A7  00F8        AddEncounter(0x25, 0x03)
08B9  010A        AddEncounter(0x25, 0x04)
08CB  011C        AddEncounter(0x28, 0x05)
08DD  012E        AddEncounter(0x28, 0x06)
08EF  0140        RETURN

GOLDBENC_0D:
08F1  0000        BEGIN
08F4  0003        ax = CheckState04(0x02, 0x17)
0905  0014        compare(ax, 0x0001)
0908  0017        If (result.notequal) jump to 0047
090A  0019        ShowMessage(0x0515) = Minotaurs charge you.
0917  0026        AddTreasure(0x03E8, 0x00, 0x00, 0x00, 0x00, 0xCE)
0936  0045        Jump to 0088
0938  0047        AddTreasure(0x1388, 0x00, 0x00, 0x00, 0x00, 0xB5)
0957  0066        SetState00(0x02, 0x17, 0x01)
096C  007B        ShowMessage(0x052B) = A Minotaur teases you by holding a bag of gold just out of reach.
0979  0088        ax = PartyCount()
0981  0090        compare(ax, 0x0001)
0984  0093        If (result.notequal) jump to 00AA
0986  0095        AddEncounter(0x22, 0x01)
0998  00A7        Jump to 016B
099B  00AA        ax = PartyCount()
09A3  00B2        compare(ax, 0x0002)
09A6  00B5        If (result.notequal) jump to 00DE
09A8  00B7        AddEncounter(0x21, 0x01)
09BA  00C9        AddEncounter(0x22, 0x02)
09CC  00DB        Jump to 016B
09CF  00DE        ax = PartyCount()
09D7  00E6        compare(ax, 0x0003)
09DA  00E9        If (result.notequal) jump to 0123
09DC  00EB        AddEncounter(0x21, 0x01)
09EE  00FD        AddEncounter(0x22, 0x02)
0A00  010F        AddEncounter(0x23, 0x03)
0A12  0121        Jump to 016B
0A14  0123        AddEncounter(0x23, 0x01)
0A26  0135        AddEncounter(0x24, 0x02)
0A38  0147        AddEncounter(0x25, 0x03)
0A4A  0159        AddEncounter(0x21, 0x04)
0A5C  016B        RETURN

WEAPENC_0E:
0A5E  0000        BEGIN
0A61  0003        ax = HasItem(0x18)
0A6F  0011        If (result.equal) jump to 0065
0A71  0013        ax = HasItem(0x30)
0A7F  0021        If (result.equal) jump to 0044
0A81  0023        AddTreasure(0x00C8, 0x00, 0x00, 0x00, 0x00, 0xCF)
0AA0  0042        Jump to 0063
0AA2  0044        AddTreasure(0x07D0, 0x00, 0x00, 0x00, 0x00, 0x30)
0AC1  0063        Jump to 00B6
0AC3  0065        ax = HasItem(0x30)
0AD1  0073        If (result.equal) jump to 0096
0AD3  0075        AddTreasure(0x07D0, 0x00, 0x00, 0x00, 0x00, 0x18)
0AF2  0094        Jump to 00B6
0AF4  0096        AddTreasure(0x07D0, 0x00, 0x00, 0x00, 0x30, 0x18)
0B14  00B6        ShowMessage(0x056D) = Huge beings lumber into sight.
0B21  00C3        ax = PartyCount()
0B29  00CB        compare(ax, 0x0001)
0B2C  00CE        If (result.notequal) jump to 00F7
0B2E  00D0        AddEncounter(0x1A, 0x01)
0B40  00E2        AddEncounter(0x19, 0x02)
0B52  00F4        Jump to 0236
0B55  00F7        ax = PartyCount()
0B5D  00FF        compare(ax, 0x0002)
0B60  0102        If (result.notequal) jump to 014F
0B62  0104        AddEncounter(0x1A, 0x01)
0B74  0116        AddEncounter(0x1A, 0x02)
0B86  0128        AddEncounter(0x19, 0x03)
0B98  013A        AddEncounter(0x19, 0x04)
0BAA  014C        Jump to 0236
0BAD  014F        ax = PartyCount()
0BB5  0157        compare(ax, 0x0003)
0BB8  015A        If (result.notequal) jump to 01CA
0BBA  015C        AddEncounter(0x19, 0x01)
0BCC  016E        AddEncounter(0x19, 0x02)
0BDE  0180        AddEncounter(0x1B, 0x03)
0BF0  0192        AddEncounter(0x1B, 0x04)
0C02  01A4        AddEncounter(0x1A, 0x05)
0C14  01B6        AddEncounter(0x1A, 0x06)
0C26  01C8        Jump to 0236
0C28  01CA        AddEncounter(0x1B, 0x01)
0C3A  01DC        AddEncounter(0x1B, 0x02)
0C4C  01EE        AddEncounter(0x1B, 0x03)
0C5E  0200        AddEncounter(0x1B, 0x04)
0C70  0212        AddEncounter(0x1C, 0x05)
0C82  0224        AddEncounter(0x1C, 0x06)
0C94  0236        RETURN

ARMORENC_0F:
0C96  0000        BEGIN
0C99  0003        ax = HasItem(0x7F)
0CA7  0011        If (result.equal) jump to 0034
0CA9  0013        AddTreasure(0x00C8, 0x00, 0x00, 0x00, 0x00, 0xD1)
0CC8  0032        Jump to 0053
0CCA  0034        AddTreasure(0x0064, 0x00, 0x00, 0x00, 0x00, 0x7F)
0CE9  0053        ShowMessage(0x058C) = You have entered a Rogue encampment.
0CF6  0060        ax = PartyCount()
0CFE  0068        compare(ax, 0x0001)
0D01  006B        If (result.notequal) jump to 0082
0D03  006D        AddEncounter(0x03, 0x01)
0D15  007F        Jump to 0143
0D18  0082        ax = PartyCount()
0D20  008A        compare(ax, 0x0002)
0D23  008D        If (result.notequal) jump to 00B6
0D25  008F        AddEncounter(0x03, 0x01)
0D37  00A1        AddEncounter(0x0D, 0x02)
0D49  00B3        Jump to 0143
0D4C  00B6        ax = PartyCount()
0D54  00BE        compare(ax, 0x0003)
0D57  00C1        If (result.notequal) jump to 00FB
0D59  00C3        AddEncounter(0x1E, 0x01)
0D6B  00D5        AddEncounter(0x11, 0x02)
0D7D  00E7        AddEncounter(0x04, 0x03)
0D8F  00F9        Jump to 0143
0D91  00FB        AddEncounter(0x20, 0x01)
0DA3  010D        AddEncounter(0x05, 0x02)
0DB5  011F        AddEncounter(0x0F, 0x03)
0DC7  0131        AddEncounter(0x0D, 0x06)
0DD9  0143        RETURN

MAGICENC_10:
0DDB  0000        BEGIN
0DDE  0003        ax = HasItem(0x8B)
0DEC  0011        If (result.equal) jump to 0065
0DEE  0013        ax = HasItem(0x91)
0DFC  0021        If (result.equal) jump to 0044
0DFE  0023        AddTreasure(0x03E8, 0x00, 0x00, 0x00, 0x00, 0x01)
0E1D  0042        Jump to 0063
0E1F  0044        AddTreasure(0x03E8, 0x00, 0x00, 0x00, 0x00, 0x91)
0E3E  0063        Jump to 00B6
0E40  0065        ax = HasItem(0x91)
0E4E  0073        If (result.equal) jump to 0096
0E50  0075        AddTreasure(0x03E8, 0x00, 0x00, 0x00, 0x00, 0x8B)
0E6F  0094        Jump to 00B6
0E71  0096        AddTreasure(0x03E8, 0x00, 0x00, 0x00, 0x91, 0x8B)
0E91  00B6        ShowMessage(0x05B1) = You encounter marauding Hobgoblins.
0E9E  00C3        ax = PartyCount()
0EA6  00CB        compare(ax, 0x0001)
0EA9  00CE        If (result.notequal) jump to 00F7
0EAB  00D0        AddEncounter(0x25, 0x01)
0EBD  00E2        AddEncounter(0x28, 0x02)
0ECF  00F4        Jump to 0212
0ED2  00F7        ax = PartyCount()
0EDA  00FF        compare(ax, 0x0002)
0EDD  0102        If (result.notequal) jump to 013D
0EDF  0104        AddEncounter(0x25, 0x01)
0EF1  0116        AddEncounter(0x26, 0x02)
0F03  0128        AddEncounter(0x28, 0x03)
0F15  013A        Jump to 0212
0F18  013D        ax = PartyCount()
0F20  0145        compare(ax, 0x0003)
0F23  0148        If (result.notequal) jump to 01A6
0F25  014A        AddEncounter(0x26, 0x01)
0F37  015C        AddEncounter(0x26, 0x02)
0F49  016E        AddEncounter(0x27, 0x03)
0F5B  0180        AddEncounter(0x27, 0x04)
0F6D  0192        AddEncounter(0x28, 0x05)
0F7F  01A4        Jump to 0212
0F81  01A6        AddEncounter(0x27, 0x01)
0F93  01B8        AddEncounter(0x27, 0x02)
0FA5  01CA        AddEncounter(0x25, 0x03)
0FB7  01DC        AddEncounter(0x25, 0x04)
0FC9  01EE        AddEncounter(0x28, 0x05)
0FDB  0200        AddEncounter(0x28, 0x06)
0FED  0212        RETURN

ITEMBENC_11:
0FEF  0000        BEGIN
0FF2  0003        ax = HasItem(0x52)
1000  0011        If (result.equal) jump to 0034
1002  0013        AddTreasure(0x0320, 0x00, 0x00, 0x00, 0x00, 0x13)
1021  0032        Jump to 0053
1023  0034        AddTreasure(0x07D0, 0x00, 0x00, 0x00, 0x00, 0x52)
1042  0053        ShowMessage(0x05D5) = The sound of hooves on stone alerts you to danger.
104F  0060        ax = PartyCount()
1057  0068        compare(ax, 0x0001)
105A  006B        If (result.notequal) jump to 0082
105C  006D        AddEncounter(0x22, 0x01)
106E  007F        Jump to 0143
1071  0082        ax = PartyCount()
1079  008A        compare(ax, 0x0002)
107C  008D        If (result.notequal) jump to 00B6
107E  008F        AddEncounter(0x22, 0x01)
1090  00A1        AddEncounter(0x22, 0x02)
10A2  00B3        Jump to 0143
10A5  00B6        ax = PartyCount()
10AD  00BE        compare(ax, 0x0003)
10B0  00C1        If (result.notequal) jump to 00FB
10B2  00C3        AddEncounter(0x23, 0x01)
10C4  00D5        AddEncounter(0x23, 0x02)
10D6  00E7        AddEncounter(0x23, 0x03)
10E8  00F9        Jump to 0143
10EA  00FB        AddEncounter(0x24, 0x01)
10FC  010D        AddEncounter(0x24, 0x02)
110E  011F        AddEncounter(0x24, 0x03)
1120  0131        AddEncounter(0x24, 0x04)
1132  0143        RETURN

ITEMCENC_12:
1134  0000        BEGIN
1137  0003        ax = HasItem(0x20)
1145  0011        If (result.equal) jump to 0065
1147  0013        ax = HasItem(0x95)
1155  0021        If (result.equal) jump to 0044
1157  0023        AddTreasure(0x05DC, 0x00, 0x00, 0x00, 0x00, 0x3F)
1176  0042        Jump to 0063
1178  0044        AddTreasure(0x05DC, 0x00, 0x00, 0x00, 0x00, 0x95)
1197  0063        Jump to 00B6
1199  0065        ax = HasItem(0x95)
11A7  0073        If (result.equal) jump to 0096
11A9  0075        AddTreasure(0x05DC, 0x00, 0x00, 0x00, 0x00, 0x20)
11C8  0094        Jump to 00B6
11CA  0096        AddTreasure(0x05DC, 0x00, 0x00, 0x00, 0x95, 0x20)
11EA  00B6        ShowMessage(0x0608) = Gruff laughter surrounds you.
11F7  00C3        ax = PartyCount()
11FF  00CB        compare(ax, 0x0001)
1202  00CE        If (result.notequal) jump to 00F7
1204  00D0        AddEncounter(0x20, 0x01)
1216  00E2        AddEncounter(0x17, 0x02)
1228  00F4        Jump to 01EE
122B  00F7        ax = PartyCount()
1233  00FF        compare(ax, 0x0002)
1236  0102        If (result.notequal) jump to 013D
1238  0104        AddEncounter(0x11, 0x01)
124A  0116        AddEncounter(0x0C, 0x02)
125C  0128        AddEncounter(0x0E, 0x03)
126E  013A        Jump to 01EE
1271  013D        ax = PartyCount()
1279  0145        compare(ax, 0x0003)
127C  0148        If (result.notequal) jump to 0194
127E  014A        AddEncounter(0x1F, 0x01)
1290  015C        AddEncounter(0x0D, 0x02)
12A2  016E        AddEncounter(0x0B, 0x03)
12B4  0180        AddEncounter(0x04, 0x04)
12C6  0192        Jump to 01EE
12C8  0194        AddEncounter(0x1E, 0x01)
12DA  01A6        AddEncounter(0x20, 0x02)
12EC  01B8        AddEncounter(0x0B, 0x03)
12FE  01CA        AddEncounter(0x0E, 0x04)
1310  01DC        AddEncounter(0x01, 0x05)
1322  01EE        RETURN

TELEPORT_13:
1324  0000        BEGIN
1327  0003        SetMoveMap(0x03, 0x54, 0x04, 0x01)
1342  001E        RETURN

STRSMESS_14:
1344  0000        BEGIN
1347  0003        ShowMessage(0x0626) = The stairs through the south gateway lead upwards.
1354  0010        RETURN

STRSMESS_15:
1356  0000        BEGIN
1359  0003        ShowMessage(0x0659) = Through the west gateway are stairs leading upwards.
1366  0010        RETURN

STRSMESS_16:
1368  0000        BEGIN
136B  0003        ShowMessage(0x068E) = The stairs through the north gateway lead upwards.
1378  0010        RETURN

STRSMESS_17:
137A  0000        BEGIN
137D  0003        ShowMessage(0x06C1) = The stairs past the north gateway lead up a level.
138A  0010        RETURN

TELEMESS_18:
138C  0000        BEGIN
138F  0003        ShowMessage(0x06F4) = There is a teleport in the east wall.
139C  0010        RETURN

TELEMESS_19:
139E  0000        BEGIN
13A1  0003        ShowMessage(0x071A) = There is a teleport in the west wall.
13AE  0010        RETURN

TELEPORT_1A:
13B0  0000        BEGIN
13B3  0003        SetMoveMap(00, 0xDD, 0x03, 0x03)
13CD  001D        RETURN

TELEMESS_1B:
13CF  0000        BEGIN
13D2  0003        ShowMessage(0x0740) = There is a teleport in the west wall.
13DF  0010        RETURN

NPCCHATA_1C:
13E1  0000        BEGIN
13E4  0003        ShowMessage(0x0766) = You encounter a Gnome Thief.
13F1  0010        ShowPortrait(0x0024)
13FE  001D        ax = UnknownFunctionEC(0x000F)
140B  002A        compare(ax, 0x0001)
140E  002D        If (result.unsigned_greater_than) jump to 003E
1410  002F        ShowMessage(0x0783) = There is more to this basement than first meets the eye. Someday I will learn the secret of what lies behind the thick, silent walls that line this corridor.
141D  003C        Jump to 004B
141F  003E        ShowMessage(0x0821) = The Gnome Thief smiles enigmatically and ducks into the shadows.
142C  004B        RETURN

NPCCHATB_1D:
142E  0000        BEGIN
1431  0003        ShowMessage(0x0862) = You encounter a Human Barbarian.
143E  0010        ShowPortrait(0x0016)
144B  001D        ax = UnknownFunctionEC(0x000F)
1458  002A        compare(ax, 0x000C)
145B  002D        If (result.unsigned_greater_than) jump to 003E
145D  002F        ShowMessage(0x0883) = As much as I despise orcs, I sometimes find it useful to have them in my party. Indeed, you will frequently have to work with races and Guilds you would otherwise ignore, if you wish to solve the many mysteries of this dungeon.
146A  003C        Jump to 0058
146C  003E        DoDamage(0x000A)
1479  004B        ShowMessage(0x0967) = The Human Barbarian raps you with his club and trudges away.
1486  0058        RETURN

NPCCHATC_1E:
1488  0000        BEGIN
148B  0003        ShowMessage(0x09A4) = You encounter an Orc Knight.
1498  0010        ShowPortrait(0x001A)
14A5  001D        ax = UnknownFunctionEC(0x000F)
14B2  002A        compare(ax, 0x0006)
14B5  002D        If (result.unsigned_greater_than) jump to 003E
14B7  002F        ShowMessage(0x09C1) = A colleague told me he encountered a strange elfin race far down in the dungeon. He would not say much else, other than that he knew why cold-loving creatures were to be found inside a volcano.
14C4  003C        Jump to 004B
14C6  003E        ShowMessage(0x0A83) = The Orc Knight bows graciously and walks away.
14D3  004B        RETURN

NPCCHATD_1F:
14D5  0000        BEGIN
14D8  0003        ShowMessage(0x0AB2) = You encounter an Elf Cleric.
14E5  0010        ShowPortrait(0x0027)
14F2  001D        ax = UnknownFunctionEC(0x000F)
14FF  002A        compare(ax, 0x0007)
1502  002D        If (result.unsigned_greater_than) jump to 003E
1504  002F        ShowMessage(0x0ACF) = I stumbled over a marble block not long ago. On it were the words - Arnakkian Slowfoot, Wizard to the King.
1511  003C        Jump to 004B
1513  003E        ShowMessage(0x0B3B) = The Elf Cleric sighs mournfully and massages a stubbed toe.
1520  004B        RETURN

NPCCHATE_20:
1522  0000        BEGIN
1525  0003        ShowMessage(0x0B77) = You encounter a Human Thief.
1532  0010        ShowPortrait(0x0022)
153F  001D        ax = UnknownFunctionEC(0x000F)
154C  002A        compare(ax, 0x0008)
154F  002D        If (result.unsigned_greater_than) jump to 004B
1551  002F        ShowMessage(0x0B94) = To the east of the Rune Room on level three can be found the Wizards' Challenge. It is quite a challenge, too.
155E  003C        ShowMessage(0x0C03) = I have found several short cuts in the Wizards' Challenge.
156B  0049        Jump to 0058
156D  004B        ShowMessage(0x0C3E) = The Human Thief points at something behind you. While your back is turned, she sneaks away.
157A  0058        RETURN

EMPTY:
157C  0000        <Empty Function>

EMPTY:
1581  0000        <Empty Function>

EMPTY:
1586  0000        <Empty Function>

EMPTY:
158B  0000        <Empty Function>

EMPTY:
1590  0000        <Empty Function>

EMPTY:
1595  0000        <Empty Function>

EMPTY:
159A  0000        <Empty Function>

EMPTY:
159F  0000        <Empty Function>

EMPTY:
15A4  0000        <Empty Function>

EMPTY:
15A9  0000        <Empty Function>

EMPTY:
15AE  0000        <Empty Function>

EMPTY:
15B3  0000        <Empty Function>

EMPTY:
15B8  0000        <Empty Function>

EMPTY:
15BD  0000        <Empty Function>

EMPTY:
15C2  0000        <Empty Function>

EMPTY:
15C7  0000        <Empty Function>

EMPTY:
15CC  0000        <Empty Function>

EMPTY:
15D1  0000        <Empty Function>

EMPTY:
15D6  0000        <Empty Function>

EMPTY:
15DB  0000        <Empty Function>

EMPTY:
15E0  0000        <Empty Function>

EMPTY:
15E5  0000        <Empty Function>

EMPTY:
15EA  0000        <Empty Function>

EMPTY:
15EF  0000        <Empty Function>

EMPTY:
15F4  0000        <Empty Function>

EMPTY:
15F9  0000        <Empty Function>

EMPTY:
15FE  0000        <Empty Function>

EMPTY:
1603  0000        <Empty Function>

EMPTY:
1608  0000        <Empty Function>

EMPTY:
160D  0000        <Empty Function>

EMPTY:
1612  0000        <Empty Function>

EMPTY:
1617  0000        <Empty Function>

EMPTY:
161C  0000        <Empty Function>

EMPTY:
1621  0000        <Empty Function>

EMPTY:
1626  0000        <Empty Function>

EMPTY:
162B  0000        <Empty Function>

EMPTY:
1630  0000        <Empty Function>

EMPTY:
1635  0000        <Empty Function>

EMPTY:
163A  0000        <Empty Function>

EMPTY:
163F  0000        <Empty Function>

EMPTY:
1644  0000        <Empty Function>

EMPTY:
1649  0000        <Empty Function>

EMPTY:
164E  0000        <Empty Function>

EMPTY:
1653  0000        <Empty Function>

EMPTY:
1658  0000        <Empty Function>

EMPTY:
165D  0000        <Empty Function>

EMPTY:
1662  0000        <Empty Function>

EMPTY:
1667  0000        <Empty Function>

EMPTY:
166C  0000        <Empty Function>

EMPTY:
1671  0000        <Empty Function>

EMPTY:
1676  0000        <Empty Function>

EMPTY:
167B  0000        <Empty Function>

EMPTY:
1680  0000        <Empty Function>

EMPTY:
1685  0000        <Empty Function>

EMPTY:
168A  0000        <Empty Function>

EMPTY:
168F  0000        <Empty Function>

EMPTY:
1694  0000        <Empty Function>

EMPTY:
1699  0000        <Empty Function>

EMPTY:
169E  0000        <Empty Function>

EMPTY:
16A3  0000        <Empty Function>

EMPTY:
16A8  0000        <Empty Function>

EMPTY:
16AD  0000        <Empty Function>

EMPTY:
16B2  0000        <Empty Function>

EMPTY:
16B7  0000        <Empty Function>

EMPTY:
16BC  0000        <Empty Function>

EMPTY:
16C1  0000        <Empty Function>

EMPTY:
16C6  0000        <Empty Function>

EMPTY:
16CB  0000        <Empty Function>

EMPTY:
16D0  0000        <Empty Function>

EMPTY:
16D5  0000        <Empty Function>

EMPTY:
16DA  0000        <Empty Function>

EMPTY:
16DF  0000        <Empty Function>

EMPTY:
16E4  0000        <Empty Function>

EMPTY:
16E9  0000        <Empty Function>

EMPTY:
16EE  0000        <Empty Function>

EMPTY:
16F3  0000        <Empty Function>

EMPTY:
16F8  0000        <Empty Function>

EMPTY:
16FD  0000        <Empty Function>

EMPTY:
1702  0000        <Empty Function>

EMPTY:
1707  0000        <Empty Function>

EMPTY:
170C  0000        <Empty Function>

EMPTY:
1711  0000        <Empty Function>

EMPTY:
1716  0000        <Empty Function>

EMPTY:
171B  0000        <Empty Function>

EMPTY:
1720  0000        <Empty Function>

EMPTY:
1725  0000        <Empty Function>

EMPTY:
172A  0000        <Empty Function>

EMPTY:
172F  0000        <Empty Function>

EMPTY:
1734  0000        <Empty Function>

EMPTY:
1739  0000        <Empty Function>

EMPTY:
173E  0000        <Empty Function>

EMPTY:
1743  0000        <Empty Function>

EMPTY:
1748  0000        <Empty Function>

EMPTY:
174D  0000        <Empty Function>

EMPTY:
1752  0000        <Empty Function>

EMPTY:
1757  0000        <Empty Function>

EMPTY:
175C  0000        <Empty Function>

EMPTY:
1761  0000        <Empty Function>

EMPTY:
1766  0000        <Empty Function>

EMPTY:
176B  0000        <Empty Function>

EMPTY:
1770  0000        <Empty Function>

EMPTY:
1775  0000        <Empty Function>

EMPTY:
177A  0000        <Empty Function>

EMPTY:
177F  0000        <Empty Function>

EMPTY:
1784  0000        <Empty Function>

EMPTY:
1789  0000        <Empty Function>

EMPTY:
178E  0000        <Empty Function>

EMPTY:
1793  0000        <Empty Function>

EMPTY:
1798  0000        <Empty Function>

EMPTY:
179D  0000        <Empty Function>

EMPTY:
17A2  0000        <Empty Function>

EMPTY:
17A7  0000        <Empty Function>

EMPTY:
17AC  0000        <Empty Function>

EMPTY:
17B1  0000        <Empty Function>

EMPTY:
17B6  0000        <Empty Function>

EMPTY:
17BB  0000        <Empty Function>

EMPTY:
17C0  0000        <Empty Function>

EMPTY:
17C5  0000        <Empty Function>

EMPTY:
17CA  0000        <Empty Function>

EMPTY:
17CF  0000        <Empty Function>

EMPTY:
17D4  0000        <Empty Function>

EMPTY:
17D9  0000        <Empty Function>

EMPTY:
17DE  0000        <Empty Function>

EMPTY:
17E3  0000        <Empty Function>

EMPTY:
17E8  0000        <Empty Function>

EMPTY:
17ED  0000        <Empty Function>

EMPTY:
17F2  0000        <Empty Function>

EMPTY:
17F7  0000        <Empty Function>

EMPTY:
17FC  0000        <Empty Function>

EMPTY:
1801  0000        <Empty Function>

EMPTY:
1806  0000        <Empty Function>

EMPTY:
180B  0000        <Empty Function>

EMPTY:
1810  0000        <Empty Function>

EMPTY:
1815  0000        <Empty Function>

EMPTY:
181A  0000        <Empty Function>

EMPTY:
181F  0000        <Empty Function>

EMPTY:
1824  0000        <Empty Function>

EMPTY:
1829  0000        <Empty Function>

EMPTY:
182E  0000        <Empty Function>

EMPTY:
1833  0000        <Empty Function>

EMPTY:
1838  0000        <Empty Function>

EMPTY:
183D  0000        <Empty Function>

EMPTY:
1842  0000        <Empty Function>

EMPTY:
1847  0000        <Empty Function>

EMPTY:
184C  0000        <Empty Function>

EMPTY:
1851  0000        <Empty Function>

EMPTY:
1856  0000        <Empty Function>

EMPTY:
185B  0000        <Empty Function>

EMPTY:
1860  0000        <Empty Function>

EMPTY:
1865  0000        <Empty Function>

EMPTY:
186A  0000        <Empty Function>

EMPTY:
186F  0000        <Empty Function>

EMPTY:
1874  0000        <Empty Function>

EMPTY:
1879  0000        <Empty Function>

EMPTY:
187E  0000        <Empty Function>

EMPTY:
1883  0000        <Empty Function>

EMPTY:
1888  0000        <Empty Function>

EMPTY:
188D  0000        <Empty Function>

EMPTY:
1892  0000        <Empty Function>

EMPTY:
1897  0000        <Empty Function>

EMPTY:
189C  0000        <Empty Function>

EMPTY:
18A1  0000        <Empty Function>

EMPTY:
18A6  0000        <Empty Function>

EMPTY:
18AB  0000        <Empty Function>

EMPTY:
18B0  0000        <Empty Function>

EMPTY:
18B5  0000        <Empty Function>

EMPTY:
18BA  0000        <Empty Function>

EMPTY:
18BF  0000        <Empty Function>

EMPTY:
18C4  0000        <Empty Function>

EMPTY:
18C9  0000        <Empty Function>

EMPTY:
18CE  0000        <Empty Function>

EMPTY:
18D3  0000        <Empty Function>

EMPTY:
18D8  0000        <Empty Function>

EMPTY:
18DD  0000        <Empty Function>

EMPTY:
18E2  0000        <Empty Function>

EMPTY:
18E7  0000        <Empty Function>

EMPTY:
18EC  0000        <Empty Function>

EMPTY:
18F1  0000        <Empty Function>

EMPTY:
18F6  0000        <Empty Function>

EMPTY:
18FB  0000        <Empty Function>

EMPTY:
1900  0000        <Empty Function>

EMPTY:
1905  0000        <Empty Function>

EMPTY:
190A  0000        <Empty Function>

EMPTY:
190F  0000        <Empty Function>

EMPTY:
1914  0000        <Empty Function>

EMPTY:
1919  0000        <Empty Function>

EMPTY:
191E  0000        <Empty Function>

EMPTY:
1923  0000        <Empty Function>

EMPTY:
1928  0000        <Empty Function>

EMPTY:
192D  0000        <Empty Function>

EMPTY:
1932  0000        <Empty Function>

EMPTY:
1937  0000        <Empty Function>

EMPTY:
193C  0000        <Empty Function>

EMPTY:
1941  0000        <Empty Function>

EMPTY:
1946  0000        <Empty Function>

EMPTY:
194B  0000        <Empty Function>

EMPTY:
1950  0000        <Empty Function>

EMPTY:
1955  0000        <Empty Function>

EMPTY:
195A  0000        <Empty Function>

EMPTY:
195F  0000        <Empty Function>

EMPTY:
1964  0000        <Empty Function>

EMPTY:
1969  0000        <Empty Function>

EMPTY:
196E  0000        <Empty Function>

EMPTY:
1973  0000        <Empty Function>

EMPTY:
1978  0000        <Empty Function>

EMPTY:
197D  0000        <Empty Function>

EMPTY:
1982  0000        <Empty Function>

EMPTY:
1987  0000        <Empty Function>

EMPTY:
198C  0000        <Empty Function>

EMPTY:
1991  0000        <Empty Function>

EMPTY:
1996  0000        <Empty Function>

EMPTY:
199B  0000        <Empty Function>

EMPTY:
19A0  0000        <Empty Function>

EMPTY:
19A5  0000        <Empty Function>

EMPTY:
19AA  0000        <Empty Function>

EMPTY:
19AF  0000        <Empty Function>

EMPTY:
19B4  0000        <Empty Function>

EMPTY:
19B9  0000        <Empty Function>

EMPTY:
19BE  0000        <Empty Function>

EMPTY:
19C3  0000        <Empty Function>

EMPTY:
19C8  0000        <Empty Function>

EMPTY:
19CD  0000        <Empty Function>

EMPTY:
19D2  0000        <Empty Function>

STRINGS:
03FC: You found a hidden door in the east wall.
0426: Rogues are splitting up some gold they stole.
0454: You take a sip from the fountain, but nothing happens.
048B: You take a sip from the Healing Fountain and feel your Health improve quite a bit.
04DE: You skillfully pick the door lock.
0501: The door is locked.
0515: Minotaurs charge you.
052B: A Minotaur teases you by holding a bag of gold just out of reach.
056D: Huge beings lumber into sight.
058C: You have entered a Rogue encampment.
05B1: You encounter marauding Hobgoblins.
05D5: The sound of hooves on stone alerts you to danger.
0608: Gruff laughter surrounds you.
0626: The stairs through the south gateway lead upwards.
0659: Through the west gateway are stairs leading upwards.
068E: The stairs through the north gateway lead upwards.
06C1: The stairs past the north gateway lead up a level.
06F4: There is a teleport in the east wall.
071A: There is a teleport in the west wall.
0740: There is a teleport in the west wall.
0766: You encounter a Gnome Thief.
0783: There is more to this basement than first meets the eye. Someday I will learn the secret of what lies behind the thick, silent walls that line this corridor.
0821: The Gnome Thief smiles enigmatically and ducks into the shadows.
0862: You encounter a Human Barbarian.
0883: As much as I despise orcs, I sometimes find it useful to have them in my party. Indeed, you will frequently have to work with races and Guilds you would otherwise ignore, if you wish to solve the many mysteries of this dungeon.
0967: The Human Barbarian raps you with his club and trudges away.
09A4: You encounter an Orc Knight.
09C1: A colleague told me he encountered a strange elfin race far down in the dungeon. He would not say much else, other than that he knew why cold-loving creatures were to be found inside a volcano.
0A83: The Orc Knight bows graciously and walks away.
0AB2: You encounter an Elf Cleric.
0ACF: I stumbled over a marble block not long ago. On it were the words - Arnakkian Slowfoot, Wizard to the King.
0B3B: The Elf Cleric sighs mournfully and massages a stubbed toe.
0B77: You encounter a Human Thief.
0B94: To the east of the Rune Room on level three can be found the Wizards' Challenge. It is quite a challenge, too.
0C03: I have found several short cuts in the Wizards' Challenge.
0C3E: The Human Thief points at something behind you. While your back is turned, she sneaks away.
