TOCORRA_01:
000E  0000        BEGIN
0011  0003        SetMoveMap(0x03, 0xF0, 0x02, 0x02)
002C  001E        RETURN

IMPILLAR_02:
002E  0000        BEGIN
0031  0003        Push(00)
0034  0006        ax = GetNextTile()
003B  000D        SetMove34(stk[0], ax)
0045  0017        RETURN

ILPILLAR_03:
0047  0000        BEGIN
004A  0003        ShowMessage(0x03FC) = As you step forward, the column slides away.
0057  0010        SetMove34(0x01, 0x7F)
0068  0021        RETURN

PASSCOLM_04:
006A  0000        BEGIN
006D  0003        ShowMessage(0x0429) = As you step forward, the column slides away.
007A  0010        SetMove34(0x01, 0xF5)
008B  0021        RETURN

TAPESTRY_05:
008D  0000        BEGIN
0090  0003        ax = HasItem(0xF8)
009E  0011        If (result.equal) jump to 002F
00A0  0013        ShowMessage(0x0456) = Runes appear on the tapestry...
00AD  0020        ShowRunes(0x0476) = Imps have hidden the Crown, Robe and Scepter. Only a master of the runes may find them. Two-faced Y is at the center of the quest. From Y, open O and E and I. When a rune key is used correctly, it will disappear.
00BA  002D        Jump to 003C
00BC  002F        ShowMessage(0x054B) = You see an ornate tapestry. The middle of the tapestry is blank.
00C9  003C        RETURN

KNGGHST_06:
00CB  0000        BEGIN
00CE  0003        ax = HasItem(0xF8)
00DC  0011        If (result.equal) jump to 005B
00DE  0013        ShowMessage(0x058C) = King Cleowyn's angry spirit appears.
00EB  0020        ShowMessage(0x05B1) = He tears the Key to the Palace away from you as he and his courtiers attack.
00F8  002D        AddTreasure(0x03E8, 0x00, 0x00, 0x00, 0xB7, 0xCF)
0118  004D        RemoveItem(0xD9)
0124  0059        Jump to 0089
0126  005B        ShowMessage(0x05FE) = King Cleowyn and his dead courtiers appear to challenge you.
0133  0068        AddTreasure(0x3A98, 0x00, 0x00, 0xF8, 0xB7, 0xCF)
0154  0089        AddEncounter(0x25, 0x05)
0166  009B        AddEncounter(0x01, 0x01)
0178  00AD        AddEncounter(0x08, 0x02)
018A  00BF        RETURN

PIT_07:
018C  0000        BEGIN
018F  0003        ax = GetNextTile()
0196  000A        SetMove38(ax, 0x01)
01A4  0018        ShowMessage(0x063B) = You fall into a deep, deep pit.
01B1  0025        ax = PartyCount()
01B9  002D        compare(ax, 0x0001)
01BC  0030        If (result.notequal) jump to 005C
01BE  0032        DoDamage(0x00FA)
01CB  003F        SetMoveMap(0x02, 0xE0, 0x01, 0x04)
01E6  005A        Jump to 0091
01E8  005C        ShowMessage(0x065B) = Your body provides a soft landing pad for the rest of your party.
01F5  0069        DoDamage(0x0190)
0202  0076        SetMoveMap(0x02, 0xE0, 0x01, 0x04)
021D  0091        RETURN

AVRMNSTR_08:
021F  0000        BEGIN
0222  0003        ax = PartyCount()
022A  000B        compare(ax, 0x0001)
022D  000E        If (result.notequal) jump to 0049
022F  0010        AddEncounter(0x19, 0x01)
0241  0022        AddEncounter(0x1A, 0x02)
0253  0034        AddEncounter(0x19, 0x03)
0265  0046        Jump to 013D
0268  0049        ax = PartyCount()
0270  0051        compare(ax, 0x0002)
0273  0054        If (result.equal) jump to 0063
0275  0056        ax = PartyCount()
027D  005E        compare(ax, 0x0003)
0280  0061        If (result.notequal) jump to 00D1
0282  0063        AddEncounter(0x1C, 0x01)
0294  0075        AddEncounter(0x1C, 0x02)
02A6  0087        AddEncounter(0x1C, 0x03)
02B8  0099        AddEncounter(0x1C, 0x04)
02CA  00AB        AddEncounter(0x1B, 0x05)
02DC  00BD        AddEncounter(0x1B, 0x06)
02EE  00CF        Jump to 013D
02F0  00D1        AddEncounter(0x1B, 0x01)
0302  00E3        AddEncounter(0x1B, 0x02)
0314  00F5        AddEncounter(0x1B, 0x03)
0326  0107        AddEncounter(0x1B, 0x04)
0338  0119        AddEncounter(0x1B, 0x05)
034A  012B        AddEncounter(0x1B, 0x06)
035C  013D        RETURN

STRMNSTR_09:
035E  0000        BEGIN
0361  0003        ax = PartyCount()
0369  000B        compare(ax, 0x0001)
036C  000E        If (result.equal) jump to 001D
036E  0010        ax = PartyCount()
0376  0018        compare(ax, 0x0002)
0379  001B        If (result.notequal) jump to 0044
037B  001D        AddEncounter(0x1F, 0x01)
038D  002F        AddEncounter(0x1F, 0x02)
039F  0041        Jump to 00F5
03A2  0044        ax = PartyCount()
03AA  004C        compare(ax, 0x0003)
03AD  004F        If (result.notequal) jump to 009B
03AF  0051        AddEncounter(0x20, 0x01)
03C1  0063        AddEncounter(0x20, 0x02)
03D3  0075        AddEncounter(0x1E, 0x03)
03E5  0087        AddEncounter(0x1E, 0x04)
03F7  0099        Jump to 00F5
03F9  009B        AddEncounter(0x1F, 0x01)
040B  00AD        AddEncounter(0x1F, 0x02)
041D  00BF        AddEncounter(0x1F, 0x03)
042F  00D1        AddEncounter(0x1F, 0x04)
0441  00E3        AddEncounter(0x20, 0x05)
0453  00F5        RETURN

TUFMNSTR_0A:
0455  0000        BEGIN
0458  0003        ax = PartyCount()
0460  000B        compare(ax, 0x0001)
0463  000E        If (result.notequal) jump to 0037
0465  0010        AddEncounter(0x22, 0x01)
0477  0022        AddEncounter(0x22, 0x01)
0489  0034        Jump to 0152
048C  0037        ax = PartyCount()
0494  003F        compare(ax, 0x0002)
0497  0042        If (result.notequal) jump to 007D
0499  0044        AddEncounter(0x23, 0x01)
04AB  0056        AddEncounter(0x21, 0x02)
04BD  0068        AddEncounter(0x21, 0x03)
04CF  007A        Jump to 0152
04D2  007D        ax = PartyCount()
04DA  0085        compare(ax, 0x0003)
04DD  0088        If (result.notequal) jump to 00E6
04DF  008A        AddEncounter(0x21, 0x01)
04F1  009C        AddEncounter(0x21, 0x02)
0503  00AE        AddEncounter(0x24, 0x03)
0515  00C0        AddEncounter(0x24, 0x04)
0527  00D2        AddEncounter(0x23, 0x05)
0539  00E4        Jump to 0152
053B  00E6        AddEncounter(0x23, 0x01)
054D  00F8        AddEncounter(0x23, 0x02)
055F  010A        AddEncounter(0x23, 0x03)
0571  011C        AddEncounter(0x23, 0x04)
0583  012E        AddEncounter(0x22, 0x05)
0595  0140        AddEncounter(0x22, 0x06)
05A7  0152        RETURN

EMPTY:
05A9  0000        <Empty Function>

WEAPBENC_0C:
05AE  0000        BEGIN
05B1  0003        ax = HasItem(0x35)
05BF  0011        If (result.equal) jump to 0041
05C1  0013        ShowMessage(0x069D) = You feel the tickle of cobwebs on your neck.
05CE  0020        AddTreasure(0x012C, 0x00, 0x00, 0x00, 0x00, 0xB6)
05ED  003F        Jump to 006E
05EF  0041        AddTreasure(0x03E8, 0x00, 0x00, 0x00, 0xCF, 0x35)
060F  0061        ShowMessage(0x06CA) = Spiders are using a spear in the middle of the floor as a support for their webs.
061C  006E        ax = PartyCount()
0624  0076        compare(ax, 0x0001)
0627  0079        If (result.equal) jump to 0088
0629  007B        ax = PartyCount()
0631  0083        compare(ax, 0x0002)
0634  0086        If (result.notequal) jump to 00AF
0636  0088        AddEncounter(0x19, 0x01)
0648  009A        AddEncounter(0x1A, 0x02)
065A  00AC        Jump to 013C
065D  00AF        ax = PartyCount()
0665  00B7        compare(ax, 0x0003)
0668  00BA        If (result.notequal) jump to 00F4
066A  00BC        AddEncounter(0x19, 0x01)
067C  00CE        AddEncounter(0x19, 0x02)
068E  00E0        AddEncounter(0x1A, 0x03)
06A0  00F2        Jump to 013C
06A2  00F4        AddEncounter(0x19, 0x01)
06B4  0106        AddEncounter(0x1A, 0x02)
06C6  0118        AddEncounter(0x1B, 0x03)
06D8  012A        AddEncounter(0x1C, 0x04)
06EA  013C        RETURN

WEAPAENC_0D:
06EC  0000        BEGIN
06EF  0003        AddTreasure(0x1964, 0x00, 0x00, 0x00, 0x00, 0x3B)
070E  0022        ShowMessage(0x071C) = You see a weapon on the floor and step forward. Banshees sense your presence and gather to attack.
071B  002F        ax = PartyCount()
0723  0037        compare(ax, 0x0001)
0726  003A        If (result.equal) jump to 0049
0728  003C        ax = PartyCount()
0730  0044        compare(ax, 0x0002)
0733  0047        If (result.notequal) jump to 0082
0735  0049        AddEncounter(0x21, 0x01)
0747  005B        AddEncounter(0x22, 0x02)
0759  006D        AddEncounter(0x21, 0x03)
076B  007F        Jump to 0157
076E  0082        ax = PartyCount()
0776  008A        compare(ax, 0x0003)
0779  008D        If (result.notequal) jump to 00EB
077B  008F        AddEncounter(0x22, 0x01)
078D  00A1        AddEncounter(0x22, 0x02)
079F  00B3        AddEncounter(0x21, 0x03)
07B1  00C5        AddEncounter(0x24, 0x04)
07C3  00D7        AddEncounter(0x23, 0x05)
07D5  00E9        Jump to 0157
07D7  00EB        AddEncounter(0x23, 0x01)
07E9  00FD        AddEncounter(0x23, 0x02)
07FB  010F        AddEncounter(0x21, 0x03)
080D  0121        AddEncounter(0x21, 0x04)
081F  0133        AddEncounter(0x24, 0x05)
0831  0145        AddEncounter(0x24, 0x06)
0843  0157        RETURN

WEAPCENC_0E:
0845  0000        BEGIN
0848  0003        ax = HasItem(0x16)
0856  0011        If (result.equal) jump to 0041
0858  0013        ShowMessage(0x077F) = Nightmares emerge from the shadows.
0865  0020        AddTreasure(0x00C8, 0x00, 0x00, 0x00, 0x00, 0xCE)
0884  003F        Jump to 006E
0886  0041        AddTreasure(0x0BB8, 0x00, 0x00, 0x00, 0xCF, 0x16)
08A6  0061        ShowMessage(0x07A3) = A group of Nightmares claw at an axe on the floor.
08B3  006E        ax = PartyCount()
08BB  0076        compare(ax, 0x0001)
08BE  0079        If (result.equal) jump to 0088
08C0  007B        ax = PartyCount()
08C8  0083        compare(ax, 0x0002)
08CB  0086        If (result.notequal) jump to 00C1
08CD  0088        AddEncounter(0x1E, 0x01)
08DF  009A        AddEncounter(0x1E, 0x02)
08F1  00AC        AddEncounter(0x1D, 0x03)
0903  00BE        Jump to 0196
0906  00C1        ax = PartyCount()
090E  00C9        compare(ax, 0x0003)
0911  00CC        If (result.notequal) jump to 012A
0913  00CE        AddEncounter(0x1F, 0x01)
0925  00E0        AddEncounter(0x20, 0x02)
0937  00F2        AddEncounter(0x1E, 0x03)
0949  0104        AddEncounter(0x1D, 0x04)
095B  0116        AddEncounter(0x1F, 0x05)
096D  0128        Jump to 0196
096F  012A        AddEncounter(0x1F, 0x01)
0981  013C        AddEncounter(0x1F, 0x02)
0993  014E        AddEncounter(0x20, 0x03)
09A5  0160        AddEncounter(0x20, 0x04)
09B7  0172        AddEncounter(0x1F, 0x05)
09C9  0184        AddEncounter(0x1F, 0x06)
09DB  0196        RETURN

SHLDENC_0F:
09DD  0000        BEGIN
09E0  0003        ax = HasItem(0x4E)
09EE  0011        If (result.equal) jump to 0042
09F0  0013        ShowMessage(0x07D6) = You stumble upon some Zombies, eating the remains of a former adventurer.
09FD  0020        AddTreasure(0x0190, 0x00, 0x00, 0x00, 0xB5, 0xCE)
0A1D  0040        Jump to 006F
0A1F  0042        AddTreasure(0x0E74, 0x00, 0x00, 0x00, 0xB5, 0x4E)
0A3F  0062        ShowMessage(0x0820) = The shuffle of heavy feet put you on your guard. One of the things kicks a shield out of its way.
0A4C  006F        ax = PartyCount()
0A54  0077        compare(ax, 0x0001)
0A57  007A        If (result.equal) jump to 0089
0A59  007C        ax = PartyCount()
0A61  0084        compare(ax, 0x0002)
0A64  0087        If (result.notequal) jump to 00D4
0A66  0089        AddEncounter(0x11, 0x01)
0A78  009B        AddEncounter(0x12, 0x02)
0A8A  00AD        AddEncounter(0x12, 0x03)
0A9C  00BF        AddEncounter(0x12, 0x04)
0AAE  00D1        Jump to 01BB
0AB1  00D4        ax = PartyCount()
0AB9  00DC        compare(ax, 0x0003)
0ABC  00DF        If (result.notequal) jump to 014F
0ABE  00E1        AddEncounter(0x12, 0x01)
0AD0  00F3        AddEncounter(0x12, 0x02)
0AE2  0105        AddEncounter(0x13, 0x03)
0AF4  0117        AddEncounter(0x13, 0x04)
0B06  0129        AddEncounter(0x11, 0x05)
0B18  013B        AddEncounter(0x11, 0x06)
0B2A  014D        Jump to 01BB
0B2C  014F        AddEncounter(0x14, 0x01)
0B3E  0161        AddEncounter(0x14, 0x02)
0B50  0173        AddEncounter(0x13, 0x03)
0B62  0185        AddEncounter(0x13, 0x04)
0B74  0197        AddEncounter(0x14, 0x05)
0B86  01A9        AddEncounter(0x14, 0x06)
0B98  01BB        RETURN

JACKTENC_10:
0B9A  0000        BEGIN
0B9D  0003        ax = HasItem(0x7A)
0BAB  0011        If (result.equal) jump to 0042
0BAD  0013        ShowMessage(0x0882) = Ghosts rise from the floor to haunt you.
0BBA  0020        AddTreasure(0x0064, 0x00, 0x00, 0x00, 0xB6, 0xCE)
0BDA  0040        Jump to 006F
0BDC  0042        AddTreasure(0x0FA0, 0x00, 0x00, 0x00, 0xCE, 0x7A)
0BFC  0062        ShowMessage(0x08AB) = Ghosts are gathered around a jacket on the floor. They seem to be pondering its purpose.
0C09  006F        ax = PartyCount()
0C11  0077        compare(ax, 0x0001)
0C14  007A        If (result.equal) jump to 0089
0C16  007C        ax = PartyCount()
0C1E  0084        compare(ax, 0x0002)
0C21  0087        If (result.notequal) jump to 00B0
0C23  0089        AddEncounter(0x03, 0x01)
0C35  009B        AddEncounter(0x02, 0x02)
0C47  00AD        Jump to 013D
0C4A  00B0        ax = PartyCount()
0C52  00B8        compare(ax, 0x0003)
0C55  00BB        If (result.notequal) jump to 00F5
0C57  00BD        AddEncounter(0x03, 0x01)
0C69  00CF        AddEncounter(0x01, 0x02)
0C7B  00E1        AddEncounter(0x04, 0x03)
0C8D  00F3        Jump to 013D
0C8F  00F5        AddEncounter(0x01, 0x01)
0CA1  0107        AddEncounter(0x03, 0x02)
0CB3  0119        AddEncounter(0x02, 0x03)
0CC5  012B        AddEncounter(0x04, 0x04)
0CD7  013D        RETURN

ARMRBENC_11:
0CD9  0000        BEGIN
0CDC  0003        ax = HasItem(0x76)
0CEA  0011        If (result.equal) jump to 0041
0CEC  0013        ShowMessage(0x0904) = Skeletons of King Cleowyn's elite palace guard advance on you.
0CF9  0020        AddTreasure(0x004B, 0x00, 0x00, 0x00, 0x00, 0xCE)
0D18  003F        Jump to 006E
0D1A  0041        AddTreasure(0x07D0, 0x00, 0x00, 0x00, 0xCE, 0x76)
0D3A  0061        ShowMessage(0x0943) = The leader of the dead palace guards that surrounds you wears rusty chainmail.
0D47  006E        ax = PartyCount()
0D4F  0076        compare(ax, 0x0001)
0D52  0079        If (result.equal) jump to 0088
0D54  007B        ax = PartyCount()
0D5C  0083        compare(ax, 0x0002)
0D5F  0086        If (result.notequal) jump to 00C1
0D61  0088        AddEncounter(0x09, 0x01)
0D73  009A        AddEncounter(0x0A, 0x02)
0D85  00AC        AddEncounter(0x09, 0x03)
0D97  00BE        Jump to 0196
0D9A  00C1        ax = PartyCount()
0DA2  00C9        compare(ax, 0x0003)
0DA5  00CC        If (result.notequal) jump to 012A
0DA7  00CE        AddEncounter(0x0A, 0x01)
0DB9  00E0        AddEncounter(0x0A, 0x02)
0DCB  00F2        AddEncounter(0x0B, 0x03)
0DDD  0104        AddEncounter(0x09, 0x04)
0DEF  0116        AddEncounter(0x09, 0x05)
0E01  0128        Jump to 0196
0E03  012A        AddEncounter(0x0A, 0x01)
0E15  013C        AddEncounter(0x0A, 0x02)
0E27  014E        AddEncounter(0x0B, 0x03)
0E39  0160        AddEncounter(0x0B, 0x04)
0E4B  0172        AddEncounter(0x0C, 0x05)
0E5D  0184        AddEncounter(0x0C, 0x06)
0E6F  0196        RETURN

RUNES_12:
0E71  0000        BEGIN
0E74  0003        ShowMessage(0x0992) = There are runes on the wall...
0E81  0010        ShowRunes(0x09B1) = What you see is not always what is real.
0E8E  001D        RETURN

EMPTY:
0E90  0000        <Empty Function>

EMPTY:
0E95  0000        <Empty Function>

LKPKDOOR_15:
0E9A  0000        BEGIN
0E9D  0003        ax = UsedItem(0xC1, 0xC4)
0EB0  0016        If (result.notequal) jump to 0029
0EB2  0018        ax = UsedSkill(0x0E) // returns 0 if did not use, compares to 2nd op if did use
0EBE  0024        compare(ax, 0x0005)
0EC1  0027        If (result.below) jump to 0074
0EC3  0029        Push(01)
0EC7  002D        ax = GetFacing()
0ECE  0034        Push(ax)
0ECF  0035        ax = GetNextTile()
0ED6  003C        Push(ax)
0ED7  003D        SetMove2C(stk[0], stk[1], stk[2])
0EE1  0047        ax = GetFacing()
0EE8  004E        Push(ax)
0EE9  004F        ax = GetNextTile()
0EF0  0056        Push(ax)
0EF1  0057        Push(01)
0EF5  005B        SetUnblocked()
0EFF  0065        ShowMessage(0x09DA) = You successfully picked the locked door.
0F0C  0072        Jump to 009E
0F0E  0074        Push(00)
0F11  0077        ax = GetFacing()
0F18  007E        Push(ax)
0F19  007F        ax = GetNextTile()
0F20  0086        Push(ax)
0F21  0087        SetMove2C(stk[0], stk[1], stk[2])
0F2B  0091        ShowMessage(0x0A03) = The door is locked.
0F38  009E        RETURN

STRDOOR_16:
0F3A  0000        BEGIN
0F3D  0003        ax = CheckStrength()
0F49  000F        compare(ax, 0x000C)
0F4C  0012        If (result.below) jump to 005F
0F4E  0014        ShowMessage(0x0A17) = You manage to open the door by brute force.
0F5B  0021        ax = GetFacing()
0F62  0028        Push(ax)
0F63  0029        ax = GetNextTile()
0F6A  0030        Push(ax)
0F6B  0031        Push(01)
0F6F  0035        SetUnblocked()
0F79  003F        Push(01)
0F7D  0043        ax = GetFacing()
0F84  004A        Push(ax)
0F85  004B        ax = GetNextTile()
0F8C  0052        Push(ax)
0F8D  0053        SetMove2C(stk[0], stk[1], stk[2])
0F97  005D        Jump to 0089
0F99  005F        ShowMessage(0x0A43) = You are not strong enough to force the door open.
0FA6  006C        Push(00)
0FA9  006F        ax = GetFacing()
0FB0  0076        Push(ax)
0FB1  0077        ax = GetNextTile()
0FB8  007E        Push(ax)
0FB9  007F        SetMove2C(stk[0], stk[1], stk[2])
0FC3  0089        RETURN

LKPKDOOR_17:
0FC5  0000        BEGIN
0FC8  0003        ax = UsedItem(0xC2, 0xC4)
0FDB  0016        If (result.notequal) jump to 0029
0FDD  0018        ax = UsedSkill(0x0E) // returns 0 if did not use, compares to 2nd op if did use
0FE9  0024        compare(ax, 0x0008)
0FEC  0027        If (result.below) jump to 0074
0FEE  0029        Push(01)
0FF2  002D        ax = GetFacing()
0FF9  0034        Push(ax)
0FFA  0035        ax = GetNextTile()
1001  003C        Push(ax)
1002  003D        SetMove2C(stk[0], stk[1], stk[2])
100C  0047        ax = GetFacing()
1013  004E        Push(ax)
1014  004F        ax = GetNextTile()
101B  0056        Push(ax)
101C  0057        Push(01)
1020  005B        SetUnblocked()
102A  0065        ShowMessage(0x0A75) = You picked the lock of the door successfully.
1037  0072        Jump to 009E
1039  0074        Push(00)
103C  0077        ax = GetFacing()
1043  007E        Push(ax)
1044  007F        ax = GetNextTile()
104B  0086        Push(ax)
104C  0087        SetMove2C(stk[0], stk[1], stk[2])
1056  0091        ShowMessage(0x0AA3) = The door is locked.
1063  009E        RETURN

TRAPDORA_18:
1065  0000        BEGIN
1068  0003        ax = UsedSkill(0x0D) // returns 0 if did not use, compares to 2nd op if did use
1074  000F        compare(ax, 0x000A)
1077  0012        If (result.above or result.equal) jump to 004E
1079  0014        ax = UsedSpell(0x17) // returns 0 if did not use on map, level if used
1085  0020        RefreshCompareFlags(ax)
1087  0022        If (result.notequal) jump to 004E
1089  0024        ax = UsedItem(0xA2, 0xA2)
109C  0037        If (result.notequal) jump to 004E
109E  0039        ax = UsedItem(0xBE, 0xBE)
10B1  004C        If (result.equal) jump to 0078
10B3  004E        ShowMessage(0x0AB7) = You found a trapdoor on the floor.
10C0  005B        SetMoveMap(0x01, 0x82, 0x02, 0x03)
10DB  0076        Jump to 00A0
10DD  0078        ShowMessage(0x0ADA) = You fall through a trapdoor.
10EA  0085        SetMoveMap(0x01, 0x82, 0x02, 0x03)
1105  00A0        RETURN

TRAPDORB_19:
1107  0000        BEGIN
110A  0003        ax = UsedSkill(0x0D) // returns 0 if did not use, compares to 2nd op if did use
1116  000F        compare(ax, 0x000A)
1119  0012        If (result.above or result.equal) jump to 004E
111B  0014        ax = UsedSpell(0x17) // returns 0 if did not use on map, level if used
1127  0020        RefreshCompareFlags(ax)
1129  0022        If (result.notequal) jump to 004E
112B  0024        ax = UsedItem(0xA2, 0xA2)
113E  0037        If (result.notequal) jump to 004E
1140  0039        ax = UsedItem(0xBE, 0xBE)
1153  004C        If (result.equal) jump to 0078
1155  004E        ShowMessage(0x0AF7) = You found a trapdoor on the floor.
1162  005B        SetMoveMap(0x01, 0x86, 0x02, 0x03)
117D  0076        Jump to 00A0
117F  0078        ShowMessage(0x0B1A) = You fall through a trapdoor.
118C  0085        SetMoveMap(0x01, 0x86, 0x02, 0x03)
11A7  00A0        RETURN

TRAPDORC_1A:
11A9  0000        BEGIN
11AC  0003        ax = UsedSkill(0x0D) // returns 0 if did not use, compares to 2nd op if did use
11B8  000F        compare(ax, 0x000A)
11BB  0012        If (result.above or result.equal) jump to 004E
11BD  0014        ax = UsedSpell(0x17) // returns 0 if did not use on map, level if used
11C9  0020        RefreshCompareFlags(ax)
11CB  0022        If (result.notequal) jump to 004E
11CD  0024        ax = UsedItem(0xA2, 0xA2)
11E0  0037        If (result.notequal) jump to 004E
11E2  0039        ax = UsedItem(0xBE, 0xBE)
11F5  004C        If (result.equal) jump to 0078
11F7  004E        ShowMessage(0x0B37) = You found a trapdoor on the floor.
1204  005B        SetMoveMap(0x03, 0xA0, 0x02, 0x03)
121F  0076        Jump to 00A0
1221  0078        ShowMessage(0x0B5A) = You fall through a trapdoor.
122E  0085        SetMoveMap(0x03, 0xA0, 0x02, 0x03)
1249  00A0        RETURN

TRAPDORD_1B:
124B  0000        BEGIN
124E  0003        ax = UsedSkill(0x0D) // returns 0 if did not use, compares to 2nd op if did use
125A  000F        compare(ax, 0x000A)
125D  0012        If (result.above or result.equal) jump to 004E
125F  0014        ax = UsedSpell(0x17) // returns 0 if did not use on map, level if used
126B  0020        RefreshCompareFlags(ax)
126D  0022        If (result.notequal) jump to 004E
126F  0024        ax = UsedItem(0xA2, 0xA2)
1282  0037        If (result.notequal) jump to 004E
1284  0039        ax = UsedItem(0xBE, 0xBE)
1297  004C        If (result.equal) jump to 0078
1299  004E        ShowMessage(0x0B77) = You found a trapdoor on the floor.
12A6  005B        SetMoveMap(0x03, 0xA8, 0x02, 0x03)
12C1  0076        Jump to 00A0
12C3  0078        ShowMessage(0x0B9A) = You fall through a trapdoor.
12D0  0085        SetMoveMap(0x03, 0xA8, 0x02, 0x03)
12EB  00A0        RETURN

TRAPDORE_1C:
12ED  0000        BEGIN
12F0  0003        ax = UsedSkill(0x0D) // returns 0 if did not use, compares to 2nd op if did use
12FC  000F        compare(ax, 0x000A)
12FF  0012        If (result.above or result.equal) jump to 004E
1301  0014        ax = UsedSpell(0x17) // returns 0 if did not use on map, level if used
130D  0020        RefreshCompareFlags(ax)
130F  0022        If (result.notequal) jump to 004E
1311  0024        ax = UsedItem(0xA2, 0xA2)
1324  0037        If (result.notequal) jump to 004E
1326  0039        ax = UsedItem(0xBE, 0xBE)
1339  004C        If (result.equal) jump to 0077
133B  004E        ShowMessage(0x0BB7) = You found a trapdoor on the floor.
1348  005B        SetMoveMap(00, 0xB3, 0x02, 0x03)
1362  0075        Jump to 009E
1364  0077        ShowMessage(0x0BDA) = You fall through a trapdoor.
1371  0084        SetMoveMap(00, 0xB3, 0x02, 0x03)
138B  009E        RETURN

TRAPDORF_1D:
138D  0000        BEGIN
1390  0003        ax = UsedSkill(0x0D) // returns 0 if did not use, compares to 2nd op if did use
139C  000F        compare(ax, 0x000A)
139F  0012        If (result.above or result.equal) jump to 004E
13A1  0014        ax = UsedSpell(0x17) // returns 0 if did not use on map, level if used
13AD  0020        RefreshCompareFlags(ax)
13AF  0022        If (result.notequal) jump to 004E
13B1  0024        ax = UsedItem(0xA2, 0xA2)
13C4  0037        If (result.notequal) jump to 004E
13C6  0039        ax = UsedItem(0xBE, 0xBE)
13D9  004C        If (result.equal) jump to 0078
13DB  004E        ShowMessage(0x0BF7) = You found a trapdoor on the floor.
13E8  005B        SetMoveMap(0x02, 0xB5, 0x02, 0x03)
1403  0076        Jump to 00A0
1405  0078        ShowMessage(0x0C1A) = You fall through a trapdoor.
1412  0085        SetMoveMap(0x02, 0xB5, 0x02, 0x03)
142D  00A0        RETURN

TRAPDORG_1E:
142F  0000        BEGIN
1432  0003        ax = UsedSkill(0x0D) // returns 0 if did not use, compares to 2nd op if did use
143E  000F        compare(ax, 0x000A)
1441  0012        If (result.above or result.equal) jump to 004E
1443  0014        ax = UsedSpell(0x17) // returns 0 if did not use on map, level if used
144F  0020        RefreshCompareFlags(ax)
1451  0022        If (result.notequal) jump to 004E
1453  0024        ax = UsedItem(0xA2, 0xA2)
1466  0037        If (result.notequal) jump to 004E
1468  0039        ax = UsedItem(0xBE, 0xBE)
147B  004C        If (result.equal) jump to 0077
147D  004E        ShowMessage(0x0C37) = You found a trapdoor on the floor.
148A  005B        SetMoveMap(00, 0xC2, 0x02, 0x03)
14A4  0075        Jump to 009E
14A6  0077        ShowMessage(0x0C5A) = You fall through a trapdoor.
14B3  0084        SetMoveMap(00, 0xC2, 0x02, 0x03)
14CD  009E        RETURN

TRAPDORH_1F:
14CF  0000        BEGIN
14D2  0003        ax = UsedSkill(0x0D) // returns 0 if did not use, compares to 2nd op if did use
14DE  000F        compare(ax, 0x000A)
14E1  0012        If (result.above or result.equal) jump to 004E
14E3  0014        ax = UsedSpell(0x17) // returns 0 if did not use on map, level if used
14EF  0020        RefreshCompareFlags(ax)
14F1  0022        If (result.notequal) jump to 004E
14F3  0024        ax = UsedItem(0xA2, 0xA2)
1506  0037        If (result.notequal) jump to 004E
1508  0039        ax = UsedItem(0xBE, 0xBE)
151B  004C        If (result.equal) jump to 0078
151D  004E        ShowMessage(0x0C77) = You found a trapdoor on the floor.
152A  005B        SetMoveMap(0x02, 0xC6, 0x02, 0x03)
1545  0076        Jump to 00A0
1547  0078        ShowMessage(0x0C9A) = You fall through a trapdoor.
1554  0085        SetMoveMap(0x02, 0xC6, 0x02, 0x03)
156F  00A0        RETURN

TRAPDORI_20:
1571  0000        BEGIN
1574  0003        ax = UsedSkill(0x0D) // returns 0 if did not use, compares to 2nd op if did use
1580  000F        compare(ax, 0x000A)
1583  0012        If (result.above or result.equal) jump to 004E
1585  0014        ax = UsedSpell(0x17) // returns 0 if did not use on map, level if used
1591  0020        RefreshCompareFlags(ax)
1593  0022        If (result.notequal) jump to 004E
1595  0024        ax = UsedItem(0xA2, 0xA2)
15A8  0037        If (result.notequal) jump to 004E
15AA  0039        ax = UsedItem(0xBE, 0xBE)
15BD  004C        If (result.equal) jump to 0077
15BF  004E        ShowMessage(0x0CB7) = You found a trapdoor on the floor.
15CC  005B        SetMoveMap(00, 0xD3, 0x02, 0x03)
15E6  0075        Jump to 009E
15E8  0077        ShowMessage(0x0CDA) = You fall through a trapdoor.
15F5  0084        SetMoveMap(00, 0xD3, 0x02, 0x03)
160F  009E        RETURN

TRAPDORJ_21:
1611  0000        BEGIN
1614  0003        ax = UsedSkill(0x0D) // returns 0 if did not use, compares to 2nd op if did use
1620  000F        compare(ax, 0x000A)
1623  0012        If (result.above or result.equal) jump to 004E
1625  0014        ax = UsedSpell(0x17) // returns 0 if did not use on map, level if used
1631  0020        RefreshCompareFlags(ax)
1633  0022        If (result.notequal) jump to 004E
1635  0024        ax = UsedItem(0xA2, 0xA2)
1648  0037        If (result.notequal) jump to 004E
164A  0039        ax = UsedItem(0xBE, 0xBE)
165D  004C        If (result.equal) jump to 0078
165F  004E        ShowMessage(0x0CF7) = You found a trapdoor on the floor.
166C  005B        SetMoveMap(0x01, 0xD4, 0x02, 0x03)
1687  0076        Jump to 00A0
1689  0078        ShowMessage(0x0D1A) = You fall through a trapdoor.
1696  0085        SetMoveMap(0x01, 0xD4, 0x02, 0x03)
16B1  00A0        RETURN

TRAPDORK_22:
16B3  0000        BEGIN
16B6  0003        ax = UsedSkill(0x0D) // returns 0 if did not use, compares to 2nd op if did use
16C2  000F        compare(ax, 0x000A)
16C5  0012        If (result.above or result.equal) jump to 004E
16C7  0014        ax = UsedSpell(0x17) // returns 0 if did not use on map, level if used
16D3  0020        RefreshCompareFlags(ax)
16D5  0022        If (result.notequal) jump to 004E
16D7  0024        ax = UsedItem(0xA2, 0xA2)
16EA  0037        If (result.notequal) jump to 004E
16EC  0039        ax = UsedItem(0xBE, 0xBE)
16FF  004C        If (result.equal) jump to 0078
1701  004E        ShowMessage(0x0D37) = You found a trapdoor on the floor.
170E  005B        SetMoveMap(0x02, 0xD5, 0x02, 0x03)
1729  0076        Jump to 00A0
172B  0078        ShowMessage(0x0D5A) = You fall through a trapdoor.
1738  0085        SetMoveMap(0x02, 0xD5, 0x02, 0x03)
1753  00A0        RETURN

TRAPDORL_23:
1755  0000        BEGIN
1758  0003        ax = UsedSkill(0x0D) // returns 0 if did not use, compares to 2nd op if did use
1764  000F        compare(ax, 0x000A)
1767  0012        If (result.above or result.equal) jump to 004E
1769  0014        ax = UsedSpell(0x17) // returns 0 if did not use on map, level if used
1775  0020        RefreshCompareFlags(ax)
1777  0022        If (result.notequal) jump to 004E
1779  0024        ax = UsedItem(0xA2, 0xA2)
178C  0037        If (result.notequal) jump to 004E
178E  0039        ax = UsedItem(0xBE, 0xBE)
17A1  004C        If (result.equal) jump to 0078
17A3  004E        ShowMessage(0x0D77) = You found a trapdoor on the floor.
17B0  005B        SetMoveMap(0x01, 0xE0, 0x02, 0x03)
17CB  0076        Jump to 00A0
17CD  0078        ShowMessage(0x0D9A) = You fall through a trapdoor.
17DA  0085        SetMoveMap(0x01, 0xE0, 0x02, 0x03)
17F5  00A0        RETURN

TRAPDORM_24:
17F7  0000        BEGIN
17FA  0003        ax = UsedSkill(0x0D) // returns 0 if did not use, compares to 2nd op if did use
1806  000F        compare(ax, 0x000A)
1809  0012        If (result.above or result.equal) jump to 004E
180B  0014        ax = UsedSpell(0x17) // returns 0 if did not use on map, level if used
1817  0020        RefreshCompareFlags(ax)
1819  0022        If (result.notequal) jump to 004E
181B  0024        ax = UsedItem(0xA2, 0xA2)
182E  0037        If (result.notequal) jump to 004E
1830  0039        ax = UsedItem(0xBE, 0xBE)
1843  004C        If (result.equal) jump to 0078
1845  004E        ShowMessage(0x0DB7) = You found a trapdoor on the floor.
1852  005B        SetMoveMap(0x01, 0xE2, 0x02, 0x03)
186D  0076        Jump to 00A0
186F  0078        ShowMessage(0x0DDA) = You fall through a trapdoor.
187C  0085        SetMoveMap(0x01, 0xE2, 0x02, 0x03)
1897  00A0        RETURN

TRAPDORN_25:
1899  0000        BEGIN
189C  0003        ax = UsedSkill(0x0D) // returns 0 if did not use, compares to 2nd op if did use
18A8  000F        compare(ax, 0x000A)
18AB  0012        If (result.above or result.equal) jump to 004E
18AD  0014        ax = UsedSpell(0x17) // returns 0 if did not use on map, level if used
18B9  0020        RefreshCompareFlags(ax)
18BB  0022        If (result.notequal) jump to 004E
18BD  0024        ax = UsedItem(0xA2, 0xA2)
18D0  0037        If (result.notequal) jump to 004E
18D2  0039        ax = UsedItem(0xBE, 0xBE)
18E5  004C        If (result.equal) jump to 0078
18E7  004E        ShowMessage(0x0DF7) = You found a trapdoor on the floor.
18F4  005B        SetMoveMap(0x01, 0xE3, 0x02, 0x03)
190F  0076        Jump to 00A0
1911  0078        ShowMessage(0x0E1A) = You fall through a trapdoor.
191E  0085        SetMoveMap(0x01, 0xE3, 0x02, 0x03)
1939  00A0        RETURN

TRAPDORO_26:
193B  0000        BEGIN
193E  0003        ax = UsedSkill(0x0D) // returns 0 if did not use, compares to 2nd op if did use
194A  000F        compare(ax, 0x000A)
194D  0012        If (result.above or result.equal) jump to 004E
194F  0014        ax = UsedSpell(0x17) // returns 0 if did not use on map, level if used
195B  0020        RefreshCompareFlags(ax)
195D  0022        If (result.notequal) jump to 004E
195F  0024        ax = UsedItem(0xA2, 0xA2)
1972  0037        If (result.notequal) jump to 004E
1974  0039        ax = UsedItem(0xBE, 0xBE)
1987  004C        If (result.equal) jump to 0078
1989  004E        ShowMessage(0x0E37) = You found a trapdoor on the floor.
1996  005B        SetMoveMap(0x01, 0xE5, 0x02, 0x03)
19B1  0076        Jump to 00A0
19B3  0078        ShowMessage(0x0E5A) = You fall through a trapdoor.
19C0  0085        SetMoveMap(0x01, 0xE5, 0x02, 0x03)
19DB  00A0        RETURN

TRAPDORP_27:
19DD  0000        BEGIN
19E0  0003        ax = UsedSkill(0x0D) // returns 0 if did not use, compares to 2nd op if did use
19EC  000F        compare(ax, 0x000A)
19EF  0012        If (result.above or result.equal) jump to 004E
19F1  0014        ax = UsedSpell(0x17) // returns 0 if did not use on map, level if used
19FD  0020        RefreshCompareFlags(ax)
19FF  0022        If (result.notequal) jump to 004E
1A01  0024        ax = UsedItem(0xA2, 0xA2)
1A14  0037        If (result.notequal) jump to 004E
1A16  0039        ax = UsedItem(0xBE, 0xBE)
1A29  004C        If (result.equal) jump to 0078
1A2B  004E        ShowMessage(0x0E77) = You found a trapdoor on the floor.
1A38  005B        SetMoveMap(0x01, 0xE6, 0x02, 0x03)
1A53  0076        Jump to 00A0
1A55  0078        ShowMessage(0x0E9A) = You fall through a trapdoor.
1A62  0085        SetMoveMap(0x01, 0xE6, 0x02, 0x03)
1A7D  00A0        RETURN

TRAPDORQ_28:
1A7F  0000        BEGIN
1A82  0003        ax = UsedSkill(0x0D) // returns 0 if did not use, compares to 2nd op if did use
1A8E  000F        compare(ax, 0x000A)
1A91  0012        If (result.above or result.equal) jump to 004E
1A93  0014        ax = UsedSpell(0x17) // returns 0 if did not use on map, level if used
1A9F  0020        RefreshCompareFlags(ax)
1AA1  0022        If (result.notequal) jump to 004E
1AA3  0024        ax = UsedItem(0xA2, 0xA2)
1AB6  0037        If (result.notequal) jump to 004E
1AB8  0039        ax = UsedItem(0xBE, 0xBE)
1ACB  004C        If (result.equal) jump to 0078
1ACD  004E        ShowMessage(0x0EB7) = You found a trapdoor on the floor.
1ADA  005B        SetMoveMap(0x01, 0xE8, 0x02, 0x03)
1AF5  0076        Jump to 00A0
1AF7  0078        ShowMessage(0x0EDA) = You fall through a trapdoor.
1B04  0085        SetMoveMap(0x01, 0xE8, 0x02, 0x03)
1B1F  00A0        RETURN

TOCORRB_29:
1B21  0000        BEGIN
1B24  0003        SetMoveMap(0x03, 0xF1, 0x02, 0x02)
1B3F  001E        RETURN

GATEMESS_2A:
1B41  0000        BEGIN
1B44  0003        ShowMessage(0x0EF7) = The gateway leads to THE PALACE CORRIDOR.
1B51  0010        RETURN

PASSCOLM_2B:
1B53  0000        BEGIN
1B56  0003        ShowMessage(0x0F21) = As you step forward, the column slides away.
1B63  0010        SetMove34(0x01, 0xF7)
1B74  0021        RETURN

_2C:
1B76  0000        BEGIN
1B79  0003        ShowMessage(0x0F4E) = You bump into the pillar.
1B86  0010        RETURN

NPCCHATA_2D:
1B88  0000        BEGIN
1B8B  0003        ShowMessage(0x0F68) = You encounter an Elf Ranger.
1B98  0010        ShowPortrait(0x001F)
1BA5  001D        ax = UnknownFunctionEC(0x000F)
1BB2  002A        compare(ax, 0x000D)
1BB5  002D        If (result.unsigned_greater_than) jump to 003E
1BB7  002F        ShowMessage(0x0F85) = The ghost of King Cleowyn appears at his throne on special occasions. Once the king appears, he will not appear again until all mortals have left the Palace.
1BC4  003C        Jump to 004B
1BC6  003E        ShowMessage(0x1023) = The Elf Ranger ignores you as he wanders the room, rapping on the walls.
1BD3  004B        RETURN

NPCCHATB_2E:
1BD5  0000        BEGIN
1BD8  0003        ShowMessage(0x106C) = You encounter a Gremlin Thief.
1BE5  0010        ShowPortrait(0x0026)
1BF2  001D        ax = UnknownFunctionEC(0x000F)
1BFF  002A        compare(ax, 0x000C)
1C02  002D        If (result.unsigned_greater_than) jump to 003E
1C04  002F        ShowMessage(0x108B) = The pit is pitiless. Do not go near it. The traps are dangerous, but they may aid you.
1C11  003C        Jump to 004B
1C13  003E        ShowMessage(0x10E2) = The Gremlin Thief runs away when you approach him.
1C20  004B        RETURN

NPCCHATC_2F:
1C22  0000        BEGIN
1C25  0003        ShowMessage(0x1115) = You encounter a Dwarf Knight.
1C32  0010        ShowPortrait(0x001C)
1C3F  001D        ax = UnknownFunctionEC(0x000F)
1C4C  002A        compare(ax, 0x000A)
1C4F  002D        If (result.unsigned_greater_than) jump to 003E
1C51  002F        ShowMessage(0x1133) = Obey the king. Return his cherished possessions and you will be blessed. Keep them and you will die.
1C5E  003C        Jump to 004B
1C60  003E        ShowMessage(0x1198) = The Dwarf Knight snubs you and wanders off in search of adventure.
1C6D  004B        RETURN

KINGMSG_30:
1C6F  0000        BEGIN
1C72  0003        ax = HasItem(0xF8)
1C80  0011        If (result.notequal) jump to 0016
1C82  0013        Jump to 00C8
1C85  0016        ShowPortrait(0x000A)
1C92  0023        ShowMessage(0x11DB) = Very good, heroes. You have proven your strength in battle. Know that I am the spirit of King Cleowyn, called the Cruel. I set you a quest.
1C9F  0030        ShowMessage(0x1267) = The imps who serve Arnakkian have stolen my Crown, Robe, and Scepter. I want them back. Return them to their proper places in my mausoleum, and I shall reward you.
1CAC  003D        ShowMessage(0x130B) = If you keep my possessions, I shall curse you! I give you gold to dull your greed.
1CB9  004A        ShowMessage(0x135E) = I earned Arnakkian's enmity because I tried to wrest his secrets from the buried castle
1CC6  0057        ShowMessage(0x13B6) = I almost succeeded, but the spirit of the wizard tracked me down and killed me.
1CD3  0064        ShowMessage(0x1406) = I would be grateful if you can find my body and place it in my mausoleum. Then, perhaps, my spirit can rest in peace.
1CE0  0071        ShowMessage(0x147C) = But first you must return my possessions to me. Then I shall let you continue your journeys.
1CED  007E        ShowMessage(0x14D9) = Take my ring as seal of your promise. Go, heroes! Find the tapestry and read. Start your quest.
1CFA  008B        ax = CheckState(0x02, 0x8F)
1D0B  009C        RefreshCompareFlags(ax)
1D0D  009E        If (result.notequal) jump to 00C6
1D0F  00A0        SetState(0x02, 0x8F, 0x01)
1D24  00B5        AddExperience(0x000061A8)
1D35  00C6        Jump to 00D5
1D37  00C8        ShowMessage(0x1539) = Echoes of ghostly laughter mock you.
1D44  00D5        RETURN

EMPTY:
1D46  0000        <Empty Function>

EMPTY:
1D4B  0000        <Empty Function>

EMPTY:
1D50  0000        <Empty Function>

EMPTY:
1D55  0000        <Empty Function>

EMPTY:
1D5A  0000        <Empty Function>

EMPTY:
1D5F  0000        <Empty Function>

EMPTY:
1D64  0000        <Empty Function>

EMPTY:
1D69  0000        <Empty Function>

EMPTY:
1D6E  0000        <Empty Function>

EMPTY:
1D73  0000        <Empty Function>

EMPTY:
1D78  0000        <Empty Function>

EMPTY:
1D7D  0000        <Empty Function>

EMPTY:
1D82  0000        <Empty Function>

EMPTY:
1D87  0000        <Empty Function>

EMPTY:
1D8C  0000        <Empty Function>

EMPTY:
1D91  0000        <Empty Function>

EMPTY:
1D96  0000        <Empty Function>

EMPTY:
1D9B  0000        <Empty Function>

EMPTY:
1DA0  0000        <Empty Function>

EMPTY:
1DA5  0000        <Empty Function>

EMPTY:
1DAA  0000        <Empty Function>

EMPTY:
1DAF  0000        <Empty Function>

EMPTY:
1DB4  0000        <Empty Function>

EMPTY:
1DB9  0000        <Empty Function>

EMPTY:
1DBE  0000        <Empty Function>

EMPTY:
1DC3  0000        <Empty Function>

EMPTY:
1DC8  0000        <Empty Function>

EMPTY:
1DCD  0000        <Empty Function>

EMPTY:
1DD2  0000        <Empty Function>

EMPTY:
1DD7  0000        <Empty Function>

EMPTY:
1DDC  0000        <Empty Function>

EMPTY:
1DE1  0000        <Empty Function>

EMPTY:
1DE6  0000        <Empty Function>

EMPTY:
1DEB  0000        <Empty Function>

EMPTY:
1DF0  0000        <Empty Function>

EMPTY:
1DF5  0000        <Empty Function>

EMPTY:
1DFA  0000        <Empty Function>

EMPTY:
1DFF  0000        <Empty Function>

EMPTY:
1E04  0000        <Empty Function>

EMPTY:
1E09  0000        <Empty Function>

EMPTY:
1E0E  0000        <Empty Function>

EMPTY:
1E13  0000        <Empty Function>

EMPTY:
1E18  0000        <Empty Function>

EMPTY:
1E1D  0000        <Empty Function>

EMPTY:
1E22  0000        <Empty Function>

EMPTY:
1E27  0000        <Empty Function>

EMPTY:
1E2C  0000        <Empty Function>

EMPTY:
1E31  0000        <Empty Function>

EMPTY:
1E36  0000        <Empty Function>

EMPTY:
1E3B  0000        <Empty Function>

EMPTY:
1E40  0000        <Empty Function>

EMPTY:
1E45  0000        <Empty Function>

EMPTY:
1E4A  0000        <Empty Function>

EMPTY:
1E4F  0000        <Empty Function>

EMPTY:
1E54  0000        <Empty Function>

EMPTY:
1E59  0000        <Empty Function>

EMPTY:
1E5E  0000        <Empty Function>

EMPTY:
1E63  0000        <Empty Function>

EMPTY:
1E68  0000        <Empty Function>

EMPTY:
1E6D  0000        <Empty Function>

EMPTY:
1E72  0000        <Empty Function>

EMPTY:
1E77  0000        <Empty Function>

EMPTY:
1E7C  0000        <Empty Function>

EMPTY:
1E81  0000        <Empty Function>

EMPTY:
1E86  0000        <Empty Function>

EMPTY:
1E8B  0000        <Empty Function>

EMPTY:
1E90  0000        <Empty Function>

EMPTY:
1E95  0000        <Empty Function>

EMPTY:
1E9A  0000        <Empty Function>

EMPTY:
1E9F  0000        <Empty Function>

EMPTY:
1EA4  0000        <Empty Function>

EMPTY:
1EA9  0000        <Empty Function>

EMPTY:
1EAE  0000        <Empty Function>

EMPTY:
1EB3  0000        <Empty Function>

EMPTY:
1EB8  0000        <Empty Function>

EMPTY:
1EBD  0000        <Empty Function>

EMPTY:
1EC2  0000        <Empty Function>

EMPTY:
1EC7  0000        <Empty Function>

EMPTY:
1ECC  0000        <Empty Function>

EMPTY:
1ED1  0000        <Empty Function>

EMPTY:
1ED6  0000        <Empty Function>

EMPTY:
1EDB  0000        <Empty Function>

EMPTY:
1EE0  0000        <Empty Function>

EMPTY:
1EE5  0000        <Empty Function>

EMPTY:
1EEA  0000        <Empty Function>

EMPTY:
1EEF  0000        <Empty Function>

EMPTY:
1EF4  0000        <Empty Function>

EMPTY:
1EF9  0000        <Empty Function>

EMPTY:
1EFE  0000        <Empty Function>

EMPTY:
1F03  0000        <Empty Function>

EMPTY:
1F08  0000        <Empty Function>

EMPTY:
1F0D  0000        <Empty Function>

EMPTY:
1F12  0000        <Empty Function>

EMPTY:
1F17  0000        <Empty Function>

EMPTY:
1F1C  0000        <Empty Function>

EMPTY:
1F21  0000        <Empty Function>

EMPTY:
1F26  0000        <Empty Function>

EMPTY:
1F2B  0000        <Empty Function>

EMPTY:
1F30  0000        <Empty Function>

EMPTY:
1F35  0000        <Empty Function>

EMPTY:
1F3A  0000        <Empty Function>

EMPTY:
1F3F  0000        <Empty Function>

EMPTY:
1F44  0000        <Empty Function>

EMPTY:
1F49  0000        <Empty Function>

EMPTY:
1F4E  0000        <Empty Function>

EMPTY:
1F53  0000        <Empty Function>

EMPTY:
1F58  0000        <Empty Function>

EMPTY:
1F5D  0000        <Empty Function>

EMPTY:
1F62  0000        <Empty Function>

EMPTY:
1F67  0000        <Empty Function>

EMPTY:
1F6C  0000        <Empty Function>

EMPTY:
1F71  0000        <Empty Function>

EMPTY:
1F76  0000        <Empty Function>

EMPTY:
1F7B  0000        <Empty Function>

EMPTY:
1F80  0000        <Empty Function>

EMPTY:
1F85  0000        <Empty Function>

EMPTY:
1F8A  0000        <Empty Function>

EMPTY:
1F8F  0000        <Empty Function>

EMPTY:
1F94  0000        <Empty Function>

EMPTY:
1F99  0000        <Empty Function>

EMPTY:
1F9E  0000        <Empty Function>

EMPTY:
1FA3  0000        <Empty Function>

EMPTY:
1FA8  0000        <Empty Function>

EMPTY:
1FAD  0000        <Empty Function>

EMPTY:
1FB2  0000        <Empty Function>

EMPTY:
1FB7  0000        <Empty Function>

EMPTY:
1FBC  0000        <Empty Function>

EMPTY:
1FC1  0000        <Empty Function>

EMPTY:
1FC6  0000        <Empty Function>

EMPTY:
1FCB  0000        <Empty Function>

EMPTY:
1FD0  0000        <Empty Function>

EMPTY:
1FD5  0000        <Empty Function>

EMPTY:
1FDA  0000        <Empty Function>

EMPTY:
1FDF  0000        <Empty Function>

EMPTY:
1FE4  0000        <Empty Function>

EMPTY:
1FE9  0000        <Empty Function>

EMPTY:
1FEE  0000        <Empty Function>

EMPTY:
1FF3  0000        <Empty Function>

EMPTY:
1FF8  0000        <Empty Function>

EMPTY:
1FFD  0000        <Empty Function>

EMPTY:
2002  0000        <Empty Function>

EMPTY:
2007  0000        <Empty Function>

EMPTY:
200C  0000        <Empty Function>

EMPTY:
2011  0000        <Empty Function>

EMPTY:
2016  0000        <Empty Function>

EMPTY:
201B  0000        <Empty Function>

EMPTY:
2020  0000        <Empty Function>

EMPTY:
2025  0000        <Empty Function>

EMPTY:
202A  0000        <Empty Function>

EMPTY:
202F  0000        <Empty Function>

EMPTY:
2034  0000        <Empty Function>

EMPTY:
2039  0000        <Empty Function>

EMPTY:
203E  0000        <Empty Function>

EMPTY:
2043  0000        <Empty Function>

EMPTY:
2048  0000        <Empty Function>

EMPTY:
204D  0000        <Empty Function>

EMPTY:
2052  0000        <Empty Function>

EMPTY:
2057  0000        <Empty Function>

EMPTY:
205C  0000        <Empty Function>

EMPTY:
2061  0000        <Empty Function>

EMPTY:
2066  0000        <Empty Function>

EMPTY:
206B  0000        <Empty Function>

EMPTY:
2070  0000        <Empty Function>

EMPTY:
2075  0000        <Empty Function>

EMPTY:
207A  0000        <Empty Function>

EMPTY:
207F  0000        <Empty Function>

EMPTY:
2084  0000        <Empty Function>

EMPTY:
2089  0000        <Empty Function>

EMPTY:
208E  0000        <Empty Function>

EMPTY:
2093  0000        <Empty Function>

EMPTY:
2098  0000        <Empty Function>

EMPTY:
209D  0000        <Empty Function>

EMPTY:
20A2  0000        <Empty Function>

EMPTY:
20A7  0000        <Empty Function>

EMPTY:
20AC  0000        <Empty Function>

EMPTY:
20B1  0000        <Empty Function>

EMPTY:
20B6  0000        <Empty Function>

EMPTY:
20BB  0000        <Empty Function>

EMPTY:
20C0  0000        <Empty Function>

EMPTY:
20C5  0000        <Empty Function>

EMPTY:
20CA  0000        <Empty Function>

EMPTY:
20CF  0000        <Empty Function>

EMPTY:
20D4  0000        <Empty Function>

EMPTY:
20D9  0000        <Empty Function>

EMPTY:
20DE  0000        <Empty Function>

EMPTY:
20E3  0000        <Empty Function>

EMPTY:
20E8  0000        <Empty Function>

EMPTY:
20ED  0000        <Empty Function>

EMPTY:
20F2  0000        <Empty Function>

EMPTY:
20F7  0000        <Empty Function>

EMPTY:
20FC  0000        <Empty Function>

EMPTY:
2101  0000        <Empty Function>

EMPTY:
2106  0000        <Empty Function>

EMPTY:
210B  0000        <Empty Function>

EMPTY:
2110  0000        <Empty Function>

EMPTY:
2115  0000        <Empty Function>

EMPTY:
211A  0000        <Empty Function>

EMPTY:
211F  0000        <Empty Function>

EMPTY:
2124  0000        <Empty Function>

EMPTY:
2129  0000        <Empty Function>

EMPTY:
212E  0000        <Empty Function>

EMPTY:
2133  0000        <Empty Function>

EMPTY:
2138  0000        <Empty Function>

EMPTY:
213D  0000        <Empty Function>

EMPTY:
2142  0000        <Empty Function>

EMPTY:
2147  0000        <Empty Function>

EMPTY:
214C  0000        <Empty Function>

STRINGS:
03FC: As you step forward, the column slides away.
0429: As you step forward, the column slides away.
0456: Runes appear on the tapestry...
0476: Imps have hidden the Crown, Robe and Scepter. Only a master of the runes may find them. Two-faced Y is at the center of the quest. From Y, open O and E and I. When a rune key is used correctly, it will disappear.
054B: You see an ornate tapestry. The middle of the tapestry is blank.
058C: King Cleowyn's angry spirit appears.
05B1: He tears the Key to the Palace away from you as he and his courtiers attack.
05FE: King Cleowyn and his dead courtiers appear to challenge you.
063B: You fall into a deep, deep pit.
065B: Your body provides a soft landing pad for the rest of your party.
069D: You feel the tickle of cobwebs on your neck.
06CA: Spiders are using a spear in the middle of the floor as a support for their webs.
071C: You see a weapon on the floor and step forward. Banshees sense your presence and gather to attack.
077F: Nightmares emerge from the shadows.
07A3: A group of Nightmares claw at an axe on the floor.
07D6: You stumble upon some Zombies, eating the remains of a former adventurer.
0820: The shuffle of heavy feet put you on your guard. One of the things kicks a shield out of its way.
0882: Ghosts rise from the floor to haunt you.
08AB: Ghosts are gathered around a jacket on the floor. They seem to be pondering its purpose.
0904: Skeletons of King Cleowyn's elite palace guard advance on you.
0943: The leader of the dead palace guards that surrounds you wears rusty chainmail.
0992: There are runes on the wall...
09B1: What you see is not always what is real.
09DA: You successfully picked the locked door.
0A03: The door is locked.
0A17: You manage to open the door by brute force.
0A43: You are not strong enough to force the door open.
0A75: You picked the lock of the door successfully.
0AA3: The door is locked.
0AB7: You found a trapdoor on the floor.
0ADA: You fall through a trapdoor.
0AF7: You found a trapdoor on the floor.
0B1A: You fall through a trapdoor.
0B37: You found a trapdoor on the floor.
0B5A: You fall through a trapdoor.
0B77: You found a trapdoor on the floor.
0B9A: You fall through a trapdoor.
0BB7: You found a trapdoor on the floor.
0BDA: You fall through a trapdoor.
0BF7: You found a trapdoor on the floor.
0C1A: You fall through a trapdoor.
0C37: You found a trapdoor on the floor.
0C5A: You fall through a trapdoor.
0C77: You found a trapdoor on the floor.
0C9A: You fall through a trapdoor.
0CB7: You found a trapdoor on the floor.
0CDA: You fall through a trapdoor.
0CF7: You found a trapdoor on the floor.
0D1A: You fall through a trapdoor.
0D37: You found a trapdoor on the floor.
0D5A: You fall through a trapdoor.
0D77: You found a trapdoor on the floor.
0D9A: You fall through a trapdoor.
0DB7: You found a trapdoor on the floor.
0DDA: You fall through a trapdoor.
0DF7: You found a trapdoor on the floor.
0E1A: You fall through a trapdoor.
0E37: You found a trapdoor on the floor.
0E5A: You fall through a trapdoor.
0E77: You found a trapdoor on the floor.
0E9A: You fall through a trapdoor.
0EB7: You found a trapdoor on the floor.
0EDA: You fall through a trapdoor.
0EF7: The gateway leads to THE PALACE CORRIDOR.
0F21: As you step forward, the column slides away.
0F4E: You bump into the pillar.
0F68: You encounter an Elf Ranger.
0F85: The ghost of King Cleowyn appears at his throne on special occasions. Once the king appears, he will not appear again until all mortals have left the Palace.
1023: The Elf Ranger ignores you as he wanders the room, rapping on the walls.
106C: You encounter a Gremlin Thief.
108B: The pit is pitiless. Do not go near it. The traps are dangerous, but they may aid you.
10E2: The Gremlin Thief runs away when you approach him.
1115: You encounter a Dwarf Knight.
1133: Obey the king. Return his cherished possessions and you will be blessed. Keep them and you will die.
1198: The Dwarf Knight snubs you and wanders off in search of adventure.
11DB: Very good, heroes. You have proven your strength in battle. Know that I am the spirit of King Cleowyn, called the Cruel. I set you a quest.
1267: The imps who serve Arnakkian have stolen my Crown, Robe, and Scepter. I want them back. Return them to their proper places in my mausoleum, and I shall reward you.
130B: If you keep my possessions, I shall curse you! I give you gold to dull your greed.
135E: I earned Arnakkian's enmity because I tried to wrest his secrets from the buried castle
13B6: I almost succeeded, but the spirit of the wizard tracked me down and killed me.
1406: I would be grateful if you can find my body and place it in my mausoleum. Then, perhaps, my spirit can rest in peace.
147C: But first you must return my possessions to me. Then I shall let you continue your journeys.
14D9: Take my ring as seal of your promise. Go, heroes! Find the tapestry and read. Start your quest.
1539: Echoes of ghostly laughter mock you.
