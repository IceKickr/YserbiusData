DROP_01:
0006  0000        BEGIN
0009  0003        ShowMessage(0x03FC) = Other pits in the Labyrinth provide access to hidden areas...
0016  0010        ShowMessage(0x043A) = This pit, however, sends you to the gates of Death.
0023  001D        ax = GetMaxHits()
002A  0024        DoDamage(ax)
0034  002E        RETURN

XOVER_02:
0036  0000        BEGIN
0039  0003        ax = GetNextTile()
0040  000A        compare(ax, 0x0047)
0043  000D        If (result.notequal) jump to 0070
0045  000F        ax = CheckState(0x01, 0x01)
0056  0020        RefreshCompareFlags(ax)
0058  0022        If (result.equal) jump to 0043
005A  0024        SetTileFloor(0x47, 00)
0068  0032        cx = Pop()
0069  0033        cx = Pop()
006A  0034        ShowMessage(0x046E) = A magical platform forms a bridge across the abyss.
0077  0041        Jump to 006E
0079  0043        ShowMessage(0x04A2) = You fall into the abyss and die.
0086  0050        ShowMessage(0x04C3) = With help, you might have been able to cross here.
0093  005D        ax = GetMaxHits()
009A  0064        DoDamage(ax)
00A4  006E        Jump to 00A8
00A6  0070        ax = CheckState(0x01, 0x01)
00B7  0081        RefreshCompareFlags(ax)
00B9  0083        If (result.equal) jump to 0097
00BB  0085        SetTileFloor(0x47, 00)
00C9  0093        cx = Pop()
00CA  0094        cx = Pop()
00CB  0095        Jump to 00A8
00CD  0097        SetTileFloor(0x47, 0x01)
00DE  00A8        RETURN

XOVERON_03:
00E0  0000        BEGIN
00E3  0003        SetState(0x01, 0x01, 0x01)
00F8  0018        SetTileFloor(0x47, 00)
0106  0026        cx = Pop()
0107  0027        cx = Pop()
0108  0028        ShowMessage(0x04F6) = Something strange happens!
0115  0035        ShowMessage(0x0511) = When you step onto the stone, a magical platform appears nearby.
0122  0042        RETURN

BAZAAR_04:
0124  0000        BEGIN
0127  0003        ShowMessage(0x0552) = You do not suffer the death found in other pits in the Labyrinth.  Instead you are rewarded with a trip to CASTLEGATE BAZAAR.
0134  0010        GoMap(0x03, 0x12, 0x01, 0x36)
014F  002B        RETURN

HEAVENS_05:
0151  0000        BEGIN
0154  0003        ShowMessage(0x05D0) = The Dark Dwarf Voranti tricked the Lords of Harmony many moons ago.
0161  0010        ShowMessage(0x0614) = He stole the secrets of the Winds from the Lords and has used them for his own purposes every since.
016E  001D        ShowMessage(0x0679) = The Lords' Harmonic Shrine has now become the raging passageway known as HEAVEN'S FURY.
017B  002A        GoMap(0x02, 0xA3, 0x01, 0x35)
0196  0045        RETURN

EXODUS_06:
0198  0000        BEGIN
019B  0003        ShowMessage(0x06D1) = The survivors of the cataclysm named this place EXODUS.
01A8  0010        ShowMessage(0x0709) = It is here they escaped the horrors of Arnakkian's Castle and began their new subterranean life.
01B5  001D        GoMap(0x02, 0x75, 0x01, 0x35)
01D0  0038        RETURN

WINDHOLO_07:
01D2  0000        BEGIN
01D5  0003        ShowMessage(0x076A) = No adventurer dares camp in WIND HOLLOW.  At night the howling wind makes one deaf to the dangers.
01E2  0010        GoMap(0x03, 0x8A, 0x01, 0x35)
01FD  002B        RETURN

TEMPEST_08:
01FF  0000        BEGIN
0202  0003        ShowMessage(0x07CD) = TEMPEST dares all to explore the magic rooms along her narrow corridor.
020F  0010        GoMap(0x01, 0x9B, 0x01, 0x35)
022A  002B        RETURN

WINDHOLO_09:
022C  0000        BEGIN
022F  0003        ShowMessage(0x0815) = The barren rocks are swept clean by the violent winds that race through WIND HOLLOW.
023C  0010        GoMap(00, 0x7D, 0x01, 0x35)
0256  002A        RETURN

BACKALLY_0A:
0258  0000        BEGIN
025B  0003        ShowMessage(0x086A) = 'Beware!  Those who enter the Labyrinth BACK ALLEY must guard against all!'
0268  0010        GoMap(00, 0x4D, 0x01, 0x35)
0282  002A        RETURN

HEAVENS_0B:
0284  0000        BEGIN
0287  0003        ShowMessage(0x08B6) = Enter HEAVEN'S FURY if you must.  Here is where Voranti cursed the winds.
0294  0010        GoMap(0x02, 0xF3, 0x01, 0x35)
02AF  002B        RETURN

LABYATIC_0C:
02B1  0000        BEGIN
02B4  0003        ShowMessage(0x0900) = The gates of LABYRINTH ATTIC are a welcome sight.
02C1  0010        GoMap(0x02, 0xC3, 0x01, 0x33)
02DC  002B        RETURN

WINDHOLO_0D:
02DE  0000        BEGIN
02E1  0003        ShowMessage(0x0932) = The door leads to WYN SANCTUARY.
02EE  0010        GoMap(00, 0x6D, 0x01, 0x33)
0308  002A        RETURN

THVTRESR_0E:
030A  0000        BEGIN
030D  0003        ShowMessage(0x0953) = The gateway opens, revealing the secret chambers of the Labyrinth Thieves.
031A  0010        GoMap(0x02, 0x6E, 0x01, 0x33)
0335  002B        RETURN

LAVA_0F:
0337  0000        BEGIN
033A  0003        ShowMessage(0x099E) = You stumble into the lava pools.  You die.
0347  0010        ax = GetMaxHits()
034E  0017        DoDamage(ax)
0358  0021        RETURN

DRTOBALY_10:
035A  0000        BEGIN
035D  0003        ShowMessage(0x09C9) = This door locks out all except those who have the alley key.
036A  0010        ax = UsedItem(0xE0, 0xE0)
037D  0023        If (result.equal) jump to 0066
037F  0025        Push(01)
0383  0029        Push(03)
0387  002D        ax = GetNextTile()
038E  0034        Push(ax)
038F  0035        Move(stk[0], stk[1], stk[2])
0399  003F        Push(03)
039D  0043        ax = GetNextTile()
03A4  004A        Push(ax)
03A5  004B        Push(01)
03A9  004F        SetUnblocked()
03B3  0059        ShowMessage(0x0A06) = Your key unlocks the door.
03C0  0066        RETURN

EMPTY:
03C2  0000        <Empty Function>

EMPTY:
03C7  0000        <Empty Function>

EMPTY:
03CC  0000        <Empty Function>

LABYATIC_14:
03D1  0000        BEGIN
03D4  0003        ShowMessage(0x0A21) = You return to LABYRINTH ATTIC through a one-way tunnel.
03E1  0010        GoMap(0x02, 0x59, 0x01, 0x33)
03FC  002B        RETURN

WINDHOLO_15:
03FE  0000        BEGIN
0401  0003        ShowMessage(0x0A59) = The door to WIND HOLLOW bursts open with terrible force, throwing all adventurers against the rocks...
040E  0010        ShowMessage(0x0AC0) = ...and inflicting heavy damage.
041B  001D        DoDamage(0x00C8)
0428  002A        ax = GetCurrentHits()
042F  0031        RefreshCompareFlags(ax)
0431  0033        If (result.above) jump to 0042
0433  0035        ShowMessage(0x0AE0) = You have died.
0440  0042        GoMap(0x03, 0xBC, 0x01, 0x35)
045B  005D        RETURN

MAGICRMS_16:
045D  0000        BEGIN
0460  0003        ShowMessage(0x0AEF) = Runes can be the most powerful of weapons in the hands of an adept Wizard.
046D  0010        ShowMessage(0x0B3A) = Here, the runes also protect the great mage's magical possessions against the unwanted.
047A  001D        GoMap(0x02, 0x30, 0x02, 0x34)
0495  0038        RETURN

EMPTY:
0497  0000        <Empty Function>

ZEPHENCA_18:
049C  0000        BEGIN
049F  0003        AddEncounter(0x16, 0x01)
04B1  0015        AddEncounter(0x16, 0x02)
04C3  0027        AddEncounter(0x19, 0x05)
04D5  0039        AddEncounter(0x19, 0x06)
04E7  004B        ax = HasItem(0xB4)
04F5  0059        If (result.equal) jump to 007C
04F7  005B        AddTreasure(0x03E8, 0x00, 0x00, 0x00, 0x00, 0xD1)
0516  007A        Jump to 009D
0518  007C        AddTreasure(0x07D0, 0x00, 0x00, 0xC8, 0xB4, 0xD0)
0539  009D        RETURN

ZEPHENCB_19:
053B  0000        BEGIN
053E  0003        ax = CheckState2(0x02, 0x79)
0551  0016        If (result.equal) jump to 007B
0553  0018        ax = HasItem(0x09)
0561  0026        If (result.notequal) jump to 0038
0563  0028        ax = HasItem(0xF0)
0571  0036        If (result.equal) jump to 005A
0573  0038        AddTreasure(0x1388, 0x00, 0x00, 0x00, 0xB3, 0xD0)
0593  0058        Jump to 0079
0595  005A        AddTreasure(0x2710, 0x00, 0x00, 0x00, 0x00, 0xF0)
05B4  0079        Jump to 00EA
05B6  007B        ax = HasItem(0xE6)
05C4  0089        If (result.equal) jump to 00EA
05C6  008B        RemoveItem(0xE6)
05D2  0097        SetState(0x02, 0x79, 0x01)
05E7  00AC        AddTreasure(0x2710, 0x00, 0x00, 0x00, 0x00, 0xF0)
0606  00CB        AddExperience(0x0003D090)
0618  00DD        ShowMessage(0x0B92) = The Zephyr Wind whispers, 'I have taken the Harvest Horn, and I give you something to help defeat the Wind Elemental'.
0625  00EA        AddEncounter(0x10, 0x01)
0637  00FC        AddEncounter(0x10, 0x02)
0649  010E        AddEncounter(0x0F, 0x05)
065B  0120        AddEncounter(0x0F, 0x06)
066D  0132        RETURN

EMPTY:
066F  0000        <Empty Function>

TXTZEPHR_1B:
0674  0000        BEGIN
0677  0003        ShowMessage(0x0C09) = The Zephyr Wind whistles 'No harm was intended, but I am sworn to serve the Wind Elemental.  Return the Harvest Horn to my Wyverns to release my bonds.'
0684  0010        RETURN

XOVEROFF_1C:
0686  0000        BEGIN
0689  0003        SetState(0x01, 0x01, 0x00)
069D  0017        SetTileFloor(0x47, 0x01)
06AE  0028        ShowMessage(0x0CA2) = A magical platform nearby seems to disappear.
06BB  0035        RETURN

ZEPHBLOW_1D:
06BD  0000        BEGIN
06C0  0003        ShowMessage(0x0CD0) = The Zephyr Wind gusts in fury, causing damage!
06CD  0010        ax = GetMaxHits()
06D4  0017        bx = 0x0003
06D7  001A        ax = ax / bx (signed, dx = quotient)
06DA  001D        DoDamage(ax)
06E4  0027        ax = GetCurrentHits()
06EB  002E        RefreshCompareFlags(ax)
06ED  0030        If (result.above) jump to 003F
06EF  0032        ShowMessage(0x0CFF) = You have died.
06FC  003F        RETURN

DRLPENCA_1E:
06FE  0000        BEGIN
0701  0003        ShowMessage(0x0D0E) = Wafts of reddish smoke eminate from the rooms ahead.
070E  0010        AddEncounter(0x19, 0x01)
0720  0022        AddEncounter(0x19, 0x02)
0732  0034        AddEncounter(0x0F, 0x05)
0744  0046        AddEncounter(0x0F, 0x06)
0756  0058        RETURN

DRLPENCB_1F:
0758  0000        BEGIN
075B  0003        ShowMessage(0x0D43) = An acrid odor fills these chambers.
0768  0010        AddEncounter(0x0F, 0x01)
077A  0022        AddEncounter(0x0F, 0x02)
078C  0034        AddEncounter(0x1B, 0x05)
079E  0046        AddEncounter(0x1B, 0x06)
07B0  0058        RETURN

DRLPENCC_20:
07B2  0000        BEGIN
07B5  0003        ShowMessage(0x0D67) = The fiery eyes of Ancient Dragons blaze through the thick clouds that fill the chamber.
07C2  0010        AddEncounter(0x1C, 0x01)
07D4  0022        AddEncounter(0x1C, 0x02)
07E6  0034        AddEncounter(0x1C, 0x03)
07F8  0046        AddEncounter(0x1C, 0x04)
080A  0058        AddEncounter(0x1A, 0x05)
081C  006A        AddEncounter(0x1A, 0x06)
082E  007C        ax = HasItem(0xDF)
083C  008A        If (result.equal) jump to 00AD
083E  008C        AddTreasure(0x03E8, 0x00, 0x00, 0x00, 0x00, 0xD1)
085D  00AB        Jump to 00CE
085F  00AD        AddTreasure(0x4E20, 0x00, 0x00, 0xDF, 0x46, 0x6E)
0880  00CE        RETURN

ZZYZENCA_21:
0882  0000        BEGIN
0885  0003        AddEncounter(0x1E, 0x01)
0897  0015        AddEncounter(0x1E, 0x02)
08A9  0027        AddEncounter(0x1E, 0x03)
08BB  0039        AddEncounter(0x1E, 0x04)
08CD  004B        AddEncounter(0x1D, 0x05)
08DF  005D        AddEncounter(0x1D, 0x06)
08F1  006F        AddTreasure(0x1388, 0x00, 0x00, 0x17, 0x08, 0x6C)
0912  0090        RETURN

EMPTY:
0914  0000        <Empty Function>

SDRZZYZA_23:
0919  0000        BEGIN
091C  0003        ax = UsedSkill(0x0D) // returns 0 if did not use, compares to 2nd op if did use
0928  000F        compare(ax, 0x000B)
092B  0012        If (result.above or result.equal) jump to 0039
092D  0014        ax = UsedSpell(0x17) // returns 0 if did not use on map, level if used
0939  0020        RefreshCompareFlags(ax)
093B  0022        If (result.notequal) jump to 0039
093D  0024        ax = UsedItem(0xBE, 0xBE)
0950  0037        If (result.equal) jump to 0082
0952  0039        ShowMessage(0x0DBF) = You detect a secret door in the wall.
095F  0046        Push(01)
0963  004A        ax = SetExitability(ax) // ax is usually 0 following equality check
096A  0051        Push(ax)
096B  0052        ax = GetNextTile()
0972  0059        Push(ax)
0973  005A        Move(stk[0], stk[1], stk[2])
097D  0064        ax = SetExitability(ax) // ax is usually 0 following equality check
0984  006B        Push(ax)
0985  006C        ax = GetNextTile()
098C  0073        Push(ax)
098D  0074        Push(01)
0991  0078        SetUnblocked()
099B  0082        RETURN

ZZYZENCC_24:
099D  0000        BEGIN
09A0  0003        AddEncounter(0x10, 0x01)
09B2  0015        AddEncounter(0x10, 0x02)
09C4  0027        AddEncounter(0x1D, 0x03)
09D6  0039        AddEncounter(0x1D, 0x04)
09E8  004B        RETURN

MGOVENCA_25:
09EA  0000        BEGIN
09ED  0003        ShowMessage(0x0DE5) = A stash of wizard items is being raided.
09FA  0010        AddEncounter(0x1F, 0x01)
0A0C  0022        AddEncounter(0x1F, 0x02)
0A1E  0034        AddEncounter(0x20, 0x03)
0A30  0046        AddEncounter(0x20, 0x04)
0A42  0058        AddTreasure(0x03E8, 0x00, 0x00, 0xCA, 0xB2, 0xB1)
0A63  0079        RETURN

MGOVENCB_26:
0A65  0000        BEGIN
0A68  0003        AddEncounter(0x1F, 0x01)
0A7A  0015        AddEncounter(0x1F, 0x02)
0A8C  0027        AddEncounter(0x1F, 0x03)
0A9E  0039        AddEncounter(0x19, 0x04)
0AB0  004B        AddEncounter(0x05, 0x05)
0AC2  005D        RETURN

EMPTY:
0AC4  0000        <Empty Function>

SDRMGOVA_28:
0AC9  0000        BEGIN
0ACC  0003        ax = GetGuild()
0AD3  000A        compare(ax, 0x0005)
0AD6  000D        If (result.equal) jump to 0012
0AD8  000F        Jump to 0091
0ADB  0012        ax = UsedSkill(0x0D) // returns 0 if did not use, compares to 2nd op if did use
0AE7  001E        compare(ax, 0x000C)
0AEA  0021        If (result.above or result.equal) jump to 0048
0AEC  0023        ax = UsedSpell(0x17) // returns 0 if did not use on map, level if used
0AF8  002F        RefreshCompareFlags(ax)
0AFA  0031        If (result.notequal) jump to 0048
0AFC  0033        ax = UsedItem(0xBE, 0xBE)
0B0F  0046        If (result.equal) jump to 0091
0B11  0048        ShowMessage(0x0E0E) = You locate a hidden door in the wall.
0B1E  0055        Push(01)
0B22  0059        ax = SetExitability(ax) // ax is usually 0 following equality check
0B29  0060        Push(ax)
0B2A  0061        ax = GetNextTile()
0B31  0068        Push(ax)
0B32  0069        Move(stk[0], stk[1], stk[2])
0B3C  0073        ax = SetExitability(ax) // ax is usually 0 following equality check
0B43  007A        Push(ax)
0B44  007B        ax = GetNextTile()
0B4B  0082        Push(ax)
0B4C  0083        Push(01)
0B50  0087        SetUnblocked()
0B5A  0091        RETURN

VORAENCA_29:
0B5C  0000        BEGIN
0B5F  0003        AddEncounter(0x22, 0x01)
0B71  0015        AddEncounter(0x22, 0x02)
0B83  0027        AddEncounter(0x10, 0x03)
0B95  0039        AddEncounter(0x10, 0x04)
0BA7  004B        RETURN

VORAENCB_2A:
0BA9  0000        BEGIN
0BAC  0003        AddEncounter(0x22, 0x01)
0BBE  0015        AddEncounter(0x22, 0x02)
0BD0  0027        AddEncounter(0x15, 0x03)
0BE2  0039        AddEncounter(0x12, 0x04)
0BF4  004B        RETURN

EMPTY:
0BF6  0000        <Empty Function>

EMPTY:
0BFB  0000        <Empty Function>

EMPTY:
0C00  0000        <Empty Function>

EMPTY:
0C05  0000        <Empty Function>

EMPTY:
0C0A  0000        <Empty Function>

VORAENCV_30:
0C0F  0000        BEGIN
0C12  0003        ShowMessage(0x0E34) = A powerful Dwarf Thief stands before you. 'I am Voranti, Lord of Dwarf Thieves!  Fight me if you must, but you shall not find my secret treasure!  Do not fear, for I will provide decent burial when I am finished.'
0C1F  0010        ax = GetRace()
0C26  0017        compare(ax, 0x0002)
0C29  001A        If (result.notequal) jump to 0029
0C2B  001C        ShowMessage(0x0F0A) = Voranti's dark eyes glow bright with hatred. 'As for you, miserable Elf, my pet gargoyles will pick your bones clean.'
0C38  0029        ax = GetRace()
0C3F  0030        compare(ax, 0x0004)
0C42  0033        If (result.notequal) jump to 0042
0C44  0035        ShowMessage(0x0F81) = Voranti smiles sadly. 'It saddens me that I must kill a fellow dwarf, but you have brought death upon yourself.'
0C51  0042        AddEncounter(0x1C, 0x01)
0C63  0054        AddEncounter(0x21, 0x05)
0C75  0066        ax = HasItem(0xED)
0C83  0074        If (result.equal) jump to 0097
0C85  0076        AddTreasure(0x1388, 0x00, 0x00, 0x00, 0x00, 0xCC)
0CA4  0095        Jump to 00B6
0CA6  0097        AddTreasure(0x2710, 0x00, 0x00, 0x00, 0x00, 0xED)
0CC5  00B6        RETURN

SDRVORDW_31:
0CC7  0000        BEGIN
0CCA  0003        ax = UsedSkill(0x0D) // returns 0 if did not use, compares to 2nd op if did use
0CD6  000F        compare(ax, 0x000B)
0CD9  0012        If (result.above or result.equal) jump to 0039
0CDB  0014        ax = UsedSpell(0x17) // returns 0 if did not use on map, level if used
0CE7  0020        RefreshCompareFlags(ax)
0CE9  0022        If (result.notequal) jump to 0039
0CEB  0024        ax = UsedItem(0xBE, 0xBE)
0CFE  0037        If (result.equal) jump to 0082
0D00  0039        ShowMessage(0x0FF2) = You find a secret door in the wall.
0D0D  0046        ax = SetExitability(ax) // ax is usually 0 following equality check
0D14  004D        Push(ax)
0D15  004E        ax = GetNextTile()
0D1C  0055        Push(ax)
0D1D  0056        Push(01)
0D21  005A        SetUnblocked()
0D2B  0064        Push(01)
0D2F  0068        ax = SetExitability(ax) // ax is usually 0 following equality check
0D36  006F        Push(ax)
0D37  0070        ax = GetNextTile()
0D3E  0077        Push(ax)
0D3F  0078        Move(stk[0], stk[1], stk[2])
0D49  0082        RETURN

MOONENCA_32:
0D4B  0000        BEGIN
0D4E  0003        AddEncounter(0x0A, 0x01)
0D60  0015        AddEncounter(0x0A, 0x02)
0D72  0027        AddEncounter(0x24, 0x03)
0D84  0039        AddEncounter(0x24, 0x04)
0D96  004B        ax = HasItem(0xBE)
0DA4  0059        If (result.equal) jump to 007D
0DA6  005B        AddTreasure(0x07D0, 0x00, 0x00, 0x00, 0xD0, 0xB7)
0DC6  007B        Jump to 009E
0DC8  007D        AddTreasure(0x1388, 0x00, 0x00, 0xC6, 0xD1, 0xBE)
0DE9  009E        RETURN

MOONENCB_33:
0DEB  0000        BEGIN
0DEE  0003        AddEncounter(0x26, 0x01)
0E00  0015        AddEncounter(0x26, 0x02)
0E12  0027        AddEncounter(0x25, 0x03)
0E24  0039        AddEncounter(0x26, 0x05)
0E36  004B        AddEncounter(0x26, 0x06)
0E48  005D        AddTreasure(0x1B58, 0x00, 0x00, 0x00, 0x59, 0x13)
0E68  007D        RETURN

MOONENCC_34:
0E6A  0000        BEGIN
0E6D  0003        AddEncounter(0x0E, 0x01)
0E7F  0015        AddEncounter(0x0E, 0x02)
0E91  0027        AddEncounter(0x1C, 0x03)
0EA3  0039        AddEncounter(0x1C, 0x04)
0EB5  004B        AddEncounter(0x1B, 0x05)
0EC7  005D        AddEncounter(0x1B, 0x06)
0ED9  006F        AddTreasure(0x2710, 0x00, 0x00, 0x00, 0x83, 0x10)
0EF9  008F        RETURN

MOONENCD_35:
0EFB  0000        BEGIN
0EFE  0003        AddEncounter(0x24, 0x01)
0F10  0015        AddEncounter(0x24, 0x02)
0F22  0027        AddEncounter(0x24, 0x03)
0F34  0039        AddEncounter(0x24, 0x04)
0F46  004B        RETURN

MOONENCE_36:
0F48  0000        BEGIN
0F4B  0003        ShowMessage(0x1016) = A nest of young dragons!
0F58  0010        AddEncounter(0x0E, 0x01)
0F6A  0022        AddEncounter(0x0E, 0x02)
0F7C  0034        AddEncounter(0x0F, 0x03)
0F8E  0046        AddEncounter(0x1C, 0x04)
0FA0  0058        RETURN

MOONENCF_37:
0FA2  0000        BEGIN
0FA5  0003        AddEncounter(0x24, 0x01)
0FB7  0015        AddEncounter(0x24, 0x02)
0FC9  0027        AddEncounter(0x24, 0x05)
0FDB  0039        RETURN

MOONENCG_38:
0FDD  0000        BEGIN
0FE0  0003        ShowMessage(0x102F) = A yellowed piece of paper  --
0FED  0010        ShowMessage(0x104D) = 'Help! My brother Orilon has been bitten by bears and is transformed.'  - signed Margery
0FFA  001D        AddEncounter(0x28, 0x01)
100C  002F        AddEncounter(0x28, 0x02)
101E  0041        AddEncounter(0x28, 0x03)
1030  0053        AddEncounter(0x24, 0x05)
1042  0065        AddEncounter(0x24, 0x06)
1054  0077        ax = HasItem(0xEA)
1062  0085        If (result.equal) jump to 00A8
1064  0087        AddTreasure(0x2328, 0x00, 0x00, 0x00, 0x00, 0xBB)
1083  00A6        Jump to 00C8
1085  00A8        AddTreasure(0x1388, 0x00, 0x00, 0x00, 0xEA, 0x85)
10A5  00C8        RETURN

EMPTY:
10A7  0000        <Empty Function>

TXTMOONB_3A:
10AC  0000        BEGIN
10AF  0003        ShowMessage(0x10A6) = A note -- 'Only past the Darkside will you find En-Li-Kil himself.'
10BC  0010        RETURN

MOONENCJ_3B:
10BE  0000        BEGIN
10C1  0003        AddEncounter(0x12, 0x01)
10D3  0015        AddEncounter(0x12, 0x02)
10E5  0027        AddEncounter(0x1E, 0x03)
10F7  0039        AddEncounter(0x1E, 0x04)
1109  004B        RETURN

MOONENCK_3C:
110B  0000        BEGIN
110E  0003        AddEncounter(0x26, 0x01)
1120  0015        AddEncounter(0x26, 0x02)
1132  0027        AddEncounter(0x26, 0x03)
1144  0039        AddEncounter(0x25, 0x05)
1156  004B        AddEncounter(0x25, 0x06)
1168  005D        RETURN

EMPTY:
116A  0000        <Empty Function>

BDRMOONB_3E:
116F  0000        BEGIN
1172  0003        ShowMessage(0x10EA) = This door requires immense strength to open.
117F  0010        ax = CheckStrength()
118B  001C        compare(ax, 0x0015)
118E  001F        If (result.below) jump to 006A
1190  0021        ShowMessage(0x1117) = You push against the door and barely manage to open it.
119D  002E        ax = SetExitability(ax) // ax is usually 0 following equality check
11A4  0035        Push(ax)
11A5  0036        ax = GetNextTile()
11AC  003D        Push(ax)
11AD  003E        Push(01)
11B1  0042        SetUnblocked()
11BB  004C        Push(01)
11BF  0050        ax = SetExitability(ax) // ax is usually 0 following equality check
11C6  0057        Push(ax)
11C7  0058        ax = GetNextTile()
11CE  005F        Push(ax)
11CF  0060        Move(stk[0], stk[1], stk[2])
11D9  006A        RETURN

SDRMOONC_3F:
11DB  0000        BEGIN
11DE  0003        ax = UsedItem(0xF2, 0xF2)
11F1  0016        If (result.equal) jump to 0061
11F3  0018        ShowMessage(0x114F) = Your Moon Prism reveals a secret door!
1200  0025        ax = SetExitability(ax) // ax is usually 0 following equality check
1207  002C        Push(ax)
1208  002D        ax = GetNextTile()
120F  0034        Push(ax)
1210  0035        Push(01)
1214  0039        SetUnblocked()
121E  0043        Push(01)
1222  0047        ax = SetExitability(ax) // ax is usually 0 following equality check
1229  004E        Push(ax)
122A  004F        ax = GetNextTile()
1231  0056        Push(ax)
1232  0057        Move(stk[0], stk[1], stk[2])
123C  0061        RETURN

SDRMOOND_40:
123E  0000        BEGIN
1241  0003        ax = UsedSkill(0x0D) // returns 0 if did not use, compares to 2nd op if did use
124D  000F        compare(ax, 0x000B)
1250  0012        If (result.above or result.equal) jump to 004E
1252  0014        ax = UsedSpell(0x17) // returns 0 if did not use on map, level if used
125E  0020        RefreshCompareFlags(ax)
1260  0022        If (result.notequal) jump to 004E
1262  0024        ax = UsedItem(0xA2, 0xA2)
1275  0037        If (result.notequal) jump to 004E
1277  0039        ax = UsedItem(0xBE, 0xBE)
128A  004C        If (result.equal) jump to 0097
128C  004E        ShowMessage(0x1176) = You find a door hidden in the wall.
1299  005B        ax = SetExitability(ax) // ax is usually 0 following equality check
12A0  0062        Push(ax)
12A1  0063        ax = GetNextTile()
12A8  006A        Push(ax)
12A9  006B        Push(01)
12AD  006F        SetUnblocked()
12B7  0079        Push(01)
12BB  007D        ax = SetExitability(ax) // ax is usually 0 following equality check
12C2  0084        Push(ax)
12C3  0085        ax = GetNextTile()
12CA  008C        Push(ax)
12CB  008D        Move(stk[0], stk[1], stk[2])
12D5  0097        RETURN

SDRMOONE_41:
12D7  0000        BEGIN
12DA  0003        ShowMessage(0x119A) = The signature of the spectrum appears on the wall.
12E7  0010        ax = UsedItem(0xBD, 0xBD)
12FA  0023        If (result.notequal) jump to 003A
12FC  0025        ax = UsedItem(0xBE, 0xBE)
130F  0038        If (result.equal) jump to 0083
1311  003A        ShowMessage(0x11CD) = In the wall is a secret door.
131E  0047        ax = SetExitability(ax) // ax is usually 0 following equality check
1325  004E        Push(ax)
1326  004F        ax = GetNextTile()
132D  0056        Push(ax)
132E  0057        Push(01)
1332  005B        SetUnblocked()
133C  0065        Push(01)
1340  0069        ax = SetExitability(ax) // ax is usually 0 following equality check
1347  0070        Push(ax)
1348  0071        ax = GetNextTile()
134F  0078        Push(ax)
1350  0079        Move(stk[0], stk[1], stk[2])
135A  0083        RETURN

MOONENCM_42:
135C  0000        BEGIN
135F  0003        AddEncounter(0x26, 0x01)
1371  0015        AddEncounter(0x26, 0x02)
1383  0027        AddEncounter(0x25, 0x03)
1395  0039        AddEncounter(0x25, 0x04)
13A7  004B        RETURN

SDRMOONF_43:
13A9  0000        BEGIN
13AC  0003        ax = GetGuild()
13B3  000A        compare(ax, 0x0002)
13B6  000D        If (result.equal) jump to 0012
13B8  000F        Jump to 0091
13BB  0012        ax = UsedSkill(0x0D) // returns 0 if did not use, compares to 2nd op if did use
13C7  001E        compare(ax, 0x000A)
13CA  0021        If (result.above or result.equal) jump to 0048
13CC  0023        ax = UsedSpell(0x17) // returns 0 if did not use on map, level if used
13D8  002F        RefreshCompareFlags(ax)
13DA  0031        If (result.notequal) jump to 0048
13DC  0033        ax = UsedItem(0xBE, 0xBE)
13EF  0046        If (result.equal) jump to 0091
13F1  0048        ShowMessage(0x11EB) = Your Ranger skills help you locate a door hidden in the wall.
13FE  0055        ax = SetExitability(ax) // ax is usually 0 following equality check
1405  005C        Push(ax)
1406  005D        ax = GetNextTile()
140D  0064        Push(ax)
140E  0065        Push(01)
1412  0069        SetUnblocked()
141C  0073        Push(01)
1420  0077        ax = SetExitability(ax) // ax is usually 0 following equality check
1427  007E        Push(ax)
1428  007F        ax = GetNextTile()
142F  0086        Push(ax)
1430  0087        Move(stk[0], stk[1], stk[2])
143A  0091        RETURN

SDRMOONJ_44:
143C  0000        BEGIN
143F  0003        ax = GetGuild()
1446  000A        compare(ax, 0x0004)
1449  000D        If (result.equal) jump to 0012
144B  000F        Jump to 0091
144E  0012        ax = UsedSkill(0x0D) // returns 0 if did not use, compares to 2nd op if did use
145A  001E        compare(ax, 0x000A)
145D  0021        If (result.above or result.equal) jump to 0048
145F  0023        ax = UsedSpell(0x17) // returns 0 if did not use on map, level if used
146B  002F        RefreshCompareFlags(ax)
146D  0031        If (result.notequal) jump to 0048
146F  0033        ax = UsedItem(0xBE, 0xBE)
1482  0046        If (result.equal) jump to 0091
1484  0048        ShowMessage(0x1229) = Your holy calling allows you find a door hidden in the wall.
1491  0055        ax = SetExitability(ax) // ax is usually 0 following equality check
1498  005C        Push(ax)
1499  005D        ax = GetNextTile()
14A0  0064        Push(ax)
14A1  0065        Push(01)
14A5  0069        SetUnblocked()
14AF  0073        Push(01)
14B3  0077        ax = SetExitability(ax) // ax is usually 0 following equality check
14BA  007E        Push(ax)
14BB  007F        ax = GetNextTile()
14C2  0086        Push(ax)
14C3  0087        Move(stk[0], stk[1], stk[2])
14CD  0091        RETURN

BDRMOONK_45:
14CF  0000        BEGIN
14D2  0003        ax = CheckStrength()
14DE  000F        compare(ax, 0x0014)
14E1  0012        If (result.below) jump to 005F
14E3  0014        ShowMessage(0x1266) = You barely manage to force open the door.
14F0  0021        ax = SetExitability(ax) // ax is usually 0 following equality check
14F7  0028        Push(ax)
14F8  0029        ax = GetNextTile()
14FF  0030        Push(ax)
1500  0031        Push(01)
1504  0035        SetUnblocked()
150E  003F        Push(01)
1512  0043        ax = SetExitability(ax) // ax is usually 0 following equality check
1519  004A        Push(ax)
151A  004B        ax = GetNextTile()
1521  0052        Push(ax)
1522  0053        Move(stk[0], stk[1], stk[2])
152C  005D        Jump to 00A7
152E  005F        ShowMessage(0x1290) = The door is stuck shut.
153B  006C        ax = SetExitability(ax) // ax is usually 0 following equality check
1542  0073        Push(ax)
1543  0074        ax = GetNextTile()
154A  007B        Push(ax)
154B  007C        Push(01)
154F  0080        SetUnblocked()
1559  008A        Push(00)
155C  008D        ax = SetExitability(ax) // ax is usually 0 following equality check
1563  0094        Push(ax)
1564  0095        ax = GetNextTile()
156B  009C        Push(ax)
156C  009D        Move(stk[0], stk[1], stk[2])
1576  00A7        RETURN

SDRMOONM_46:
1578  0000        BEGIN
157B  0003        ax = UsedSkill(0x0D) // returns 0 if did not use, compares to 2nd op if did use
1587  000F        compare(ax, 0x0008)
158A  0012        If (result.above or result.equal) jump to 0039
158C  0014        ax = UsedSpell(0x17) // returns 0 if did not use on map, level if used
1598  0020        RefreshCompareFlags(ax)
159A  0022        If (result.notequal) jump to 0039
159C  0024        ax = UsedItem(0xBE, 0xBE)
15AF  0037        If (result.equal) jump to 0082
15B1  0039        ShowMessage(0x12A8) = Your training helps you find a secret door in the wall.
15BE  0046        Push(01)
15C2  004A        ax = SetExitability(ax) // ax is usually 0 following equality check
15C9  0051        Push(ax)
15CA  0052        ax = GetNextTile()
15D1  0059        Push(ax)
15D2  005A        Move(stk[0], stk[1], stk[2])
15DC  0064        ax = SetExitability(ax) // ax is usually 0 following equality check
15E3  006B        Push(ax)
15E4  006C        ax = GetNextTile()
15EB  0073        Push(ax)
15EC  0074        Push(01)
15F0  0078        SetUnblocked()
15FA  0082        RETURN

SDRMOONN_47:
15FC  0000        BEGIN
15FF  0003        ShowMessage(0x12E0) = You detect a door cleverly hidden in the wall.
160C  0010        ax = SetExitability(ax) // ax is usually 0 following equality check
1613  0017        Push(ax)
1614  0018        ax = GetNextTile()
161B  001F        Push(ax)
161C  0020        Push(01)
1620  0024        SetUnblocked()
162A  002E        Push(01)
162E  0032        ax = SetExitability(ax) // ax is usually 0 following equality check
1635  0039        Push(ax)
1636  003A        ax = GetNextTile()
163D  0041        Push(ax)
163E  0042        Move(stk[0], stk[1], stk[2])
1648  004C        RETURN

MOONTRSA_48:
164A  0000        BEGIN
164D  0003        ax = HasItem(0xF2)
165B  0011        If (result.equal) jump to 0022
165D  0013        ShowMessage(0x130F) = Piles of dirt cover the floor.
166A  0020        Jump to 0050
166C  0022        GiveItem(0xF2)
1678  002E        SetState(0x02, 0x46, 0x01)
168D  0043        ShowMessage(0x132E) = You find a Moon Prism on the floor.
169A  0050        RETURN

MOONTRSB_49:
169C  0000        BEGIN
169F  0003        ax = CheckState(0x02, 0x47)
16B0  0014        compare(ax, 0x0001)
16B3  0017        If (result.notequal) jump to 0028
16B5  0019        ShowMessage(0x1352) = The floor is bare.
16C2  0026        Jump to 0056
16C4  0028        GiveItem(0x37)
16D0  0034        SetState(0x02, 0x47, 0x01)
16E5  0049        ShowMessage(0x1365) = You find the Ranger Spear on the floor.
16F2  0056        RETURN

MOONTRSC_4A:
16F4  0000        BEGIN
16F7  0003        ax = CheckState(0x02, 0x48)
1708  0014        compare(ax, 0x0001)
170B  0017        If (result.notequal) jump to 0028
170D  0019        ShowMessage(0x138D) = There is nothing of interest in this area.
171A  0026        Jump to 0056
171C  0028        GiveItem(0x3D)
1728  0034        SetState(0x02, 0x48, 0x01)
173D  0049        ShowMessage(0x13B8) = You find a Holy Halberd lying on the floor.
174A  0056        RETURN

TORBFOUN_4B:
174C  0000        BEGIN
174F  0003        ShowPortrait(0x0042)
175C  0010        ShowMessage(0x13E4) = Pictorials of War are painted on the walls surrounding Torbriar's Fountain.
1769  001D        ax = CheckState(0x02, 0x63)
177A  002E        RefreshCompareFlags(ax)
177C  0030        If (result.equal) jump to 0035
177E  0032        Jump to 017C
1781  0035        SetState(0x02, 0x63, 0x01)
1796  004A        ax = GetSkillLevel(0x08)
17A2  0056        RefreshCompareFlags(ax)
17A4  0058        If (result.notequal) jump to 007B
17A6  005A        SetSkillLevel(0x08, 0x02)
17B7  006B        ShowMessage(0x1430) = You gain the skill of Archery!
17C4  0078        Jump to 017A
17C7  007B        ax = GetSkillLevel(0x01)
17D3  0087        RefreshCompareFlags(ax)
17D5  0089        If (result.notequal) jump to 00AC
17D7  008B        SetSkillLevel(0x01, 0x02)
17E8  009C        ShowMessage(0x144F) = You gain the skill of Clubs and Axes!
17F5  00A9        Jump to 017A
17F8  00AC        ax = GetSkillLevel(0x05)
1804  00B8        RefreshCompareFlags(ax)
1806  00BA        If (result.notequal) jump to 00DD
1808  00BC        SetSkillLevel(0x05, 0x02)
1819  00CD        ShowMessage(0x1475) = You gain the skill of Swordsmanship!
1826  00DA        Jump to 017A
1829  00DD        ax = GetSkillLevel(0x0C)
1835  00E9        RefreshCompareFlags(ax)
1837  00EB        If (result.notequal) jump to 010D
1839  00ED        SetSkillLevel(0x0C, 0x02)
184A  00FE        ShowMessage(0x149A) = You gain the Bard skill!
1857  010B        Jump to 017A
1859  010D        ax = GetSkillLevel(0x10)
1865  0119        RefreshCompareFlags(ax)
1867  011B        If (result.notequal) jump to 013D
1869  011D        SetSkillLevel(0x10, 0x02)
187A  012E        ShowMessage(0x14B3) = You gain the skill of Martial Arts!
1887  013B        Jump to 017A
1889  013D        ax = GetSkillLevel(0x16)
1895  0149        RefreshCompareFlags(ax)
1897  014B        If (result.notequal) jump to 016D
1899  014D        SetSkillLevel(0x16, 0x02)
18AA  015E        ShowMessage(0x14D7) = You gain the Channel skill!
18B7  016B        Jump to 017A
18B9  016D        ShowMessage(0x14F3) = The waters have no effect.
18C6  017A        Jump to 0189
18C8  017C        ShowMessage(0x150E) = Dust fills the fountain basin.
18D5  0189        RETURN

TORBENCB_4C:
18D7  0000        BEGIN
18DA  0003        AddEncounter(0x28, 0x01)
18EC  0015        AddEncounter(0x28, 0x02)
18FE  0027        AddEncounter(0x27, 0x04)
1910  0039        AddEncounter(0x15, 0x05)
1922  004B        AddEncounter(0x15, 0x06)
1934  005D        ax = GetGuild()
193B  0064        RefreshCompareFlags(ax)
193D  0066        If (result.notequal) jump to 0087
193F  0068        AddTreasure(0x03E8, 0x00, 0x00, 0x00, 0x00, 0x18)
195E  0087        ax = GetGuild()
1965  008E        compare(ax, 0x0001)
1968  0091        If (result.notequal) jump to 00B2
196A  0093        AddTreasure(0x03E8, 0x00, 0x00, 0x00, 0x00, 0x11)
1989  00B2        RETURN

TORBENCC_4D:
198B  0000        BEGIN
198E  0003        AddEncounter(0x28, 0x01)
19A0  0015        AddEncounter(0x28, 0x02)
19B2  0027        AddEncounter(0x15, 0x03)
19C4  0039        AddEncounter(0x15, 0x04)
19D6  004B        RETURN

EMPTY:
19D8  0000        <Empty Function>

EMPTY:
19DD  0000        <Empty Function>

EMPTY:
19E2  0000        <Empty Function>

EMPTY:
19E7  0000        <Empty Function>

TXTTORB_52:
19EC  0000        BEGIN
19EF  0003        ShowMessage(0x152D) = A bard's scroll sings a simple song of how someday bands of adventurers will form an invisible bridge across a deadly chasm.
19FC  0010        RETURN

SDRTORBA_53:
19FE  0000        BEGIN
1A01  0003        ax = GetGuild()
1A08  000A        compare(ax, 0x0001)
1A0B  000D        If (result.equal) jump to 0012
1A0D  000F        Jump to 0091
1A10  0012        ax = UsedSkill(0x0D) // returns 0 if did not use, compares to 2nd op if did use
1A1C  001E        compare(ax, 0x0008)
1A1F  0021        If (result.above or result.equal) jump to 0048
1A21  0023        ax = UsedSpell(0x17) // returns 0 if did not use on map, level if used
1A2D  002F        RefreshCompareFlags(ax)
1A2F  0031        If (result.notequal) jump to 0048
1A31  0033        ax = UsedItem(0xBE, 0xBE)
1A44  0046        If (result.equal) jump to 0091
1A46  0048        ShowMessage(0x15AA) = A secret door visible only to knights appears in the wall .
1A53  0055        Push(01)
1A57  0059        ax = SetExitability(ax) // ax is usually 0 following equality check
1A5E  0060        Push(ax)
1A5F  0061        ax = GetNextTile()
1A66  0068        Push(ax)
1A67  0069        Move(stk[0], stk[1], stk[2])
1A71  0073        ax = SetExitability(ax) // ax is usually 0 following equality check
1A78  007A        Push(ax)
1A79  007B        ax = GetNextTile()
1A80  0082        Push(ax)
1A81  0083        Push(01)
1A85  0087        SetUnblocked()
1A8F  0091        RETURN

SDRTORBB_54:
1A91  0000        BEGIN
1A94  0003        ax = GetGuild()
1A9B  000A        RefreshCompareFlags(ax)
1A9D  000C        If (result.equal) jump to 0011
1A9F  000E        Jump to 0090
1AA2  0011        ax = UsedSkill(0x0D) // returns 0 if did not use, compares to 2nd op if did use
1AAE  001D        compare(ax, 0x0008)
1AB1  0020        If (result.above or result.equal) jump to 0047
1AB3  0022        ax = UsedSpell(0x17) // returns 0 if did not use on map, level if used
1ABF  002E        RefreshCompareFlags(ax)
1AC1  0030        If (result.notequal) jump to 0047
1AC3  0032        ax = UsedItem(0xBE, 0xBE)
1AD6  0045        If (result.equal) jump to 0090
1AD8  0047        ShowMessage(0x15E6) = In the wall you find a hidden door.
1AE5  0054        Push(01)
1AE9  0058        ax = SetExitability(ax) // ax is usually 0 following equality check
1AF0  005F        Push(ax)
1AF1  0060        ax = GetNextTile()
1AF8  0067        Push(ax)
1AF9  0068        Move(stk[0], stk[1], stk[2])
1B03  0072        ax = SetExitability(ax) // ax is usually 0 following equality check
1B0A  0079        Push(ax)
1B0B  007A        ax = GetNextTile()
1B12  0081        Push(ax)
1B13  0082        Push(01)
1B17  0086        SetUnblocked()
1B21  0090        RETURN

TORBWIND_55:
1B23  0000        BEGIN
1B26  0003        ShowMessage(0x160A) = The wind is nasty here!  You take 100 damage.
1B33  0010        DoDamage(0x0064)
1B40  001D        ax = GetCurrentHits()
1B47  0024        RefreshCompareFlags(ax)
1B49  0026        If (result.above) jump to 0035
1B4B  0028        ShowMessage(0x1638) = You have died.
1B58  0035        RETURN

MOONWIND_56:
1B5A  0000        BEGIN
1B5D  0003        ShowMessage(0x1647) = The Moon Hollow winds steals 300 Mana!
1B6A  0010        AddMana(0xFED4)
1B77  001D        RETURN

VORAWIND_57:
1B79  0000        BEGIN
1B7C  0003        ShowMessage(0x166E) = A violent whirlwind pounds you, taking half your health!
1B89  0010        ax = GetCurrentHits()
1B90  0017        bx = 0x0002
1B93  001A        ax = ax / bx (signed, dx = quotient)
1B96  001D        DoDamage(ax)
1BA0  0027        ax = GetCurrentHits()
1BA7  002E        RefreshCompareFlags(ax)
1BA9  0030        If (result.above) jump to 003F
1BAB  0032        ShowMessage(0x16A7) = You have died.
1BB8  003F        RETURN

EMPTY:
1BBA  0000        <Empty Function>

EMPTY:
1BBF  0000        <Empty Function>

EMPTY:
1BC4  0000        <Empty Function>

EMPTY:
1BC9  0000        <Empty Function>

EMPTY:
1BCE  0000        <Empty Function>

EMPTY:
1BD3  0000        <Empty Function>

EMPTY:
1BD8  0000        <Empty Function>

EMPTY:
1BDD  0000        <Empty Function>

EMPTY:
1BE2  0000        <Empty Function>

EMPTY:
1BE7  0000        <Empty Function>

EMPTY:
1BEC  0000        <Empty Function>

EMPTY:
1BF1  0000        <Empty Function>

EMPTY:
1BF6  0000        <Empty Function>

EMPTY:
1BFB  0000        <Empty Function>

EMPTY:
1C00  0000        <Empty Function>

EMPTY:
1C05  0000        <Empty Function>

EMPTY:
1C0A  0000        <Empty Function>

EMPTY:
1C0F  0000        <Empty Function>

EMPTY:
1C14  0000        <Empty Function>

EMPTY:
1C19  0000        <Empty Function>

EMPTY:
1C1E  0000        <Empty Function>

EMPTY:
1C23  0000        <Empty Function>

EMPTY:
1C28  0000        <Empty Function>

EMPTY:
1C2D  0000        <Empty Function>

EMPTY:
1C32  0000        <Empty Function>

EMPTY:
1C37  0000        <Empty Function>

EMPTY:
1C3C  0000        <Empty Function>

EMPTY:
1C41  0000        <Empty Function>

EMPTY:
1C46  0000        <Empty Function>

EMPTY:
1C4B  0000        <Empty Function>

EMPTY:
1C50  0000        <Empty Function>

EMPTY:
1C55  0000        <Empty Function>

EMPTY:
1C5A  0000        <Empty Function>

EMPTY:
1C5F  0000        <Empty Function>

EMPTY:
1C64  0000        <Empty Function>

EMPTY:
1C69  0000        <Empty Function>

EMPTY:
1C6E  0000        <Empty Function>

EMPTY:
1C73  0000        <Empty Function>

EMPTY:
1C78  0000        <Empty Function>

EMPTY:
1C7D  0000        <Empty Function>

EMPTY:
1C82  0000        <Empty Function>

EMPTY:
1C87  0000        <Empty Function>

EMPTY:
1C8C  0000        <Empty Function>

EMPTY:
1C91  0000        <Empty Function>

EMPTY:
1C96  0000        <Empty Function>

EMPTY:
1C9B  0000        <Empty Function>

EMPTY:
1CA0  0000        <Empty Function>

EMPTY:
1CA5  0000        <Empty Function>

EMPTY:
1CAA  0000        <Empty Function>

EMPTY:
1CAF  0000        <Empty Function>

EMPTY:
1CB4  0000        <Empty Function>

EMPTY:
1CB9  0000        <Empty Function>

EMPTY:
1CBE  0000        <Empty Function>

EMPTY:
1CC3  0000        <Empty Function>

EMPTY:
1CC8  0000        <Empty Function>

EMPTY:
1CCD  0000        <Empty Function>

EMPTY:
1CD2  0000        <Empty Function>

EMPTY:
1CD7  0000        <Empty Function>

EMPTY:
1CDC  0000        <Empty Function>

EMPTY:
1CE1  0000        <Empty Function>

EMPTY:
1CE6  0000        <Empty Function>

EMPTY:
1CEB  0000        <Empty Function>

EMPTY:
1CF0  0000        <Empty Function>

EMPTY:
1CF5  0000        <Empty Function>

EMPTY:
1CFA  0000        <Empty Function>

EMPTY:
1CFF  0000        <Empty Function>

EMPTY:
1D04  0000        <Empty Function>

EMPTY:
1D09  0000        <Empty Function>

EMPTY:
1D0E  0000        <Empty Function>

EMPTY:
1D13  0000        <Empty Function>

EMPTY:
1D18  0000        <Empty Function>

EMPTY:
1D1D  0000        <Empty Function>

EMPTY:
1D22  0000        <Empty Function>

EMPTY:
1D27  0000        <Empty Function>

EMPTY:
1D2C  0000        <Empty Function>

EMPTY:
1D31  0000        <Empty Function>

EMPTY:
1D36  0000        <Empty Function>

EMPTY:
1D3B  0000        <Empty Function>

EMPTY:
1D40  0000        <Empty Function>

EMPTY:
1D45  0000        <Empty Function>

EMPTY:
1D4A  0000        <Empty Function>

EMPTY:
1D4F  0000        <Empty Function>

EMPTY:
1D54  0000        <Empty Function>

EMPTY:
1D59  0000        <Empty Function>

EMPTY:
1D5E  0000        <Empty Function>

EMPTY:
1D63  0000        <Empty Function>

EMPTY:
1D68  0000        <Empty Function>

EMPTY:
1D6D  0000        <Empty Function>

EMPTY:
1D72  0000        <Empty Function>

EMPTY:
1D77  0000        <Empty Function>

EMPTY:
1D7C  0000        <Empty Function>

EMPTY:
1D81  0000        <Empty Function>

EMPTY:
1D86  0000        <Empty Function>

EMPTY:
1D8B  0000        <Empty Function>

EMPTY:
1D90  0000        <Empty Function>

EMPTY:
1D95  0000        <Empty Function>

EMPTY:
1D9A  0000        <Empty Function>

EMPTY:
1D9F  0000        <Empty Function>

EMPTY:
1DA4  0000        <Empty Function>

EMPTY:
1DA9  0000        <Empty Function>

EMPTY:
1DAE  0000        <Empty Function>

EMPTY:
1DB3  0000        <Empty Function>

EMPTY:
1DB8  0000        <Empty Function>

EMPTY:
1DBD  0000        <Empty Function>

EMPTY:
1DC2  0000        <Empty Function>

EMPTY:
1DC7  0000        <Empty Function>

EMPTY:
1DCC  0000        <Empty Function>

EMPTY:
1DD1  0000        <Empty Function>

EMPTY:
1DD6  0000        <Empty Function>

EMPTY:
1DDB  0000        <Empty Function>

EMPTY:
1DE0  0000        <Empty Function>

EMPTY:
1DE5  0000        <Empty Function>

EMPTY:
1DEA  0000        <Empty Function>

EMPTY:
1DEF  0000        <Empty Function>

EMPTY:
1DF4  0000        <Empty Function>

EMPTY:
1DF9  0000        <Empty Function>

EMPTY:
1DFE  0000        <Empty Function>

EMPTY:
1E03  0000        <Empty Function>

EMPTY:
1E08  0000        <Empty Function>

EMPTY:
1E0D  0000        <Empty Function>

EMPTY:
1E12  0000        <Empty Function>

EMPTY:
1E17  0000        <Empty Function>

EMPTY:
1E1C  0000        <Empty Function>

EMPTY:
1E21  0000        <Empty Function>

EMPTY:
1E26  0000        <Empty Function>

EMPTY:
1E2B  0000        <Empty Function>

EMPTY:
1E30  0000        <Empty Function>

EMPTY:
1E35  0000        <Empty Function>

EMPTY:
1E3A  0000        <Empty Function>

EMPTY:
1E3F  0000        <Empty Function>

EMPTY:
1E44  0000        <Empty Function>

EMPTY:
1E49  0000        <Empty Function>

EMPTY:
1E4E  0000        <Empty Function>

EMPTY:
1E53  0000        <Empty Function>

EMPTY:
1E58  0000        <Empty Function>

EMPTY:
1E5D  0000        <Empty Function>

EMPTY:
1E62  0000        <Empty Function>

EMPTY:
1E67  0000        <Empty Function>

EMPTY:
1E6C  0000        <Empty Function>

EMPTY:
1E71  0000        <Empty Function>

EMPTY:
1E76  0000        <Empty Function>

EMPTY:
1E7B  0000        <Empty Function>

EMPTY:
1E80  0000        <Empty Function>

EMPTY:
1E85  0000        <Empty Function>

EMPTY:
1E8A  0000        <Empty Function>

EMPTY:
1E8F  0000        <Empty Function>

EMPTY:
1E94  0000        <Empty Function>

EMPTY:
1E99  0000        <Empty Function>

EMPTY:
1E9E  0000        <Empty Function>

EMPTY:
1EA3  0000        <Empty Function>

EMPTY:
1EA8  0000        <Empty Function>

EMPTY:
1EAD  0000        <Empty Function>

EMPTY:
1EB2  0000        <Empty Function>

EMPTY:
1EB7  0000        <Empty Function>

EMPTY:
1EBC  0000        <Empty Function>

EMPTY:
1EC1  0000        <Empty Function>

EMPTY:
1EC6  0000        <Empty Function>

EMPTY:
1ECB  0000        <Empty Function>

EMPTY:
1ED0  0000        <Empty Function>

EMPTY:
1ED5  0000        <Empty Function>

EMPTY:
1EDA  0000        <Empty Function>

EMPTY:
1EDF  0000        <Empty Function>

EMPTY:
1EE4  0000        <Empty Function>

EMPTY:
1EE9  0000        <Empty Function>

EMPTY:
1EEE  0000        <Empty Function>

EMPTY:
1EF3  0000        <Empty Function>

EMPTY:
1EF8  0000        <Empty Function>

EMPTY:
1EFD  0000        <Empty Function>

STRINGS:
03FC: Other pits in the Labyrinth provide access to hidden areas...
043A: This pit, however, sends you to the gates of Death.
046E: A magical platform forms a bridge across the abyss.
04A2: You fall into the abyss and die.
04C3: With help, you might have been able to cross here.
04F6: Something strange happens!
0511: When you step onto the stone, a magical platform appears nearby.
0552: You do not suffer the death found in other pits in the Labyrinth.  Instead you are rewarded with a trip to CASTLEGATE BAZAAR.
05D0: The Dark Dwarf Voranti tricked the Lords of Harmony many moons ago.
0614: He stole the secrets of the Winds from the Lords and has used them for his own purposes every since.
0679: The Lords' Harmonic Shrine has now become the raging passageway known as HEAVEN'S FURY.
06D1: The survivors of the cataclysm named this place EXODUS.
0709: It is here they escaped the horrors of Arnakkian's Castle and began their new subterranean life.
076A: No adventurer dares camp in WIND HOLLOW.  At night the howling wind makes one deaf to the dangers.
07CD: TEMPEST dares all to explore the magic rooms along her narrow corridor.
0815: The barren rocks are swept clean by the violent winds that race through WIND HOLLOW.
086A: 'Beware!  Those who enter the Labyrinth BACK ALLEY must guard against all!'
08B6: Enter HEAVEN'S FURY if you must.  Here is where Voranti cursed the winds.
0900: The gates of LABYRINTH ATTIC are a welcome sight.
0932: The door leads to WYN SANCTUARY.
0953: The gateway opens, revealing the secret chambers of the Labyrinth Thieves.
099E: You stumble into the lava pools.  You die.
09C9: This door locks out all except those who have the alley key.
0A06: Your key unlocks the door.
0A21: You return to LABYRINTH ATTIC through a one-way tunnel.
0A59: The door to WIND HOLLOW bursts open with terrible force, throwing all adventurers against the rocks...
0AC0: ...and inflicting heavy damage.
0AE0: You have died.
0AEF: Runes can be the most powerful of weapons in the hands of an adept Wizard.
0B3A: Here, the runes also protect the great mage's magical possessions against the unwanted.
0B92: The Zephyr Wind whispers, 'I have taken the Harvest Horn, and I give you something to help defeat the Wind Elemental'.
0C09: The Zephyr Wind whistles 'No harm was intended, but I am sworn to serve the Wind Elemental.  Return the Harvest Horn to my Wyverns to release my bonds.'
0CA2: A magical platform nearby seems to disappear.
0CD0: The Zephyr Wind gusts in fury, causing damage!
0CFF: You have died.
0D0E: Wafts of reddish smoke eminate from the rooms ahead.
0D43: An acrid odor fills these chambers.
0D67: The fiery eyes of Ancient Dragons blaze through the thick clouds that fill the chamber.
0DBF: You detect a secret door in the wall.
0DE5: A stash of wizard items is being raided.
0E0E: You locate a hidden door in the wall.
0E34: A powerful Dwarf Thief stands before you. 'I am Voranti, Lord of Dwarf Thieves!  Fight me if you must, but you shall not find my secret treasure!  Do not fear, for I will provide decent burial when I am finished.'
0F0A: Voranti's dark eyes glow bright with hatred. 'As for you, miserable Elf, my pet gargoyles will pick your bones clean.'
0F81: Voranti smiles sadly. 'It saddens me that I must kill a fellow dwarf, but you have brought death upon yourself.'
0FF2: You find a secret door in the wall.
1016: A nest of young dragons!
102F: A yellowed piece of paper  --
104D: 'Help! My brother Orilon has been bitten by bears and is transformed.'  - signed Margery
10A6: A note -- 'Only past the Darkside will you find En-Li-Kil himself.'
10EA: This door requires immense strength to open.
1117: You push against the door and barely manage to open it.
114F: Your Moon Prism reveals a secret door!
1176: You find a door hidden in the wall.
119A: The signature of the spectrum appears on the wall.
11CD: In the wall is a secret door.
11EB: Your Ranger skills help you locate a door hidden in the wall.
1229: Your holy calling allows you find a door hidden in the wall.
1266: You barely manage to force open the door.
1290: The door is stuck shut.
12A8: Your training helps you find a secret door in the wall.
12E0: You detect a door cleverly hidden in the wall.
130F: Piles of dirt cover the floor.
132E: You find a Moon Prism on the floor.
1352: The floor is bare.
1365: You find the Ranger Spear on the floor.
138D: There is nothing of interest in this area.
13B8: You find a Holy Halberd lying on the floor.
13E4: Pictorials of War are painted on the walls surrounding Torbriar's Fountain.
1430: You gain the skill of Archery!
144F: You gain the skill of Clubs and Axes!
1475: You gain the skill of Swordsmanship!
149A: You gain the Bard skill!
14B3: You gain the skill of Martial Arts!
14D7: You gain the Channel skill!
14F3: The waters have no effect.
150E: Dust fills the fountain basin.
152D: A bard's scroll sings a simple song of how someday bands of adventurers will form an invisible bridge across a deadly chasm.
15AA: A secret door visible only to knights appears in the wall .
15E6: In the wall you find a hidden door.
160A: The wind is nasty here!  You take 100 damage.
1638: You have died.
1647: The Moon Hollow winds steals 300 Mana!
166E: A violent whirlwind pounds you, taking half your health!
16A7: You have died.
