Functn01: "TOMINES"
0000: push bp
0001: mov bp, sp
0003: xor ax, ax
0005: push ax
0006: mov ax, 0x7f
0009: push ax
000A: mov ax, 0x2
000D: push ax
000E: mov ax, 0x1
0011: push ax
0012: les bx, [bp+0x6]
0015: call far word [es:bx+0xbc]
001A: add sp, 0x8
001D: pop bp
001E: retf

Functn02: "TOTREAS"
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x1
0006: push ax
0007: mov ax, 0x5
000A: push ax
000B: mov ax, 0x4
000E: push ax
000F: mov ax, 0x1
0012: push ax
0013: les bx, [bp+0x6]
0016: call far word [es:bx+0xbc]
001B: add sp, 0x8
001E: pop bp
001F: retf

Functn03: "KEYDOOR"
0000: push bp
0001: mov bp, sp
0003: xor ax, ax
0005: push ax
0006: mov ax, 0x2
0009: push ax
000A: les bx, [bp+0x6]
000D: call far word [es:bx+0x4]
0011: pop cx
0012: pop cx
0013: cmp ax, 0x1
0016: jnz 0x63
0018: mov ax, 0x3fc
001B: push ax
001C: les bx, [bp+0x6]
001F: call far word [es:bx+0xf8]
0024: pop cx
0025: les bx, [bp+0x6]
0028: call far word [es:bx+0x24]
002C: push ax
002D: les bx, [bp+0x6]
0030: call far word [es:bx+0x20]
0034: push ax
0035: mov ax, 0x1
0038: push ax
0039: les bx, [bp+0x6]
003C: call far word [es:bx+0x30]
0040: add sp, 0x6
0043: mov ax, 0x1
0046: push ax
0047: les bx, [bp+0x6]
004A: call far word [es:bx+0x24]
004E: push ax
004F: les bx, [bp+0x6]
0052: call far word [es:bx+0x20]
0056: push ax
0057: les bx, [bp+0x6]
005A: call far word [es:bx+0x2c]
005E: add sp, 0x6
0061: jmp 0x8d
0063: mov ax, 0x421
0066: push ax
0067: les bx, [bp+0x6]
006A: call far word [es:bx+0xf8]
006F: pop cx
0070: xor ax, ax
0072: push ax
0073: les bx, [bp+0x6]
0076: call far word [es:bx+0x24]
007A: push ax
007B: les bx, [bp+0x6]
007E: call far word [es:bx+0x20]
0082: push ax
0083: les bx, [bp+0x6]
0086: call far word [es:bx+0x2c]
008A: add sp, 0x6
008D: pop bp
008E: retf

Functn04: "KEYMESSG"
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x465
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0x48e
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xf4]
001C: pop cx
001D: pop bp
001E: retf

Functn05: "LKPKDOOR"
0000: push bp
0001: mov bp, sp
0003: xor ax, ax
0005: push ax
0006: mov ax, 0x2
0009: push ax
000A: les bx, [bp+0x6]
000D: call far word [es:bx+0x4]
0011: pop cx
0012: pop cx
0013: cmp ax, 0x2
0016: jnz 0x63
0018: mov ax, 0x4b8
001B: push ax
001C: les bx, [bp+0x6]
001F: call far word [es:bx+0xf8]
0024: pop cx
0025: les bx, [bp+0x6]
0028: call far word [es:bx+0x24]
002C: push ax
002D: les bx, [bp+0x6]
0030: call far word [es:bx+0x20]
0034: push ax
0035: mov ax, 0x1
0038: push ax
0039: les bx, [bp+0x6]
003C: call far word [es:bx+0x30]
0040: add sp, 0x6
0043: mov ax, 0x1
0046: push ax
0047: les bx, [bp+0x6]
004A: call far word [es:bx+0x24]
004E: push ax
004F: les bx, [bp+0x6]
0052: call far word [es:bx+0x20]
0056: push ax
0057: les bx, [bp+0x6]
005A: call far word [es:bx+0x2c]
005E: add sp, 0x6
0061: jmp 0x8d
0063: mov ax, 0x4e2
0066: push ax
0067: les bx, [bp+0x6]
006A: call far word [es:bx+0xf8]
006F: pop cx
0070: xor ax, ax
0072: push ax
0073: les bx, [bp+0x6]
0076: call far word [es:bx+0x24]
007A: push ax
007B: les bx, [bp+0x6]
007E: call far word [es:bx+0x20]
0082: push ax
0083: les bx, [bp+0x6]
0086: call far word [es:bx+0x2c]
008A: add sp, 0x6
008D: pop bp
008E: retf

Functn06: "LKPKMESG"
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x4f6
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0x519
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xf4]
001C: pop cx
001D: pop bp
001E: retf

Functn07: "STRDOOR"
0000: push bp
0001: mov bp, sp
0003: xor ax, ax
0005: push ax
0006: mov ax, 0x2
0009: push ax
000A: les bx, [bp+0x6]
000D: call far word [es:bx+0x4]
0011: pop cx
0012: pop cx
0013: cmp ax, 0x3
0016: jnz 0x63
0018: mov ax, 0x546
001B: push ax
001C: les bx, [bp+0x6]
001F: call far word [es:bx+0xf8]
0024: pop cx
0025: les bx, [bp+0x6]
0028: call far word [es:bx+0x24]
002C: push ax
002D: les bx, [bp+0x6]
0030: call far word [es:bx+0x20]
0034: push ax
0035: mov ax, 0x1
0038: push ax
0039: les bx, [bp+0x6]
003C: call far word [es:bx+0x30]
0040: add sp, 0x6
0043: mov ax, 0x1
0046: push ax
0047: les bx, [bp+0x6]
004A: call far word [es:bx+0x24]
004E: push ax
004F: les bx, [bp+0x6]
0052: call far word [es:bx+0x20]
0056: push ax
0057: les bx, [bp+0x6]
005A: call far word [es:bx+0x2c]
005E: add sp, 0x6
0061: jmp 0x8d
0063: mov ax, 0x565
0066: push ax
0067: les bx, [bp+0x6]
006A: call far word [es:bx+0xf8]
006F: pop cx
0070: xor ax, ax
0072: push ax
0073: les bx, [bp+0x6]
0076: call far word [es:bx+0x24]
007A: push ax
007B: les bx, [bp+0x6]
007E: call far word [es:bx+0x20]
0082: push ax
0083: les bx, [bp+0x6]
0086: call far word [es:bx+0x2c]
008A: add sp, 0x6
008D: pop bp
008E: retf

Functn08: "STRMESSG"
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x587
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0x5a1
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xf4]
001C: pop cx
001D: pop bp
001E: retf

Functn09: "GOLDENC"
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x5
0006: push ax
0007: mov ax, 0x2
000A: push ax
000B: les bx, [bp+0x6]
000E: call far word [es:bx+0x4]
0012: pop cx
0013: pop cx
0014: cmp ax, 0x1
0017: jnz 0x47
0019: mov ax, 0x5d1
001C: push ax
001D: les bx, [bp+0x6]
0020: call far word [es:bx+0xf8]
0025: pop cx
0026: mov ax, 0x14
0029: push ax
002A: xor ax, ax
002C: push ax
002D: xor ax, ax
002F: push ax
0030: xor ax, ax
0032: push ax
0033: xor ax, ax
0035: push ax
0036: mov ax, 0xb5
0039: push ax
003A: les bx, [bp+0x6]
003D: call far word [es:bx+0xd8]
0042: add sp, 0xc
0045: jmp 0x88
0047: mov ax, 0x1f4
004A: push ax
004B: xor ax, ax
004D: push ax
004E: xor ax, ax
0050: push ax
0051: xor ax, ax
0053: push ax
0054: xor ax, ax
0056: push ax
0057: mov ax, 0xce
005A: push ax
005B: les bx, [bp+0x6]
005E: call far word [es:bx+0xd8]
0063: add sp, 0xc
0066: mov ax, 0x1
0069: push ax
006A: mov ax, 0x5
006D: push ax
006E: mov ax, 0x2
0071: push ax
0072: les bx, [bp+0x6]
0075: call far word [es:bx]
0078: add sp, 0x6
007B: mov ax, 0x5fd
007E: push ax
007F: les bx, [bp+0x6]
0082: call far word [es:bx+0xf8]
0087: pop cx
0088: les bx, [bp+0x6]
008B: call far word [es:bx+0xf0]
0090: cmp ax, 0x1
0093: jz 0xa2
0095: les bx, [bp+0x6]
0098: call far word [es:bx+0xf0]
009D: cmp ax, 0x2
00A0: jnz 0xb6
00A2: mov ax, 0x1a
00A5: push ax
00A6: mov ax, 0x1
00A9: push ax
00AA: les bx, [bp+0x6]
00AD: call far word [es:bx+0xd4]
00B2: pop cx
00B3: pop cx
00B4: jmp 0xfe
00B6: mov ax, 0x1c
00B9: push ax
00BA: mov ax, 0x1
00BD: push ax
00BE: les bx, [bp+0x6]
00C1: call far word [es:bx+0xd4]
00C6: pop cx
00C7: pop cx
00C8: mov ax, 0x1a
00CB: push ax
00CC: mov ax, 0x2
00CF: push ax
00D0: les bx, [bp+0x6]
00D3: call far word [es:bx+0xd4]
00D8: pop cx
00D9: pop cx
00DA: mov ax, 0x19
00DD: push ax
00DE: mov ax, 0x3
00E1: push ax
00E2: les bx, [bp+0x6]
00E5: call far word [es:bx+0xd4]
00EA: pop cx
00EB: pop cx
00EC: mov ax, 0x1b
00EF: push ax
00F0: mov ax, 0x4
00F3: push ax
00F4: les bx, [bp+0x6]
00F7: call far word [es:bx+0xd4]
00FC: pop cx
00FD: pop cx
00FE: pop bp
00FF: retf

Functn0A: "STAIRS"
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x2
0006: push ax
0007: mov ax, 0x1
000A: push ax
000B: mov ax, 0x2
000E: push ax
000F: mov ax, 0x2
0012: push ax
0013: les bx, [bp+0x6]
0016: call far word [es:bx+0xbc]
001B: add sp, 0x8
001E: pop bp
001F: retf

Functn0B: "PALKEYEN"
0000: push bp
0001: mov bp, sp
0003: mov ax, 0xd9
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0x50]
000E: pop cx
000F: or ax, ax
0011: jz 0x42
0013: mov ax, 0x1f4
0016: push ax
0017: xor ax, ax
0019: push ax
001A: xor ax, ax
001C: push ax
001D: xor ax, ax
001F: push ax
0020: mov ax, 0xbc
0023: push ax
0024: mov ax, 0xce
0027: push ax
0028: les bx, [bp+0x6]
002B: call far word [es:bx+0xd8]
0030: add sp, 0xc
0033: mov ax, 0x647
0036: push ax
0037: les bx, [bp+0x6]
003A: call far word [es:bx+0xf8]
003F: pop cx
0040: jmp 0x6e
0042: mov ax, 0x3e8
0045: push ax
0046: xor ax, ax
0048: push ax
0049: xor ax, ax
004B: push ax
004C: xor ax, ax
004E: push ax
004F: xor ax, ax
0051: push ax
0052: mov ax, 0xd9
0055: push ax
0056: les bx, [bp+0x6]
0059: call far word [es:bx+0xd8]
005E: add sp, 0xc
0061: mov ax, 0x662
0064: push ax
0065: les bx, [bp+0x6]
0068: call far word [es:bx+0xf8]
006D: pop cx
006E: les bx, [bp+0x6]
0071: call far word [es:bx+0xf0]
0076: cmp ax, 0x1
0079: jnz 0x90
007B: mov ax, 0x21
007E: push ax
007F: mov ax, 0x1
0082: push ax
0083: les bx, [bp+0x6]
0086: call far word [es:bx+0xd4]
008B: pop cx
008C: pop cx
008D: jmp 0x151
0090: les bx, [bp+0x6]
0093: call far word [es:bx+0xf0]
0098: cmp ax, 0x2
009B: jnz 0xc4
009D: mov ax, 0x25
00A0: push ax
00A1: mov ax, 0x1
00A4: push ax
00A5: les bx, [bp+0x6]
00A8: call far word [es:bx+0xd4]
00AD: pop cx
00AE: pop cx
00AF: mov ax, 0x21
00B2: push ax
00B3: mov ax, 0x2
00B6: push ax
00B7: les bx, [bp+0x6]
00BA: call far word [es:bx+0xd4]
00BF: pop cx
00C0: pop cx
00C1: jmp 0x151
00C4: les bx, [bp+0x6]
00C7: call far word [es:bx+0xf0]
00CC: cmp ax, 0x3
00CF: jnz 0x109
00D1: mov ax, 0x21
00D4: push ax
00D5: mov ax, 0x1
00D8: push ax
00D9: les bx, [bp+0x6]
00DC: call far word [es:bx+0xd4]
00E1: pop cx
00E2: pop cx
00E3: mov ax, 0x21
00E6: push ax
00E7: mov ax, 0x2
00EA: push ax
00EB: les bx, [bp+0x6]
00EE: call far word [es:bx+0xd4]
00F3: pop cx
00F4: pop cx
00F5: mov ax, 0x25
00F8: push ax
00F9: mov ax, 0x4
00FC: push ax
00FD: les bx, [bp+0x6]
0100: call far word [es:bx+0xd4]
0105: pop cx
0106: pop cx
0107: jmp 0x151
0109: mov ax, 0x25
010C: push ax
010D: mov ax, 0x1
0110: push ax
0111: les bx, [bp+0x6]
0114: call far word [es:bx+0xd4]
0119: pop cx
011A: pop cx
011B: mov ax, 0x25
011E: push ax
011F: mov ax, 0x2
0122: push ax
0123: les bx, [bp+0x6]
0126: call far word [es:bx+0xd4]
012B: pop cx
012C: pop cx
012D: mov ax, 0x21
0130: push ax
0131: mov ax, 0x3
0134: push ax
0135: les bx, [bp+0x6]
0138: call far word [es:bx+0xd4]
013D: pop cx
013E: pop cx
013F: mov ax, 0x21
0142: push ax
0143: mov ax, 0x4
0146: push ax
0147: les bx, [bp+0x6]
014A: call far word [es:bx+0xd4]
014F: pop cx
0150: pop cx
0151: pop bp
0152: retf

Functn0C: "TELEPORT"
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x3
0006: push ax
0007: mov ax, 0xf0
000A: push ax
000B: mov ax, 0x1
000E: push ax
000F: mov ax, 0x4
0012: push ax
0013: les bx, [bp+0x6]
0016: call far word [es:bx+0xbc]
001B: add sp, 0x8
001E: pop bp
001F: retf

Functn0D: "LOWMNSTR"
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x6a9
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0xf
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xec]
001C: pop cx
001D: cmp ax, 0x6
0020: ja 0x50
0022: mov ax, 0x1f4
0025: push ax
0026: xor ax, ax
0028: push ax
0029: xor ax, ax
002B: push ax
002C: xor ax, ax
002E: push ax
002F: xor ax, ax
0031: push ax
0032: mov ax, 0xb5
0035: push ax
0036: les bx, [bp+0x6]
0039: call far word [es:bx+0xd8]
003E: add sp, 0xc
0041: mov ax, 0x6bf
0044: push ax
0045: les bx, [bp+0x6]
0048: call far word [es:bx+0xf8]
004D: pop cx
004E: jmp 0x8a
0050: mov ax, 0x728
0053: push ax
0054: les bx, [bp+0x6]
0057: call far word [es:bx+0xf8]
005C: pop cx
005D: mov ax, 0x741
0060: push ax
0061: les bx, [bp+0x6]
0064: call far word [es:bx+0xf8]
0069: pop cx
006A: mov ax, 0x3e8
006D: push ax
006E: xor ax, ax
0070: push ax
0071: xor ax, ax
0073: push ax
0074: xor ax, ax
0076: push ax
0077: mov ax, 0xbd
007A: push ax
007B: mov ax, 0x3
007E: push ax
007F: les bx, [bp+0x6]
0082: call far word [es:bx+0xd8]
0087: add sp, 0xc
008A: les bx, [bp+0x6]
008D: call far word [es:bx+0xf0]
0092: cmp ax, 0x1
0095: jz 0xa4
0097: les bx, [bp+0x6]
009A: call far word [es:bx+0xf0]
009F: cmp ax, 0x2
00A2: jnz 0xca
00A4: mov ax, 0x1b
00A7: push ax
00A8: mov ax, 0x1
00AB: push ax
00AC: les bx, [bp+0x6]
00AF: call far word [es:bx+0xd4]
00B4: pop cx
00B5: pop cx
00B6: mov ax, 0x1a
00B9: push ax
00BA: mov ax, 0x2
00BD: push ax
00BE: les bx, [bp+0x6]
00C1: call far word [es:bx+0xd4]
00C6: pop cx
00C7: pop cx
00C8: jmp 0x112
00CA: mov ax, 0x1c
00CD: push ax
00CE: mov ax, 0x1
00D1: push ax
00D2: les bx, [bp+0x6]
00D5: call far word [es:bx+0xd4]
00DA: pop cx
00DB: pop cx
00DC: mov ax, 0x1a
00DF: push ax
00E0: mov ax, 0x2
00E3: push ax
00E4: les bx, [bp+0x6]
00E7: call far word [es:bx+0xd4]
00EC: pop cx
00ED: pop cx
00EE: mov ax, 0x19
00F1: push ax
00F2: mov ax, 0x3
00F5: push ax
00F6: les bx, [bp+0x6]
00F9: call far word [es:bx+0xd4]
00FE: pop cx
00FF: pop cx
0100: mov ax, 0x1b
0103: push ax
0104: mov ax, 0x4
0107: push ax
0108: les bx, [bp+0x6]
010B: call far word [es:bx+0xd4]
0110: pop cx
0111: pop cx
0112: pop bp
0113: retf

Functn0E: "MODMNSTR"
0000: push bp
0001: mov bp, sp
0003: les bx, [bp+0x6]
0006: call far word [es:bx+0xf0]
000B: cmp ax, 0x1
000E: jnz 0x24
0010: mov ax, 0x1d
0013: push ax
0014: mov ax, 0x1
0017: push ax
0018: les bx, [bp+0x6]
001B: call far word [es:bx+0xd4]
0020: pop cx
0021: pop cx
0022: jmp 0x9f
0024: les bx, [bp+0x6]
0027: call far word [es:bx+0xf0]
002C: cmp ax, 0x2
002F: jnz 0x57
0031: mov ax, 0x1d
0034: push ax
0035: mov ax, 0x1
0038: push ax
0039: les bx, [bp+0x6]
003C: call far word [es:bx+0xd4]
0041: pop cx
0042: pop cx
0043: mov ax, 0x1e
0046: push ax
0047: mov ax, 0x2
004A: push ax
004B: les bx, [bp+0x6]
004E: call far word [es:bx+0xd4]
0053: pop cx
0054: pop cx
0055: jmp 0x9f
0057: mov ax, 0x20
005A: push ax
005B: mov ax, 0x1
005E: push ax
005F: les bx, [bp+0x6]
0062: call far word [es:bx+0xd4]
0067: pop cx
0068: pop cx
0069: mov ax, 0x1f
006C: push ax
006D: mov ax, 0x2
0070: push ax
0071: les bx, [bp+0x6]
0074: call far word [es:bx+0xd4]
0079: pop cx
007A: pop cx
007B: mov ax, 0x1c
007E: push ax
007F: mov ax, 0x3
0082: push ax
0083: les bx, [bp+0x6]
0086: call far word [es:bx+0xd4]
008B: pop cx
008C: pop cx
008D: mov ax, 0x1d
0090: push ax
0091: mov ax, 0x4
0094: push ax
0095: les bx, [bp+0x6]
0098: call far word [es:bx+0xd4]
009D: pop cx
009E: pop cx
009F: pop bp
00A0: retf

Functn0F: "STRMNST"
0000: push bp
0001: mov bp, sp
0003: les bx, [bp+0x6]
0006: call far word [es:bx+0xf0]
000B: cmp ax, 0x1
000E: jnz 0x25
0010: mov ax, 0x21
0013: push ax
0014: mov ax, 0x1
0017: push ax
0018: les bx, [bp+0x6]
001B: call far word [es:bx+0xd4]
0020: pop cx
0021: pop cx
0022: jmp 0x10a
0025: les bx, [bp+0x6]
0028: call far word [es:bx+0xf0]
002D: cmp ax, 0x2
0030: jnz 0x59
0032: mov ax, 0x21
0035: push ax
0036: mov ax, 0x1
0039: push ax
003A: les bx, [bp+0x6]
003D: call far word [es:bx+0xd4]
0042: pop cx
0043: pop cx
0044: mov ax, 0x22
0047: push ax
0048: mov ax, 0x2
004B: push ax
004C: les bx, [bp+0x6]
004F: call far word [es:bx+0xd4]
0054: pop cx
0055: pop cx
0056: jmp 0x10a
0059: les bx, [bp+0x6]
005C: call far word [es:bx+0xf0]
0061: cmp ax, 0x3
0064: jnz 0xb0
0066: mov ax, 0x21
0069: push ax
006A: mov ax, 0x1
006D: push ax
006E: les bx, [bp+0x6]
0071: call far word [es:bx+0xd4]
0076: pop cx
0077: pop cx
0078: mov ax, 0x21
007B: push ax
007C: mov ax, 0x2
007F: push ax
0080: les bx, [bp+0x6]
0083: call far word [es:bx+0xd4]
0088: pop cx
0089: pop cx
008A: mov ax, 0x23
008D: push ax
008E: mov ax, 0x3
0091: push ax
0092: les bx, [bp+0x6]
0095: call far word [es:bx+0xd4]
009A: pop cx
009B: pop cx
009C: mov ax, 0x23
009F: push ax
00A0: mov ax, 0x4
00A3: push ax
00A4: les bx, [bp+0x6]
00A7: call far word [es:bx+0xd4]
00AC: pop cx
00AD: pop cx
00AE: jmp 0x10a
00B0: mov ax, 0x24
00B3: push ax
00B4: mov ax, 0x1
00B7: push ax
00B8: les bx, [bp+0x6]
00BB: call far word [es:bx+0xd4]
00C0: pop cx
00C1: pop cx
00C2: mov ax, 0x24
00C5: push ax
00C6: mov ax, 0x2
00C9: push ax
00CA: les bx, [bp+0x6]
00CD: call far word [es:bx+0xd4]
00D2: pop cx
00D3: pop cx
00D4: mov ax, 0x23
00D7: push ax
00D8: mov ax, 0x3
00DB: push ax
00DC: les bx, [bp+0x6]
00DF: call far word [es:bx+0xd4]
00E4: pop cx
00E5: pop cx
00E6: mov ax, 0x23
00E9: push ax
00EA: mov ax, 0x4
00ED: push ax
00EE: les bx, [bp+0x6]
00F1: call far word [es:bx+0xd4]
00F6: pop cx
00F7: pop cx
00F8: mov ax, 0x22
00FB: push ax
00FC: mov ax, 0x5
00FF: push ax
0100: les bx, [bp+0x6]
0103: call far word [es:bx+0xd4]
0108: pop cx
0109: pop cx
010A: pop bp
010B: retf

Functn10: "BADMNSTR"
0000: push bp
0001: mov bp, sp
0003: les bx, [bp+0x6]
0006: call far word [es:bx+0xf0]
000B: cmp ax, 0x1
000E: jnz 0x37
0010: mov ax, 0x26
0013: push ax
0014: mov ax, 0x1
0017: push ax
0018: les bx, [bp+0x6]
001B: call far word [es:bx+0xd4]
0020: pop cx
0021: pop cx
0022: mov ax, 0x26
0025: push ax
0026: mov ax, 0x2
0029: push ax
002A: les bx, [bp+0x6]
002D: call far word [es:bx+0xd4]
0032: pop cx
0033: pop cx
0034: jmp 0x164
0037: les bx, [bp+0x6]
003A: call far word [es:bx+0xf0]
003F: cmp ax, 0x2
0042: jnz 0x8f
0044: mov ax, 0x25
0047: push ax
0048: mov ax, 0x1
004B: push ax
004C: les bx, [bp+0x6]
004F: call far word [es:bx+0xd4]
0054: pop cx
0055: pop cx
0056: mov ax, 0x25
0059: push ax
005A: mov ax, 0x2
005D: push ax
005E: les bx, [bp+0x6]
0061: call far word [es:bx+0xd4]
0066: pop cx
0067: pop cx
0068: mov ax, 0x27
006B: push ax
006C: mov ax, 0x3
006F: push ax
0070: les bx, [bp+0x6]
0073: call far word [es:bx+0xd4]
0078: pop cx
0079: pop cx
007A: mov ax, 0x27
007D: push ax
007E: mov ax, 0x4
0081: push ax
0082: les bx, [bp+0x6]
0085: call far word [es:bx+0xd4]
008A: pop cx
008B: pop cx
008C: jmp 0x164
008F: les bx, [bp+0x6]
0092: call far word [es:bx+0xf0]
0097: cmp ax, 0x3
009A: jnz 0xf8
009C: mov ax, 0x26
009F: push ax
00A0: mov ax, 0x1
00A3: push ax
00A4: les bx, [bp+0x6]
00A7: call far word [es:bx+0xd4]
00AC: pop cx
00AD: pop cx
00AE: mov ax, 0x26
00B1: push ax
00B2: mov ax, 0x2
00B5: push ax
00B6: les bx, [bp+0x6]
00B9: call far word [es:bx+0xd4]
00BE: pop cx
00BF: pop cx
00C0: mov ax, 0x27
00C3: push ax
00C4: mov ax, 0x3
00C7: push ax
00C8: les bx, [bp+0x6]
00CB: call far word [es:bx+0xd4]
00D0: pop cx
00D1: pop cx
00D2: mov ax, 0x27
00D5: push ax
00D6: mov ax, 0x4
00D9: push ax
00DA: les bx, [bp+0x6]
00DD: call far word [es:bx+0xd4]
00E2: pop cx
00E3: pop cx
00E4: mov ax, 0x28
00E7: push ax
00E8: mov ax, 0x5
00EB: push ax
00EC: les bx, [bp+0x6]
00EF: call far word [es:bx+0xd4]
00F4: pop cx
00F5: pop cx
00F6: jmp 0x164
00F8: mov ax, 0x28
00FB: push ax
00FC: mov ax, 0x1
00FF: push ax
0100: les bx, [bp+0x6]
0103: call far word [es:bx+0xd4]
0108: pop cx
0109: pop cx
010A: mov ax, 0x28
010D: push ax
010E: mov ax, 0x2
0111: push ax
0112: les bx, [bp+0x6]
0115: call far word [es:bx+0xd4]
011A: pop cx
011B: pop cx
011C: mov ax, 0x27
011F: push ax
0120: mov ax, 0x3
0123: push ax
0124: les bx, [bp+0x6]
0127: call far word [es:bx+0xd4]
012C: pop cx
012D: pop cx
012E: mov ax, 0x27
0131: push ax
0132: mov ax, 0x4
0135: push ax
0136: les bx, [bp+0x6]
0139: call far word [es:bx+0xd4]
013E: pop cx
013F: pop cx
0140: mov ax, 0x26
0143: push ax
0144: mov ax, 0x5
0147: push ax
0148: les bx, [bp+0x6]
014B: call far word [es:bx+0xd4]
0150: pop cx
0151: pop cx
0152: mov ax, 0x25
0155: push ax
0156: mov ax, 0x6
0159: push ax
015A: les bx, [bp+0x6]
015D: call far word [es:bx+0xd4]
0162: pop cx
0163: pop cx
0164: pop bp
0165: retf

Functn11: "MESSAGEA"
0000: push bp
0001: mov bp, sp
0003: xor ax, ax
0005: push ax
0006: xor ax, ax
0008: push ax
0009: mov ax, 0x2
000C: push ax
000D: les bx, [bp+0x6]
0010: call far word [es:bx]
0013: add sp, 0x6
0016: mov ax, 0x74e
0019: push ax
001A: les bx, [bp+0x6]
001D: call far word [es:bx+0xf8]
0022: pop cx
0023: pop bp
0024: retf

Functn12: "MESSAGEB"
0000: push bp
0001: mov bp, sp
0003: xor ax, ax
0005: push ax
0006: xor ax, ax
0008: push ax
0009: mov ax, 0x2
000C: push ax
000D: les bx, [bp+0x6]
0010: call far word [es:bx]
0013: add sp, 0x6
0016: mov ax, 0x76f
0019: push ax
001A: les bx, [bp+0x6]
001D: call far word [es:bx+0xf8]
0022: pop cx
0023: pop bp
0024: retf

Functn13: "TELEMESS"
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x3
0006: push ax
0007: xor ax, ax
0009: push ax
000A: mov ax, 0x2
000D: push ax
000E: les bx, [bp+0x6]
0011: call far word [es:bx]
0014: add sp, 0x6
0017: mov ax, 0x798
001A: push ax
001B: les bx, [bp+0x6]
001E: call far word [es:bx+0xf8]
0023: pop cx
0024: pop bp
0025: retf

Functn14: "STRSMESS"
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x1
0006: push ax
0007: xor ax, ax
0009: push ax
000A: mov ax, 0x2
000D: push ax
000E: les bx, [bp+0x6]
0011: call far word [es:bx]
0014: add sp, 0x6
0017: mov ax, 0x7ba
001A: push ax
001B: les bx, [bp+0x6]
001E: call far word [es:bx+0xf8]
0023: pop cx
0024: pop bp
0025: retf

Functn15: "STRSTLPT"
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x2
0006: push ax
0007: mov ax, 0x1
000A: push ax
000B: mov ax, 0x2
000E: push ax
000F: mov ax, 0x2
0012: push ax
0013: les bx, [bp+0x6]
0016: call far word [es:bx+0xbc]
001B: add sp, 0x8
001E: pop bp
001F: retf

Functn16: "REGDOOR"
0000: push bp
0001: mov bp, sp
0003: xor ax, ax
0005: push ax
0006: mov ax, 0x2
0009: push ax
000A: les bx, [bp+0x6]
000D: call far word [es:bx+0x4]
0011: pop cx
0012: pop cx
0013: cmp ax, 0x4
0016: jnz 0x63
0018: mov ax, 0x7ec
001B: push ax
001C: les bx, [bp+0x6]
001F: call far word [es:bx+0xf8]
0024: pop cx
0025: les bx, [bp+0x6]
0028: call far word [es:bx+0x24]
002C: push ax
002D: les bx, [bp+0x6]
0030: call far word [es:bx+0x20]
0034: push ax
0035: mov ax, 0x1
0038: push ax
0039: les bx, [bp+0x6]
003C: call far word [es:bx+0x30]
0040: add sp, 0x6
0043: mov ax, 0x1
0046: push ax
0047: les bx, [bp+0x6]
004A: call far word [es:bx+0x24]
004E: push ax
004F: les bx, [bp+0x6]
0052: call far word [es:bx+0x20]
0056: push ax
0057: les bx, [bp+0x6]
005A: call far word [es:bx+0x2c]
005E: add sp, 0x6
0061: jmp 0x8d
0063: mov ax, 0x82f
0066: push ax
0067: les bx, [bp+0x6]
006A: call far word [es:bx+0xf8]
006F: pop cx
0070: xor ax, ax
0072: push ax
0073: les bx, [bp+0x6]
0076: call far word [es:bx+0x24]
007A: push ax
007B: les bx, [bp+0x6]
007E: call far word [es:bx+0x20]
0082: push ax
0083: les bx, [bp+0x6]
0086: call far word [es:bx+0x2c]
008A: add sp, 0x6
008D: pop bp
008E: retf

Functn17: "NPCCHATA"
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x851
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0x1f
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xfc]
001C: pop cx
001D: mov ax, 0xf
0020: push ax
0021: les bx, [bp+0x6]
0024: call far word [es:bx+0xec]
0029: pop cx
002A: cmp ax, 0xb
002D: ja 0x3e
002F: mov ax, 0x86e
0032: push ax
0033: les bx, [bp+0x6]
0036: call far word [es:bx+0xf8]
003B: pop cx
003C: jmp 0x4b
003E: mov ax, 0x8d2
0041: push ax
0042: les bx, [bp+0x6]
0045: call far word [es:bx+0xf8]
004A: pop cx
004B: pop bp
004C: retf

Functn18: "NPCCHATB"
0000: push bp
0001: mov bp, sp
0003: mov ax, 0x914
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0x2b
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xfc]
001C: pop cx
001D: mov ax, 0xf
0020: push ax
0021: les bx, [bp+0x6]
0024: call far word [es:bx+0xec]
0029: pop cx
002A: cmp ax, 0x9
002D: ja 0x3e
002F: mov ax, 0x932
0032: push ax
0033: les bx, [bp+0x6]
0036: call far word [es:bx+0xf8]
003B: pop cx
003C: jmp 0x4b
003E: mov ax, 0xa32
0041: push ax
0042: les bx, [bp+0x6]
0045: call far word [es:bx+0xf8]
004A: pop cx
004B: pop bp
004C: retf

Functn19: "NPCCHATC"
0000: push bp
0001: mov bp, sp
0003: mov ax, 0xa71
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0x26
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xfc]
001C: pop cx
001D: mov ax, 0xf
0020: push ax
0021: les bx, [bp+0x6]
0024: call far word [es:bx+0xec]
0029: pop cx
002A: cmp ax, 0xa
002D: ja 0x3e
002F: mov ax, 0xa90
0032: push ax
0033: les bx, [bp+0x6]
0036: call far word [es:bx+0xf8]
003B: pop cx
003C: jmp 0x4b
003E: mov ax, 0xb33
0041: push ax
0042: les bx, [bp+0x6]
0045: call far word [es:bx+0xf8]
004A: pop cx
004B: pop bp
004C: retf

Functn1A: "NPCCHATD"
0000: push bp
0001: mov bp, sp
0003: mov ax, 0xb69
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0x1a
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xfc]
001C: pop cx
001D: mov ax, 0xf
0020: push ax
0021: les bx, [bp+0x6]
0024: call far word [es:bx+0xec]
0029: pop cx
002A: cmp ax, 0x8
002D: ja 0x3e
002F: mov ax, 0xb86
0032: push ax
0033: les bx, [bp+0x6]
0036: call far word [es:bx+0xf8]
003B: pop cx
003C: jmp 0x4b
003E: mov ax, 0xc60
0041: push ax
0042: les bx, [bp+0x6]
0045: call far word [es:bx+0xf8]
004A: pop cx
004B: pop bp
004C: retf

Functn1B: "NPCCHATE"
0000: push bp
0001: mov bp, sp
0003: mov ax, 0xc93
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0xf8]
000F: pop cx
0010: mov ax, 0x27
0013: push ax
0014: les bx, [bp+0x6]
0017: call far word [es:bx+0xfc]
001C: pop cx
001D: mov ax, 0xf
0020: push ax
0021: les bx, [bp+0x6]
0024: call far word [es:bx+0xec]
0029: pop cx
002A: cmp ax, 0x8
002D: ja 0x3e
002F: mov ax, 0xcb0
0032: push ax
0033: les bx, [bp+0x6]
0036: call far word [es:bx+0xf8]
003B: pop cx
003C: jmp 0x4b
003E: mov ax, 0xd4b
0041: push ax
0042: les bx, [bp+0x6]
0045: call far word [es:bx+0xf8]
004A: pop cx
004B: pop bp
004C: retf

Functn1C: "KEYDRA"
0000: push bp
0001: mov bp, sp
0003: mov ax, 0xd3
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0x50]
000E: pop cx
000F: or ax, ax
0011: jz 0x72
0013: mov ax, 0x1
0016: push ax
0017: xor ax, ax
0019: push ax
001A: mov ax, 0x2
001D: push ax
001E: les bx, [bp+0x6]
0021: call far word [es:bx]
0024: add sp, 0x6
0027: mov ax, 0xd8c
002A: push ax
002B: les bx, [bp+0x6]
002E: call far word [es:bx+0xf8]
0033: pop cx
0034: les bx, [bp+0x6]
0037: call far word [es:bx+0x24]
003B: push ax
003C: les bx, [bp+0x6]
003F: call far word [es:bx+0x20]
0043: push ax
0044: mov ax, 0x1
0047: push ax
0048: les bx, [bp+0x6]
004B: call far word [es:bx+0x30]
004F: add sp, 0x6
0052: mov ax, 0x1
0055: push ax
0056: les bx, [bp+0x6]
0059: call far word [es:bx+0x24]
005D: push ax
005E: les bx, [bp+0x6]
0061: call far word [es:bx+0x20]
0065: push ax
0066: les bx, [bp+0x6]
0069: call far word [es:bx+0x2c]
006D: add sp, 0x6
0070: jmp 0x9c
0072: mov ax, 0xdac
0075: push ax
0076: les bx, [bp+0x6]
0079: call far word [es:bx+0xf8]
007E: pop cx
007F: xor ax, ax
0081: push ax
0082: les bx, [bp+0x6]
0085: call far word [es:bx+0x24]
0089: push ax
008A: les bx, [bp+0x6]
008D: call far word [es:bx+0x20]
0091: push ax
0092: les bx, [bp+0x6]
0095: call far word [es:bx+0x2c]
0099: add sp, 0x6
009C: pop bp
009D: retf

Functn1D: "LKPKDRA"
0000: push bp
0001: mov bp, sp
0003: mov ax, 0xd2
0006: push ax
0007: les bx, [bp+0x6]
000A: call far word [es:bx+0x50]
000E: pop cx
000F: or ax, ax
0011: jz 0x72
0013: mov ax, 0x2
0016: push ax
0017: xor ax, ax
0019: push ax
001A: mov ax, 0x2
001D: push ax
001E: les bx, [bp+0x6]
0021: call far word [es:bx]
0024: add sp, 0x6
0027: mov ax, 0xdc0
002A: push ax
002B: les bx, [bp+0x6]
002E: call far word [es:bx+0xf8]
0033: pop cx
0034: les bx, [bp+0x6]
0037: call far word [es:bx+0x24]
003B: push ax
003C: les bx, [bp+0x6]
003F: call far word [es:bx+0x20]
0043: push ax
0044: mov ax, 0x1
0047: push ax
0048: les bx, [bp+0x6]
004B: call far word [es:bx+0x30]
004F: add sp, 0x6
0052: mov ax, 0x1
0055: push ax
0056: les bx, [bp+0x6]
0059: call far word [es:bx+0x24]
005D: push ax
005E: les bx, [bp+0x6]
0061: call far word [es:bx+0x20]
0065: push ax
0066: les bx, [bp+0x6]
0069: call far word [es:bx+0x2c]
006D: add sp, 0x6
0070: jmp 0x9c
0072: mov ax, 0xdea
0075: push ax
0076: les bx, [bp+0x6]
0079: call far word [es:bx+0xf8]
007E: pop cx
007F: xor ax, ax
0081: push ax
0082: les bx, [bp+0x6]
0085: call far word [es:bx+0x24]
0089: push ax
008A: les bx, [bp+0x6]
008D: call far word [es:bx+0x20]
0091: push ax
0092: les bx, [bp+0x6]
0095: call far word [es:bx+0x2c]
0099: add sp, 0x6
009C: pop bp
009D: retf

Functn1E: "STRNGDRA"
0000: push bp
0001: mov bp, sp
0003: xor ax, ax
0005: push ax
0006: les bx, [bp+0x6]
0009: call far word [es:bx+0xa4]
000E: pop cx
000F: cmp ax, 0x12
0012: jb 0x73
0014: mov ax, 0x3
0017: push ax
0018: xor ax, ax
001A: push ax
001B: mov ax, 0x2
001E: push ax
001F: les bx, [bp+0x6]
0022: call far word [es:bx]
0025: add sp, 0x6
0028: mov ax, 0xe3c
002B: push ax
002C: les bx, [bp+0x6]
002F: call far word [es:bx+0xf8]
0034: pop cx
0035: les bx, [bp+0x6]
0038: call far word [es:bx+0x24]
003C: push ax
003D: les bx, [bp+0x6]
0040: call far word [es:bx+0x20]
0044: push ax
0045: mov ax, 0x1
0048: push ax
0049: les bx, [bp+0x6]
004C: call far word [es:bx+0x30]
0050: add sp, 0x6
0053: mov ax, 0x1
0056: push ax
0057: les bx, [bp+0x6]
005A: call far word [es:bx+0x24]
005E: push ax
005F: les bx, [bp+0x6]
0062: call far word [es:bx+0x20]
0066: push ax
0067: les bx, [bp+0x6]
006A: call far word [es:bx+0x2c]
006E: add sp, 0x6
0071: jmp 0x9d
0073: mov ax, 0xe5f
0076: push ax
0077: les bx, [bp+0x6]
007A: call far word [es:bx+0xf8]
007F: pop cx
0080: xor ax, ax
0082: push ax
0083: les bx, [bp+0x6]
0086: call far word [es:bx+0x24]
008A: push ax
008B: les bx, [bp+0x6]
008E: call far word [es:bx+0x20]
0092: push ax
0093: les bx, [bp+0x6]
0096: call far word [es:bx+0x2c]
009A: add sp, 0x6
009D: pop bp
009E: retf

Functn1F: "REGDORA"
0000: push bp
0001: mov bp, sp
0003: xor ax, ax
0005: push ax
0006: mov ax, 0x2
0009: push ax
000A: les bx, [bp+0x6]
000D: call far word [es:bx+0x4]
0011: pop cx
0012: pop cx
0013: or ax, ax
0015: jz 0x2c
0017: xor ax, ax
0019: push ax
001A: mov ax, 0x2
001D: push ax
001E: les bx, [bp+0x6]
0021: call far word [es:bx+0x4]
0025: pop cx
0026: pop cx
0027: cmp ax, 0x4
002A: jnz 0x8b
002C: mov ax, 0x4
002F: push ax
0030: xor ax, ax
0032: push ax
0033: mov ax, 0x2
0036: push ax
0037: les bx, [bp+0x6]
003A: call far word [es:bx]
003D: add sp, 0x6
0040: mov ax, 0xe81
0043: push ax
0044: les bx, [bp+0x6]
0047: call far word [es:bx+0xf8]
004C: pop cx
004D: les bx, [bp+0x6]
0050: call far word [es:bx+0x24]
0054: push ax
0055: les bx, [bp+0x6]
0058: call far word [es:bx+0x20]
005C: push ax
005D: mov ax, 0x1
0060: push ax
0061: les bx, [bp+0x6]
0064: call far word [es:bx+0x30]
0068: add sp, 0x6
006B: mov ax, 0x1
006E: push ax
006F: les bx, [bp+0x6]
0072: call far word [es:bx+0x24]
0076: push ax
0077: les bx, [bp+0x6]
007A: call far word [es:bx+0x20]
007E: push ax
007F: les bx, [bp+0x6]
0082: call far word [es:bx+0x2c]
0086: add sp, 0x6
0089: jmp 0xb5
008B: mov ax, 0xec4
008E: push ax
008F: les bx, [bp+0x6]
0092: call far word [es:bx+0xf8]
0097: pop cx
0098: xor ax, ax
009A: push ax
009B: les bx, [bp+0x6]
009E: call far word [es:bx+0x24]
00A2: push ax
00A3: les bx, [bp+0x6]
00A6: call far word [es:bx+0x20]
00AA: push ax
00AB: les bx, [bp+0x6]
00AE: call far word [es:bx+0x2c]
00B2: add sp, 0x6
00B5: pop bp
00B6: retf

