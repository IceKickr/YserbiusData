RIVER_01:
000B  0000        BEGIN
000E  0003        ShowMessage(0x03FC) = The River of Eternity taps your life energy.
001B  0010        UnknownFunctionC4()
0023  0018        ax = GetMaxHits()
002A  001F        bx = 0x0004
002D  0022        ax = ax / bx (signed, dx = quotient)
0030  0025        DoDamage(ax)
003A  002F        ax = GetCurrentHits()
0041  0036        RefreshCompareFlags(ax)
0043  0038        If (result.unsigned_greater_than) jump to 0047
0045  003A        ShowMessage(0x0429) = You have died.
0052  0047        RETURN

RIVRBANK_02:
0054  0000        BEGIN
0057  0003        ShowMessage(0x0438) = Only the bravest adventurers explore the life-devouring River of Eternity for hidden passages.
0064  0010        RETURN

SECDOORA_03:
0066  0000        BEGIN
0069  0003        ax = UsedItem(0xD4, 0xD4)
007C  0016        If (result.notequal) jump to 002D
007E  0018        ax = CheckState(0x02, 0x6C)
008F  0029        RefreshCompareFlags(ax)
0091  002B        If (result.equal) jump to 0093
0093  002D        RemoveItem(0xD4)
009F  0039        SetState(0x02, 0x6C, 0x01)
00B4  004E        Push(01)
00B8  0052        ax = SetExitability(ax) // ax is usually 0 following equality check
00BF  0059        Push(ax)
00C0  005A        ax = GetNextTile()
00C7  0061        Push(ax)
00C8  0062        Move(stk[0], stk[1], stk[2])
00D2  006C        Push(01)
00D6  0070        ax = GetNextTile()
00DD  0077        Push(ax)
00DE  0078        Push(01)
00E2  007C        SetUnblocked()
00EC  0086        ShowMessage(0x0497) = A great dwarven door appears in the wall.
00F9  0093        RETURN

LAVA_04:
00FB  0000        BEGIN
00FE  0003        ShowMessage(0x04C1) = Your step into lava is fatal.
010B  0010        ax = GetMaxHits()
0112  0017        DoDamage(ax)
011C  0021        RETURN

SECDOORB_05:
011E  0000        BEGIN
0121  0003        ax = UsedSkill(0x0D) // returns 0 if did not use, compares to 2nd op if did use
012D  000F        compare(ax, 0x000B)
0130  0012        If (result.above or result.equal) jump to 004E
0132  0014        ax = UsedSpell(0x17) // returns 0 if did not use on map, level if used
013E  0020        RefreshCompareFlags(ax)
0140  0022        If (result.notequal) jump to 004E
0142  0024        ax = UsedItem(0xA2, 0xA2)
0155  0037        If (result.notequal) jump to 004E
0157  0039        ax = UsedItem(0xBE, 0xBE)
016A  004C        If (result.equal) jump to 0099
016C  004E        Push(01)
0170  0052        ax = SetExitability(ax) // ax is usually 0 following equality check
0177  0059        Push(ax)
0178  005A        ax = GetNextTile()
017F  0061        Push(ax)
0180  0062        Move(stk[0], stk[1], stk[2])
018A  006C        ax = SetExitability(ax) // ax is usually 0 following equality check
0191  0073        Push(ax)
0192  0074        ax = GetNextTile()
0199  007B        Push(ax)
019A  007C        Push(01)
019E  0080        SetUnblocked()
01A8  008A        ShowMessage(0x04DF) = You locate a hidden door!
01B5  0097        Jump to 00B6
01B7  0099        Push(00)
01BA  009C        ax = SetExitability(ax) // ax is usually 0 following equality check
01C1  00A3        Push(ax)
01C2  00A4        ax = GetNextTile()
01C9  00AB        Push(ax)
01CA  00AC        Move(stk[0], stk[1], stk[2])
01D4  00B6        RETURN

LAVALEDG_06:
01D6  0000        BEGIN
01D9  0003        ShowMessage(0x04F9) = A ledge can be seen across the lava pit.
01E6  0010        RETURN

LAVAPA_07:
01E8  0000        BEGIN
01EB  0003        ax = CheckState(0x01, 0x03)
01FC  0014        compare(ax, 0x0001)
01FF  0017        If (result.equal) jump to 002F
0201  0019        ax = CheckState(0x01, 0x03)
0212  002A        compare(ax, 0x0005)
0215  002D        If (result.notequal) jump to 0080
0217  002F        ShowMessage(0x0522) = A platform appears beneath your feet..
0224  003C        SetTileFloor(0xA8, 00)
0232  004A        cx = Pop()
0233  004B        cx = Pop()
0234  004C        Move(0x01, 0xA8)
0245  005D        SetTileFloor(0x79, 00)
0253  006B        cx = Pop()
0254  006C        cx = Pop()
0255  006D        Move(0x01, 0x79)
0266  007E        Jump to 009E
0268  0080        ShowMessage(0x0549) = You step into a lava pit and die!
0275  008D        ax = GetMaxHits()
027C  0094        DoDamage(ax)
0286  009E        RETURN

LAVAPB_08:
0288  0000        BEGIN
028B  0003        ax = CheckState(0x01, 0x03)
029C  0014        compare(ax, 0x0002)
029F  0017        If (result.equal) jump to 002F
02A1  0019        ax = CheckState(0x01, 0x03)
02B2  002A        compare(ax, 0x0005)
02B5  002D        If (result.notequal) jump to 0080
02B7  002F        ShowMessage(0x056B) = A platform appears beneath your feet..
02C4  003C        SetTileFloor(0x98, 00)
02D2  004A        cx = Pop()
02D3  004B        cx = Pop()
02D4  004C        Move(0x01, 0x98)
02E5  005D        SetTileFloor(0x89, 00)
02F3  006B        cx = Pop()
02F4  006C        cx = Pop()
02F5  006D        Move(0x01, 0x89)
0306  007E        Jump to 009E
0308  0080        ShowMessage(0x0592) = You step into a lava pit and die!
0315  008D        ax = GetMaxHits()
031C  0094        DoDamage(ax)
0326  009E        RETURN

LAVAPC_09:
0328  0000        BEGIN
032B  0003        ax = CheckState(0x01, 0x03)
033C  0014        compare(ax, 0x0003)
033F  0017        If (result.equal) jump to 002F
0341  0019        ax = CheckState(0x01, 0x03)
0352  002A        compare(ax, 0x0005)
0355  002D        If (result.notequal) jump to 0080
0357  002F        ShowMessage(0x05B4) = A platform appears beneath your feet..
0364  003C        SetTileFloor(0x88, 00)
0372  004A        cx = Pop()
0373  004B        cx = Pop()
0374  004C        Move(0x01, 0x88)
0385  005D        SetTileFloor(0x99, 00)
0393  006B        cx = Pop()
0394  006C        cx = Pop()
0395  006D        Move(0x01, 0x99)
03A6  007E        Jump to 009E
03A8  0080        ShowMessage(0x05DB) = You step into a lava pit and die!
03B5  008D        ax = GetMaxHits()
03BC  0094        DoDamage(ax)
03C6  009E        RETURN

LAVAPD_0A:
03C8  0000        BEGIN
03CB  0003        ax = CheckState(0x01, 0x03)
03DC  0014        compare(ax, 0x0004)
03DF  0017        If (result.equal) jump to 002F
03E1  0019        ax = CheckState(0x01, 0x03)
03F2  002A        compare(ax, 0x0005)
03F5  002D        If (result.notequal) jump to 0080
03F7  002F        ShowMessage(0x05FD) = A platform appears beneath your feet..
0404  003C        SetTileFloor(0x78, 00)
0412  004A        cx = Pop()
0413  004B        cx = Pop()
0414  004C        Move(0x01, 0x78)
0425  005D        SetTileFloor(0xA9, 00)
0433  006B        cx = Pop()
0434  006C        cx = Pop()
0435  006D        Move(0x01, 0xA9)
0446  007E        Jump to 009E
0448  0080        ShowMessage(0x0624) = You step into a lava pit and die!
0455  008D        ax = GetMaxHits()
045C  0094        DoDamage(ax)
0466  009E        RETURN

LAVASWA_0B:
0468  0000        BEGIN
046B  0003        ShowMessage(0x0646) = The wall bursts with color!
0478  0010        ShowMessage(0x0662) = In the distance you hear a platform moving.
0485  001D        SetState(0x01, 0x03, 0x01)
049A  0032        RETURN

LAVASWB_0C:
049C  0000        BEGIN
049F  0003        ShowMessage(0x068E) = The wall bursts with color!
04AC  0010        ShowMessage(0x06AA) = In the distance you hear a platform moving.
04B9  001D        SetState(0x01, 0x03, 0x02)
04CE  0032        RETURN

LAVASWC_0D:
04D0  0000        BEGIN
04D3  0003        ShowMessage(0x06D6) = The wall bursts with color!
04E0  0010        ShowMessage(0x06F2) = In the distance you hear a platform moving.
04ED  001D        SetState(0x01, 0x03, 0x03)
0502  0032        RETURN

LAVASWD_0E:
0504  0000        BEGIN
0507  0003        ShowMessage(0x071E) = The wall bursts with color!
0514  0010        ShowMessage(0x073A) = In the distance you hear a platform moving.
0521  001D        ShowMessage(0x0766) = Perhaps there is a way for you to join your party.
052E  002A        SetState(0x01, 0x03, 0x04)
0543  003F        RETURN

KINGROOM_0F:
0545  0000        BEGIN
0548  0003        ShowMessage(0x0799) = You enter a magnificently ornamented room, bedecked with jewels and the finely crafted metalworks of dwarf craftsmen.
0555  0010        ShowMessage(0x080F) = In a small chair in the center of this royal treasure sits the Dwarf King.
0562  001D        RETURN

DWARKING_10:
0564  0000        BEGIN
0567  0003        ax = HasItem(0xF4)
0575  0011        If (result.notequal) jump to 0061
0577  0013        ShowPortrait(0x001C)
0584  0020        ShowMessage(0x085A) = The Dwarf King nods.
0591  002D        ShowMessage(0x086F) = 'Welcome strangers! 
059E  003A        ShowMessage(0x0884) = I have a quest for you, if you are brave enough!
05AB  0047        ShowMessage(0x08B5) = Beyond the keyhole lava lies a gem of great value, stolen by a fiercesome Dragon.
05B8  0054        ShowMessage(0x0907) = Keep the gem if you like, as our token of friendship. We ask only that you destroy this vile creature who blackmails us in return for peace.'
05C5  0061        RETURN

FLEXSWOR_11:
05C7  0000        BEGIN
05CA  0003        ShowPortrait(0x002C)
05D7  0010        ax = HasItem(0x09)
05E5  001E        If (result.notequal) jump to 008D
05E7  0020        ax = HasItem(0xF0)
05F5  002E        If (result.equal) jump to 0071
05F7  0030        ShowMessage(0x0995) = The dwarf takes the Flex Metal and smiles broadly. 'No greater pleasure can a dwarf blacksmith have than to test the powers of a new metal.'
0604  003D        ShowMessage(0x0A22) = After a few hours working the metal, she holds up a brilliant blue sword.
0611  004A        ShowMessage(0x0A6C) = 'There!  My finest weapon, made from your Flex Metal.  I dub it The Wind Sword!  May it destroy your enemies at first blow!'
061E  0057        RemoveItem(0xF0)
062A  0063        GiveItem(0x09)
0636  006F        Jump to 008B
0638  0071        ShowMessage(0x0AE9) = The dwarf blacksmith cuts down the furnace, then turns to greet you. 
0645  007E        ShowMessage(0x0B2F) = 'I am a wizard swordmaker, ready to make the finest weapons from your valuable metals.  What may I build for you?'
0652  008B        Jump to 00C1
0654  008D        ShowMessage(0x0BA2) = The dwarf blacksmith pauses briefly from her work.
0661  009A        ShowMessage(0x0BD5) = 'I see you have returned!'  An expression of worry crosses her face.  'Oh, I hope The Wind Sword has given you no trouble.'
066E  00A7        ShowMessage(0x0C51) = She then notices the great blue sword.  'Ah, it's in fine shape!
067B  00B4        ShowMessage(0x0C92) = If you find other types of metals, I will gladly make you another weapon!'
0688  00C1        RETURN

BLAKSMTH_12:
068A  0000        BEGIN
068D  0003        ShowMessage(0x0CDD) = The room you enter contains furnaces, hammers and anvils.
069A  0010        ShowMessage(0x0D17) = In a corner is a dwarf blacksmith, hard at work on her latest golden creation.
06A7  001D        RETURN

CYCLQUST_13:
06A9  0000        BEGIN
06AC  0003        ShowPortrait(0x002C)
06B9  0010        ax = HasItem(0xF3)
06C7  001E        If (result.equal) jump to 0023
06C9  0020        Jump to 00DD
06CC  0023        ax = HasItem(0xF1)
06DA  0031        If (result.equal) jump to 0099
06DC  0033        ShowMessage(0x0D66) = A mean, twisted smile appears across the face of the dwarf blacksmith.
06E9  0040        ShowMessage(0x0DAD) = 'You have killed the cyclop!  My gold caves are won!
06F6  004D        ShowMessage(0x0DE2) = Hmmph.  It is my debt to repay you.  And I shall!'
0703  005A        ShowMessage(0x0E15) = A few hours pass as the blacksmith weaves a magnificent treasure from golden threads.  Then she appears again.
0710  0067        ShowMessage(0x0E84) = 'Here.  My proudest work!  A golden boat that can ride the rainbows.  May you find treasure wherever you go.'
071D  0074        ShowMessage(0x0EF2) = Then she scoots away.
072A  0081        RemoveItem(0xF1)
0736  008D        GiveItem(0xF3)
0742  0099        ax = HasItem(0xF1)
0750  00A7        If (result.notequal) jump to 00DD
0752  00A9        ShowMessage(0x0F08) = The old dwarf blacksmith at first does not hear you approach. Then she senses your presence and wheels on you. 
075F  00B6        ShowMessage(0x0F78) = 'A mean trick you play on a wise one!  No matter.  No doubt you're looking for another golden trinket of mine.
076C  00C3        ShowMessage(0x0FE7) = Well, I will not give you any of my creations.  Never!
0779  00D0        ShowMessage(0x101E) = Unless, hmmm, Unless you are able to rid my gold caves of a horrible Cyclop! He fancies himself King of the Cyclops.'
0786  00DD        RETURN

MNRPLATC_14:
0788  0000        BEGIN
078B  0003        ShowPortrait(0x0023)
0798  0010        ax = CheckState(0x02, 0x6F)
07A9  0021        RefreshCompareFlags(ax)
07AB  0023        If (result.equal) jump to 008F
07AD  0025        ShowMessage(0x1094) = The dwarf miner greets you with youthful enthusiasm.
07BA  0032        ax = CheckState(0x02, 0x6B)
07CB  0043        RefreshCompareFlags(ax)
07CD  0045        If (result.notequal) jump to 008D
07CF  0047        SetState(0x02, 0x6B, 0x01)
07E4  005C        ShowMessage(0x10C9) = You show signs of entering my caves!  I thank-you for clearing my mines and repay you with treasure.
07F1  0069        GiveItem(0xBA)
07FD  0075        GiveItem(0xBA)
0809  0081        GiveItem(0xBA)
0815  008D        Jump to 00FB
0817  008F        ax = HasItem(0xD7)
0825  009D        If (result.equal) jump to 00BB
0827  009F        ShowMessage(0x112E) = The dwarf miner smiles as you approach.
0834  00AC        ShowMessage(0x1156) = 'Have you found my cave yet?  It is by the water's edge.'
0841  00B9        Jump to 00FB
0843  00BB        ShowMessage(0x1190) = An apprentice dwarf miner notices your arrival.
0850  00C8        ShowMessage(0x11C0) = 'Adventurers!  At last!  I've heard tales from the elders about your deeds.  I, too, have a cave, well hidden beyond the edges of the waters.
085D  00D5        ShowMessage(0x124E) = Monsters have forced me from my home. I am not strong enough to fight them.
086A  00E2        ShowMessage(0x129A) = Perhaps, if I give you the key to my small cave, you will do me a favor. Then I may repay you well some day.'
0877  00EF        GiveItem(0xD7)
0883  00FB        RETURN

NSTYOGRE_15:
0885  0000        BEGIN
0888  0003        AddEncounter(0x14, 0x01)
089A  0015        AddEncounter(0x14, 0x02)
08AC  0027        AddEncounter(0x14, 0x03)
08BE  0039        AddEncounter(0x14, 0x04)
08D0  004B        AddEncounter(0x14, 0x05)
08E2  005D        AddEncounter(0x14, 0x06)
08F4  006F        RETURN

OPENER_16:
08F6  0000        BEGIN
08F9  0003        SetState(0x01, 0x03, 0x05)
090E  0018        ShowMessage(0x1308) = All the east side platforms appear to be up.
091B  0025        SetTileFloor(0xA9, 00)
0929  0033        cx = Pop()
092A  0034        cx = Pop()
092B  0035        Move(0x01, 0xA9)
093C  0046        SetTileFloor(0x99, 00)
094A  0054        cx = Pop()
094B  0055        cx = Pop()
094C  0056        Move(0x01, 0x99)
095D  0067        SetTileFloor(0x89, 00)
096B  0075        cx = Pop()
096C  0076        cx = Pop()
096D  0077        Move(0x01, 0x89)
097E  0088        SetTileFloor(0x79, 00)
098C  0096        cx = Pop()
098D  0097        cx = Pop()
098E  0098        Move(0x01, 0x79)
099F  00A9        RETURN

OPENEE_17:
09A1  0000        BEGIN
09A4  0003        ax = CheckState(0x01, 0x03)
09B5  0014        compare(ax, 0x0005)
09B8  0017        If (result.notequal) jump to 004D
09BA  0019        Push(03)
09BE  001D        ax = GetNextTile()
09C5  0024        Push(ax)
09C6  0025        Push(01)
09CA  0029        SetUnblocked()
09D4  0033        Push(01)
09D8  0037        Push(03)
09DC  003B        ax = GetNextTile()
09E3  0042        Push(ax)
09E4  0043        Move(stk[0], stk[1], stk[2])
09EE  004D        RETURN

MANTICOR_18:
09F0  0000        BEGIN
09F3  0003        AddEncounter(0x23, 0x01)
0A05  0015        AddEncounter(0x24, 0x02)
0A17  0027        AddEncounter(0x24, 0x03)
0A29  0039        AddEncounter(0x23, 0x04)
0A3B  004B        AddEncounter(0x19, 0x05)
0A4D  005D        AddEncounter(0x19, 0x06)
0A5F  006F        RETURN

BASILISK_19:
0A61  0000        BEGIN
0A64  0003        AddEncounter(0x11, 0x01)
0A76  0015        AddEncounter(0x11, 0x02)
0A88  0027        AddEncounter(0x12, 0x03)
0A9A  0039        AddEncounter(0x12, 0x04)
0AAC  004B        AddEncounter(0x13, 0x05)
0ABE  005D        AddEncounter(0x13, 0x06)
0AD0  006F        RETURN

KINGGOBL_1A:
0AD2  0000        BEGIN
0AD5  0003        AddEncounter(0x04, 0x01)
0AE7  0015        AddEncounter(0x04, 0x02)
0AF9  0027        AddEncounter(0x04, 0x03)
0B0B  0039        AddEncounter(0x04, 0x04)
0B1D  004B        AddEncounter(0x06, 0x05)
0B2F  005D        AddEncounter(0x06, 0x06)
0B41  006F        RETURN

DRAGON_1B:
0B43  0000        BEGIN
0B46  0003        AddEncounter(0x06, 0x01)
0B58  0015        AddEncounter(0x06, 0x02)
0B6A  0027        AddEncounter(0x19, 0x03)
0B7C  0039        AddEncounter(0x19, 0x04)
0B8E  004B        AddEncounter(0x1B, 0x05)
0BA0  005D        AddEncounter(0x13, 0x06)
0BB2  006F        ax = HasItem(0xF4)
0BC0  007D        If (result.equal) jump to 00A1
0BC2  007F        AddTreasure(0x07D0, 0x00, 0x00, 0x00, 0xC6, 0xB7)
0BE2  009F        Jump to 00D0
0BE4  00A1        ShowMessage(0x1335) = A glowing red gem casts a beam from under the dragon's lair.
0BF1  00AE        AddTreasure(0x2328, 0x00, 0x14, 0xD0, 0xD0, 0xF4)
0C13  00D0        RETURN

KEYCLUEA_1C:
0C15  0000        BEGIN
0C18  0003        ShowMessage(0x1372) = A collection of runes reveals a clue -- 
0C25  0010        ShowRunes(0x139B) = The Keyhole Lava lies at the center of the Kingdom.
0C32  001D        ShowRunes(0x13CF) = Activate the switches to the west one at a time to move a party from south to north.
0C3F  002A        RETURN

KEYCLUEB_1D:
0C41  0000        BEGIN
0C44  0003        ShowMessage(0x1424) = A faint message written in dust -- 
0C51  0010        ShowRunes(0x1448) = The Keyhole Lava lies at the center of the Kingdom.
0C5E  001D        ShowRunes(0x147C) = Repeat the sequence that moved a party south to north to move  a party north to south.
0C6B  002A        RETURN

KEYCLUEC_1E:
0C6D  0000        BEGIN
0C70  0003        ShowMessage(0x14D3) = A note is found behind a rock -- 
0C7D  0010        ShowRunes(0x14F5) = The one who switches a party across the Keyhole Lava may join the party at the south end of a second crossing.
0C8A  001D        RETURN

GATEA_1F:
0C8C  0000        BEGIN
0C8F  0003        ShowMessage(0x1564) = Distant bellows from gruesome monsters echo through the cavern.
0C9C  0010        GoMap(0x02, 0x30, 0x02, 0x38)
0CB7  002B        RETURN

CYCLKEY_20:
0CB9  0000        BEGIN
0CBC  0003        ax = HasItem(0xD6)
0CCA  0011        If (result.equal) jump to 0022
0CCC  0013        ShowMessage(0x15A4) = The room has been emptied.
0CD9  0020        Jump to 003B
0CDB  0022        GiveItem(0xD6)
0CE7  002E        ShowMessage(0x15BF) = You find a key to the Cyclop's Mine on the floor.
0CF4  003B        RETURN

SECDOORC_21:
0CF6  0000        BEGIN
0CF9  0003        ax = GetRace()
0D00  000A        compare(ax, 0x0004)
0D03  000D        If (result.equal) jump to 0012
0D05  000F        Jump to 00C8
0D08  0012        ax = UsedSkill(0x0D) // returns 0 if did not use, compares to 2nd op if did use
0D14  001E        compare(ax, 0x0008)
0D17  0021        If (result.above or result.equal) jump to 005D
0D19  0023        ax = UsedSpell(0x17) // returns 0 if did not use on map, level if used
0D25  002F        RefreshCompareFlags(ax)
0D27  0031        If (result.notequal) jump to 005D
0D29  0033        ax = UsedItem(0xA2, 0xA2)
0D3C  0046        If (result.notequal) jump to 005D
0D3E  0048        ax = UsedItem(0xBE, 0xBE)
0D51  005B        If (result.equal) jump to 00A8
0D53  005D        Push(01)
0D57  0061        ax = SetExitability(ax) // ax is usually 0 following equality check
0D5E  0068        Push(ax)
0D5F  0069        ax = GetNextTile()
0D66  0070        Push(ax)
0D67  0071        Move(stk[0], stk[1], stk[2])
0D71  007B        ax = SetExitability(ax) // ax is usually 0 following equality check
0D78  0082        Push(ax)
0D79  0083        ax = GetNextTile()
0D80  008A        Push(ax)
0D81  008B        Push(01)
0D85  008F        SetUnblocked()
0D8F  0099        ShowMessage(0x15F1) = You found a hidden door!
0D9C  00A6        Jump to 00C5
0D9E  00A8        Push(00)
0DA1  00AB        ax = SetExitability(ax) // ax is usually 0 following equality check
0DA8  00B2        Push(ax)
0DA9  00B3        ax = GetNextTile()
0DB0  00BA        Push(ax)
0DB1  00BB        Move(stk[0], stk[1], stk[2])
0DBB  00C5        Jump to 017B
0DBE  00C8        ax = UsedSkill(0x0D) // returns 0 if did not use, compares to 2nd op if did use
0DCA  00D4        compare(ax, 0x000B)
0DCD  00D7        If (result.above or result.equal) jump to 0113
0DCF  00D9        ax = UsedSpell(0x17) // returns 0 if did not use on map, level if used
0DDB  00E5        RefreshCompareFlags(ax)
0DDD  00E7        If (result.notequal) jump to 0113
0DDF  00E9        ax = UsedItem(0xA2, 0xA2)
0DF2  00FC        If (result.notequal) jump to 0113
0DF4  00FE        ax = UsedItem(0xBE, 0xBE)
0E07  0111        If (result.equal) jump to 015E
0E09  0113        Push(01)
0E0D  0117        ax = SetExitability(ax) // ax is usually 0 following equality check
0E14  011E        Push(ax)
0E15  011F        ax = GetNextTile()
0E1C  0126        Push(ax)
0E1D  0127        Move(stk[0], stk[1], stk[2])
0E27  0131        ax = SetExitability(ax) // ax is usually 0 following equality check
0E2E  0138        Push(ax)
0E2F  0139        ax = GetNextTile()
0E36  0140        Push(ax)
0E37  0141        Push(01)
0E3B  0145        SetUnblocked()
0E45  014F        ShowMessage(0x160A) = You found a hidden door!
0E52  015C        Jump to 017B
0E54  015E        Push(00)
0E57  0161        ax = SetExitability(ax) // ax is usually 0 following equality check
0E5E  0168        Push(ax)
0E5F  0169        ax = GetNextTile()
0E66  0170        Push(ax)
0E67  0171        Move(stk[0], stk[1], stk[2])
0E71  017B        RETURN

EMPTY:
0E73  0000        <Empty Function>

EMPTY:
0E78  0000        <Empty Function>

EMPTY:
0E7D  0000        <Empty Function>

FNTNATTR_25:
0E82  0000        BEGIN
0E85  0003        ax = CheckState(0x02, 0x56)
0E96  0014        RefreshCompareFlags(ax)
0E98  0016        If (result.notequal) jump to 006C
0E9A  0018        SetState(0x02, 0x56, 0x01)
0EAF  002D        ShowPortrait(0x0042)
0EBC  003A        ModifyAttribute(0x00, 0x0002)
0ECD  004B        ModifyAttribute(0x01, 0x0001)
0EDF  005D        ShowMessage(0x1623) = You drink from the Fountain of Attributes and feel your powers greatly increase.
0EEC  006A        Jump to 0086
0EEE  006C        ShowPortrait(0x0042)
0EFB  0079        ShowMessage(0x1674) = The waters of the Fountain of Attributes quench your thirst but do not otherwise affect you.
0F08  0086        RETURN

NSTYGIAN_26:
0F0A  0000        BEGIN
0F0D  0003        AddEncounter(0x1E, 0x01)
0F1F  0015        AddEncounter(0x1E, 0x02)
0F31  0027        AddEncounter(0x1E, 0x03)
0F43  0039        AddEncounter(0x1E, 0x04)
0F55  004B        AddEncounter(0x1E, 0x05)
0F67  005D        AddEncounter(0x1E, 0x06)
0F79  006F        RETURN

MAINGIAN_27:
0F7B  0000        BEGIN
0F7E  0003        AddEncounter(0x1F, 0x01)
0F90  0015        AddEncounter(0x1F, 0x02)
0FA2  0027        AddEncounter(0x1E, 0x03)
0FB4  0039        AddEncounter(0x1E, 0x04)
0FC6  004B        AddEncounter(0x20, 0x05)
0FD8  005D        AddEncounter(0x1F, 0x06)
0FEA  006F        RETURN

EMPTY:
0FEC  0000        <Empty Function>

EMPTY:
0FF1  0000        <Empty Function>

EMPTY:
0FF6  0000        <Empty Function>

EMPTY:
0FFB  0000        <Empty Function>

TOELVES_2C:
1000  0000        BEGIN
1003  0003        ShowMessage(0x16D1) = A passageway leads up to the elfin lands.
1010  0010        GoMap(0x01, 0x7F, 0x01, 0x37)
102B  002B        RETURN

EMPTY:
102D  0000        <Empty Function>

EMPTY:
1032  0000        <Empty Function>

EMPTY:
1037  0000        <Empty Function>

EMPTY:
103C  0000        <Empty Function>

EMPTY:
1041  0000        <Empty Function>

EMPTY:
1046  0000        <Empty Function>

EMPTY:
104B  0000        <Empty Function>

EMPTY:
1050  0000        <Empty Function>

EMPTY:
1055  0000        <Empty Function>

EMPTY:
105A  0000        <Empty Function>

EMPTY:
105F  0000        <Empty Function>

EMPTY:
1064  0000        <Empty Function>

EMPTY:
1069  0000        <Empty Function>

EMPTY:
106E  0000        <Empty Function>

EMPTY:
1073  0000        <Empty Function>

EMPTY:
1078  0000        <Empty Function>

EMPTY:
107D  0000        <Empty Function>

EMPTY:
1082  0000        <Empty Function>

EMPTY:
1087  0000        <Empty Function>

EMPTY:
108C  0000        <Empty Function>

EMPTY:
1091  0000        <Empty Function>

EMPTY:
1096  0000        <Empty Function>

EMPTY:
109B  0000        <Empty Function>

EMPTY:
10A0  0000        <Empty Function>

EMPTY:
10A5  0000        <Empty Function>

EMPTY:
10AA  0000        <Empty Function>

EMPTY:
10AF  0000        <Empty Function>

EMPTY:
10B4  0000        <Empty Function>

EMPTY:
10B9  0000        <Empty Function>

EMPTY:
10BE  0000        <Empty Function>

EMPTY:
10C3  0000        <Empty Function>

EMPTY:
10C8  0000        <Empty Function>

EMPTY:
10CD  0000        <Empty Function>

EMPTY:
10D2  0000        <Empty Function>

EMPTY:
10D7  0000        <Empty Function>

EMPTY:
10DC  0000        <Empty Function>

EMPTY:
10E1  0000        <Empty Function>

EMPTY:
10E6  0000        <Empty Function>

EMPTY:
10EB  0000        <Empty Function>

EMPTY:
10F0  0000        <Empty Function>

EMPTY:
10F5  0000        <Empty Function>

EMPTY:
10FA  0000        <Empty Function>

EMPTY:
10FF  0000        <Empty Function>

EMPTY:
1104  0000        <Empty Function>

EMPTY:
1109  0000        <Empty Function>

EMPTY:
110E  0000        <Empty Function>

EMPTY:
1113  0000        <Empty Function>

EMPTY:
1118  0000        <Empty Function>

EMPTY:
111D  0000        <Empty Function>

EMPTY:
1122  0000        <Empty Function>

EMPTY:
1127  0000        <Empty Function>

EMPTY:
112C  0000        <Empty Function>

EMPTY:
1131  0000        <Empty Function>

EMPTY:
1136  0000        <Empty Function>

EMPTY:
113B  0000        <Empty Function>

EMPTY:
1140  0000        <Empty Function>

EMPTY:
1145  0000        <Empty Function>

EMPTY:
114A  0000        <Empty Function>

EMPTY:
114F  0000        <Empty Function>

EMPTY:
1154  0000        <Empty Function>

EMPTY:
1159  0000        <Empty Function>

EMPTY:
115E  0000        <Empty Function>

EMPTY:
1163  0000        <Empty Function>

EMPTY:
1168  0000        <Empty Function>

EMPTY:
116D  0000        <Empty Function>

EMPTY:
1172  0000        <Empty Function>

EMPTY:
1177  0000        <Empty Function>

EMPTY:
117C  0000        <Empty Function>

EMPTY:
1181  0000        <Empty Function>

EMPTY:
1186  0000        <Empty Function>

EMPTY:
118B  0000        <Empty Function>

EMPTY:
1190  0000        <Empty Function>

EMPTY:
1195  0000        <Empty Function>

EMPTY:
119A  0000        <Empty Function>

EMPTY:
119F  0000        <Empty Function>

EMPTY:
11A4  0000        <Empty Function>

EMPTY:
11A9  0000        <Empty Function>

EMPTY:
11AE  0000        <Empty Function>

EMPTY:
11B3  0000        <Empty Function>

EMPTY:
11B8  0000        <Empty Function>

EMPTY:
11BD  0000        <Empty Function>

EMPTY:
11C2  0000        <Empty Function>

EMPTY:
11C7  0000        <Empty Function>

EMPTY:
11CC  0000        <Empty Function>

EMPTY:
11D1  0000        <Empty Function>

EMPTY:
11D6  0000        <Empty Function>

EMPTY:
11DB  0000        <Empty Function>

EMPTY:
11E0  0000        <Empty Function>

EMPTY:
11E5  0000        <Empty Function>

EMPTY:
11EA  0000        <Empty Function>

EMPTY:
11EF  0000        <Empty Function>

EMPTY:
11F4  0000        <Empty Function>

EMPTY:
11F9  0000        <Empty Function>

EMPTY:
11FE  0000        <Empty Function>

EMPTY:
1203  0000        <Empty Function>

EMPTY:
1208  0000        <Empty Function>

EMPTY:
120D  0000        <Empty Function>

EMPTY:
1212  0000        <Empty Function>

EMPTY:
1217  0000        <Empty Function>

EMPTY:
121C  0000        <Empty Function>

EMPTY:
1221  0000        <Empty Function>

EMPTY:
1226  0000        <Empty Function>

EMPTY:
122B  0000        <Empty Function>

EMPTY:
1230  0000        <Empty Function>

EMPTY:
1235  0000        <Empty Function>

EMPTY:
123A  0000        <Empty Function>

EMPTY:
123F  0000        <Empty Function>

EMPTY:
1244  0000        <Empty Function>

EMPTY:
1249  0000        <Empty Function>

EMPTY:
124E  0000        <Empty Function>

EMPTY:
1253  0000        <Empty Function>

EMPTY:
1258  0000        <Empty Function>

EMPTY:
125D  0000        <Empty Function>

EMPTY:
1262  0000        <Empty Function>

EMPTY:
1267  0000        <Empty Function>

EMPTY:
126C  0000        <Empty Function>

EMPTY:
1271  0000        <Empty Function>

EMPTY:
1276  0000        <Empty Function>

EMPTY:
127B  0000        <Empty Function>

EMPTY:
1280  0000        <Empty Function>

EMPTY:
1285  0000        <Empty Function>

EMPTY:
128A  0000        <Empty Function>

EMPTY:
128F  0000        <Empty Function>

EMPTY:
1294  0000        <Empty Function>

EMPTY:
1299  0000        <Empty Function>

EMPTY:
129E  0000        <Empty Function>

EMPTY:
12A3  0000        <Empty Function>

EMPTY:
12A8  0000        <Empty Function>

EMPTY:
12AD  0000        <Empty Function>

EMPTY:
12B2  0000        <Empty Function>

EMPTY:
12B7  0000        <Empty Function>

EMPTY:
12BC  0000        <Empty Function>

EMPTY:
12C1  0000        <Empty Function>

EMPTY:
12C6  0000        <Empty Function>

EMPTY:
12CB  0000        <Empty Function>

EMPTY:
12D0  0000        <Empty Function>

EMPTY:
12D5  0000        <Empty Function>

EMPTY:
12DA  0000        <Empty Function>

EMPTY:
12DF  0000        <Empty Function>

EMPTY:
12E4  0000        <Empty Function>

EMPTY:
12E9  0000        <Empty Function>

EMPTY:
12EE  0000        <Empty Function>

EMPTY:
12F3  0000        <Empty Function>

EMPTY:
12F8  0000        <Empty Function>

EMPTY:
12FD  0000        <Empty Function>

EMPTY:
1302  0000        <Empty Function>

EMPTY:
1307  0000        <Empty Function>

EMPTY:
130C  0000        <Empty Function>

EMPTY:
1311  0000        <Empty Function>

EMPTY:
1316  0000        <Empty Function>

EMPTY:
131B  0000        <Empty Function>

EMPTY:
1320  0000        <Empty Function>

EMPTY:
1325  0000        <Empty Function>

EMPTY:
132A  0000        <Empty Function>

EMPTY:
132F  0000        <Empty Function>

EMPTY:
1334  0000        <Empty Function>

EMPTY:
1339  0000        <Empty Function>

EMPTY:
133E  0000        <Empty Function>

EMPTY:
1343  0000        <Empty Function>

EMPTY:
1348  0000        <Empty Function>

EMPTY:
134D  0000        <Empty Function>

EMPTY:
1352  0000        <Empty Function>

EMPTY:
1357  0000        <Empty Function>

EMPTY:
135C  0000        <Empty Function>

EMPTY:
1361  0000        <Empty Function>

EMPTY:
1366  0000        <Empty Function>

EMPTY:
136B  0000        <Empty Function>

EMPTY:
1370  0000        <Empty Function>

EMPTY:
1375  0000        <Empty Function>

EMPTY:
137A  0000        <Empty Function>

EMPTY:
137F  0000        <Empty Function>

EMPTY:
1384  0000        <Empty Function>

EMPTY:
1389  0000        <Empty Function>

EMPTY:
138E  0000        <Empty Function>

EMPTY:
1393  0000        <Empty Function>

EMPTY:
1398  0000        <Empty Function>

EMPTY:
139D  0000        <Empty Function>

EMPTY:
13A2  0000        <Empty Function>

EMPTY:
13A7  0000        <Empty Function>

EMPTY:
13AC  0000        <Empty Function>

EMPTY:
13B1  0000        <Empty Function>

EMPTY:
13B6  0000        <Empty Function>

EMPTY:
13BB  0000        <Empty Function>

EMPTY:
13C0  0000        <Empty Function>

EMPTY:
13C5  0000        <Empty Function>

EMPTY:
13CA  0000        <Empty Function>

EMPTY:
13CF  0000        <Empty Function>

EMPTY:
13D4  0000        <Empty Function>

EMPTY:
13D9  0000        <Empty Function>

EMPTY:
13DE  0000        <Empty Function>

EMPTY:
13E3  0000        <Empty Function>

EMPTY:
13E8  0000        <Empty Function>

EMPTY:
13ED  0000        <Empty Function>

EMPTY:
13F2  0000        <Empty Function>

EMPTY:
13F7  0000        <Empty Function>

EMPTY:
13FC  0000        <Empty Function>

EMPTY:
1401  0000        <Empty Function>

EMPTY:
1406  0000        <Empty Function>

EMPTY:
140B  0000        <Empty Function>

EMPTY:
1410  0000        <Empty Function>

EMPTY:
1415  0000        <Empty Function>

EMPTY:
141A  0000        <Empty Function>

EMPTY:
141F  0000        <Empty Function>

EMPTY:
1424  0000        <Empty Function>

EMPTY:
1429  0000        <Empty Function>

EMPTY:
142E  0000        <Empty Function>

EMPTY:
1433  0000        <Empty Function>

EMPTY:
1438  0000        <Empty Function>

EMPTY:
143D  0000        <Empty Function>

EMPTY:
1442  0000        <Empty Function>

EMPTY:
1447  0000        <Empty Function>

STRINGS:
03FC: The River of Eternity taps your life energy.
0429: You have died.
0438: Only the bravest adventurers explore the life-devouring River of Eternity for hidden passages.
0497: A great dwarven door appears in the wall.
04C1: Your step into lava is fatal.
04DF: You locate a hidden door!
04F9: A ledge can be seen across the lava pit.
0522: A platform appears beneath your feet..
0549: You step into a lava pit and die!
056B: A platform appears beneath your feet..
0592: You step into a lava pit and die!
05B4: A platform appears beneath your feet..
05DB: You step into a lava pit and die!
05FD: A platform appears beneath your feet..
0624: You step into a lava pit and die!
0646: The wall bursts with color!
0662: In the distance you hear a platform moving.
068E: The wall bursts with color!
06AA: In the distance you hear a platform moving.
06D6: The wall bursts with color!
06F2: In the distance you hear a platform moving.
071E: The wall bursts with color!
073A: In the distance you hear a platform moving.
0766: Perhaps there is a way for you to join your party.
0799: You enter a magnificently ornamented room, bedecked with jewels and the finely crafted metalworks of dwarf craftsmen.
080F: In a small chair in the center of this royal treasure sits the Dwarf King.
085A: The Dwarf King nods.
086F: 'Welcome strangers! 
0884: I have a quest for you, if you are brave enough!
08B5: Beyond the keyhole lava lies a gem of great value, stolen by a fiercesome Dragon.
0907: Keep the gem if you like, as our token of friendship. We ask only that you destroy this vile creature who blackmails us in return for peace.'
0995: The dwarf takes the Flex Metal and smiles broadly. 'No greater pleasure can a dwarf blacksmith have than to test the powers of a new metal.'
0A22: After a few hours working the metal, she holds up a brilliant blue sword.
0A6C: 'There!  My finest weapon, made from your Flex Metal.  I dub it The Wind Sword!  May it destroy your enemies at first blow!'
0AE9: The dwarf blacksmith cuts down the furnace, then turns to greet you. 
0B2F: 'I am a wizard swordmaker, ready to make the finest weapons from your valuable metals.  What may I build for you?'
0BA2: The dwarf blacksmith pauses briefly from her work.
0BD5: 'I see you have returned!'  An expression of worry crosses her face.  'Oh, I hope The Wind Sword has given you no trouble.'
0C51: She then notices the great blue sword.  'Ah, it's in fine shape!
0C92: If you find other types of metals, I will gladly make you another weapon!'
0CDD: The room you enter contains furnaces, hammers and anvils.
0D17: In a corner is a dwarf blacksmith, hard at work on her latest golden creation.
0D66: A mean, twisted smile appears across the face of the dwarf blacksmith.
0DAD: 'You have killed the cyclop!  My gold caves are won!
0DE2: Hmmph.  It is my debt to repay you.  And I shall!'
0E15: A few hours pass as the blacksmith weaves a magnificent treasure from golden threads.  Then she appears again.
0E84: 'Here.  My proudest work!  A golden boat that can ride the rainbows.  May you find treasure wherever you go.'
0EF2: Then she scoots away.
0F08: The old dwarf blacksmith at first does not hear you approach. Then she senses your presence and wheels on you. 
0F78: 'A mean trick you play on a wise one!  No matter.  No doubt you're looking for another golden trinket of mine.
0FE7: Well, I will not give you any of my creations.  Never!
101E: Unless, hmmm, Unless you are able to rid my gold caves of a horrible Cyclop! He fancies himself King of the Cyclops.'
1094: The dwarf miner greets you with youthful enthusiasm.
10C9: You show signs of entering my caves!  I thank-you for clearing my mines and repay you with treasure.
112E: The dwarf miner smiles as you approach.
1156: 'Have you found my cave yet?  It is by the water's edge.'
1190: An apprentice dwarf miner notices your arrival.
11C0: 'Adventurers!  At last!  I've heard tales from the elders about your deeds.  I, too, have a cave, well hidden beyond the edges of the waters.
124E: Monsters have forced me from my home. I am not strong enough to fight them.
129A: Perhaps, if I give you the key to my small cave, you will do me a favor. Then I may repay you well some day.'
1308: All the east side platforms appear to be up.
1335: A glowing red gem casts a beam from under the dragon's lair.
1372: A collection of runes reveals a clue -- 
139B: The Keyhole Lava lies at the center of the Kingdom.
13CF: Activate the switches to the west one at a time to move a party from south to north.
1424: A faint message written in dust -- 
1448: The Keyhole Lava lies at the center of the Kingdom.
147C: Repeat the sequence that moved a party south to north to move  a party north to south.
14D3: A note is found behind a rock -- 
14F5: The one who switches a party across the Keyhole Lava may join the party at the south end of a second crossing.
1564: Distant bellows from gruesome monsters echo through the cavern.
15A4: The room has been emptied.
15BF: You find a key to the Cyclop's Mine on the floor.
15F1: You found a hidden door!
160A: You found a hidden door!
1623: You drink from the Fountain of Attributes and feel your powers greatly increase.
1674: The waters of the Fountain of Attributes quench your thirst but do not otherwise affect you.
16D1: A passageway leads up to the elfin lands.
