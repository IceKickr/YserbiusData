Functn01: "STRSTELE"
0000                          BEGIN
0003                          GoMap(03, E0, 03, 03) [es:bx+0xbc]
001E                          RETURN

Functn02: "STRSTELE"
0000                          BEGIN
0003                          GoMap(02, 8D, 01, 05) [es:bx+0xbc]
001E                          RETURN

Functn03: "PLATFMUP"
0000                          BEGIN
0003                          GoMap(03, B4, 06, 02) [es:bx+0xbc]
001E                          RETURN

Functn04: "TELPORTA"
0000                          BEGIN
0003                          GoMap(01, 68, 03, 01) [es:bx+0xbc]
001E                          RETURN

Functn05: "TELEPORT"
0000                          BEGIN
0003                          GoMap(02, 24, 03, 03) [es:bx+0xbc]
001E                          RETURN

Functn06: "TELPORTC"
0000                          BEGIN
0003                          GoMap(03, AF, 02, 05) [es:bx+0xbc]
001E                          RETURN

Functn07: "TRAPDORA"
0000                          BEGIN
0003 B8 0D 00                 mov ax, 0xd
0006 50                       push ax
0007 C4 5E 06                 les bx, [bp+0x6]
000A 26 FF 5F 58              call far word [es:bx+0x58]
000E 59                       pop cx
000F 3D 0A 00                 cmp ax, 0xa
0012 73 4E                    jae 0x62
0014 B8 17 00                 mov ax, 0x17
0017 50                       push ax
0018 C4 5E 06                 les bx, [bp+0x6]
001B 26 FF 5F 64              call far word [es:bx+0x64]
001F 59                       pop cx
0020 0B C0                    or ax, ax
0022 75 3E                    jnz 0x62
0024 B8 A2 00                 mov ax, 0xa2
0027 50                       push ax
0028 B8 A2 00                 mov ax, 0xa2
002B 50                       push ax
002C C4 5E 06                 les bx, [bp+0x6]
002F 26 FF 5F 54              call far word [es:bx+0x54]
0033 59                       pop cx
0034 59                       pop cx
0035 0B C0                    or ax, ax
0037 75 29                    jnz 0x62
0039 B8 BE 00                 mov ax, 0xbe
003C 50                       push ax
003D B8 BE 00                 mov ax, 0xbe
0040 50                       push ax
0041 C4 5E 06                 les bx, [bp+0x6]
0044 26 FF 5F 54              call far word [es:bx+0x54]
0048 59                       pop cx
0049 59                       pop cx
004A 0B C0                    or ax, ax
004C 75 14                    jnz 0x62
004E                          ax = CheckState2(00, 01) ? 1 : 0 [es:bx+0x8]
0060 74 23                    jz 0x85
0062                          ShowMessage(03FC) [es:bx+0xf8] = You found a trapdoor.
006F                          SetState(00, 01, 01) [es:bx]
0083 EB 27                    jmp 0xac
0085                          GoMap(00, 89, 02, 05) [es:bx+0xbc]
009F                          ShowMessage(0412) [es:bx+0xf8] = You fall through a trapdoor.
00AC                          RETURN

Functn08: "TRAPDORB"
0000                          BEGIN
0003 B8 0D 00                 mov ax, 0xd
0006 50                       push ax
0007 C4 5E 06                 les bx, [bp+0x6]
000A 26 FF 5F 58              call far word [es:bx+0x58]
000E 59                       pop cx
000F 3D 0A 00                 cmp ax, 0xa
0012 73 4E                    jae 0x62
0014 B8 17 00                 mov ax, 0x17
0017 50                       push ax
0018 C4 5E 06                 les bx, [bp+0x6]
001B 26 FF 5F 64              call far word [es:bx+0x64]
001F 59                       pop cx
0020 0B C0                    or ax, ax
0022 75 3E                    jnz 0x62
0024 B8 A2 00                 mov ax, 0xa2
0027 50                       push ax
0028 B8 A2 00                 mov ax, 0xa2
002B 50                       push ax
002C C4 5E 06                 les bx, [bp+0x6]
002F 26 FF 5F 54              call far word [es:bx+0x54]
0033 59                       pop cx
0034 59                       pop cx
0035 0B C0                    or ax, ax
0037 75 29                    jnz 0x62
0039 B8 BE 00                 mov ax, 0xbe
003C 50                       push ax
003D B8 BE 00                 mov ax, 0xbe
0040 50                       push ax
0041 C4 5E 06                 les bx, [bp+0x6]
0044 26 FF 5F 54              call far word [es:bx+0x54]
0048 59                       pop cx
0049 59                       pop cx
004A 0B C0                    or ax, ax
004C 75 14                    jnz 0x62
004E                          ax = CheckState2(00, 01) ? 1 : 0 [es:bx+0x8]
0060 74 23                    jz 0x85
0062                          ShowMessage(042F) [es:bx+0xf8] = You spot a trapdoor.
006F                          SetState(00, 01, 01) [es:bx]
0083 EB 28                    jmp 0xad
0085                          GoMap(01, 8C, 02, 05) [es:bx+0xbc]
00A0                          ShowMessage(0444) [es:bx+0xf8] = You fall through a trapdoor.
00AD                          RETURN

Functn09: "TRAPDORC"
0000                          BEGIN
0003 B8 0D 00                 mov ax, 0xd
0006 50                       push ax
0007 C4 5E 06                 les bx, [bp+0x6]
000A 26 FF 5F 58              call far word [es:bx+0x58]
000E 59                       pop cx
000F 3D 0A 00                 cmp ax, 0xa
0012 73 4E                    jae 0x62
0014 B8 17 00                 mov ax, 0x17
0017 50                       push ax
0018 C4 5E 06                 les bx, [bp+0x6]
001B 26 FF 5F 64              call far word [es:bx+0x64]
001F 59                       pop cx
0020 0B C0                    or ax, ax
0022 75 3E                    jnz 0x62
0024 B8 A2 00                 mov ax, 0xa2
0027 50                       push ax
0028 B8 A2 00                 mov ax, 0xa2
002B 50                       push ax
002C C4 5E 06                 les bx, [bp+0x6]
002F 26 FF 5F 54              call far word [es:bx+0x54]
0033 59                       pop cx
0034 59                       pop cx
0035 0B C0                    or ax, ax
0037 75 29                    jnz 0x62
0039 B8 BE 00                 mov ax, 0xbe
003C 50                       push ax
003D B8 BE 00                 mov ax, 0xbe
0040 50                       push ax
0041 C4 5E 06                 les bx, [bp+0x6]
0044 26 FF 5F 54              call far word [es:bx+0x54]
0048 59                       pop cx
0049 59                       pop cx
004A 0B C0                    or ax, ax
004C 75 14                    jnz 0x62
004E                          ax = CheckState2(00, 01) ? 1 : 0 [es:bx+0x8]
0060 74 23                    jz 0x85
0062                          ShowMessage(0461) [es:bx+0xf8] = You detect a trapdoor.
006F                          SetState(00, 01, 01) [es:bx]
0083 EB 28                    jmp 0xad
0085                          GoMap(03, 91, 02, 05) [es:bx+0xbc]
00A0                          ShowMessage(0478) [es:bx+0xf8] = You fall through a trapdoor.
00AD                          RETURN

Functn0A: "TRAPDORD"
0000                          BEGIN
0003 B8 0D 00                 mov ax, 0xd
0006 50                       push ax
0007 C4 5E 06                 les bx, [bp+0x6]
000A 26 FF 5F 58              call far word [es:bx+0x58]
000E 59                       pop cx
000F 3D 0A 00                 cmp ax, 0xa
0012 73 4E                    jae 0x62
0014 B8 17 00                 mov ax, 0x17
0017 50                       push ax
0018 C4 5E 06                 les bx, [bp+0x6]
001B 26 FF 5F 64              call far word [es:bx+0x64]
001F 59                       pop cx
0020 0B C0                    or ax, ax
0022 75 3E                    jnz 0x62
0024 B8 A2 00                 mov ax, 0xa2
0027 50                       push ax
0028 B8 A2 00                 mov ax, 0xa2
002B 50                       push ax
002C C4 5E 06                 les bx, [bp+0x6]
002F 26 FF 5F 54              call far word [es:bx+0x54]
0033 59                       pop cx
0034 59                       pop cx
0035 0B C0                    or ax, ax
0037 75 29                    jnz 0x62
0039 B8 BE 00                 mov ax, 0xbe
003C 50                       push ax
003D B8 BE 00                 mov ax, 0xbe
0040 50                       push ax
0041 C4 5E 06                 les bx, [bp+0x6]
0044 26 FF 5F 54              call far word [es:bx+0x54]
0048 59                       pop cx
0049 59                       pop cx
004A 0B C0                    or ax, ax
004C 75 14                    jnz 0x62
004E                          ax = CheckState2(00, 01) ? 1 : 0 [es:bx+0x8]
0060 74 23                    jz 0x85
0062                          ShowMessage(0495) [es:bx+0xf8] = You escape a trapdoor.
006F                          SetState(00, 01, 01) [es:bx]
0083 EB 28                    jmp 0xad
0085                          GoMap(03, 9D, 02, 05) [es:bx+0xbc]
00A0                          ShowMessage(04AC) [es:bx+0xf8] = You fall through a trapdoor.
00AD                          RETURN

Functn0B: "TRAPDORE"
0000                          BEGIN
0003 B8 0D 00                 mov ax, 0xd
0006 50                       push ax
0007 C4 5E 06                 les bx, [bp+0x6]
000A 26 FF 5F 58              call far word [es:bx+0x58]
000E 59                       pop cx
000F 3D 0A 00                 cmp ax, 0xa
0012 73 4E                    jae 0x62
0014 B8 17 00                 mov ax, 0x17
0017 50                       push ax
0018 C4 5E 06                 les bx, [bp+0x6]
001B 26 FF 5F 64              call far word [es:bx+0x64]
001F 59                       pop cx
0020 0B C0                    or ax, ax
0022 75 3E                    jnz 0x62
0024 B8 A2 00                 mov ax, 0xa2
0027 50                       push ax
0028 B8 A2 00                 mov ax, 0xa2
002B 50                       push ax
002C C4 5E 06                 les bx, [bp+0x6]
002F 26 FF 5F 54              call far word [es:bx+0x54]
0033 59                       pop cx
0034 59                       pop cx
0035 0B C0                    or ax, ax
0037 75 29                    jnz 0x62
0039 B8 BE 00                 mov ax, 0xbe
003C 50                       push ax
003D B8 BE 00                 mov ax, 0xbe
0040 50                       push ax
0041 C4 5E 06                 les bx, [bp+0x6]
0044 26 FF 5F 54              call far word [es:bx+0x54]
0048 59                       pop cx
0049 59                       pop cx
004A 0B C0                    or ax, ax
004C 75 14                    jnz 0x62
004E                          ax = CheckState2(00, 01) ? 1 : 0 [es:bx+0x8]
0060 74 23                    jz 0x85
0062                          ShowMessage(04C9) [es:bx+0xf8] = You notice a trapdoor.
006F                          SetState(00, 01, 01) [es:bx]
0083 EB 28                    jmp 0xad
0085                          GoMap(03, AB, 02, 05) [es:bx+0xbc]
00A0                          ShowMessage(04E0) [es:bx+0xf8] = You fall through a trapdoor.
00AD                          RETURN

Functn0C: "TRAPDORF"
0000                          BEGIN
0003 B8 0D 00                 mov ax, 0xd
0006 50                       push ax
0007 C4 5E 06                 les bx, [bp+0x6]
000A 26 FF 5F 58              call far word [es:bx+0x58]
000E 59                       pop cx
000F 3D 0A 00                 cmp ax, 0xa
0012 73 4E                    jae 0x62
0014 B8 17 00                 mov ax, 0x17
0017 50                       push ax
0018 C4 5E 06                 les bx, [bp+0x6]
001B 26 FF 5F 64              call far word [es:bx+0x64]
001F 59                       pop cx
0020 0B C0                    or ax, ax
0022 75 3E                    jnz 0x62
0024 B8 A2 00                 mov ax, 0xa2
0027 50                       push ax
0028 B8 A2 00                 mov ax, 0xa2
002B 50                       push ax
002C C4 5E 06                 les bx, [bp+0x6]
002F 26 FF 5F 54              call far word [es:bx+0x54]
0033 59                       pop cx
0034 59                       pop cx
0035 0B C0                    or ax, ax
0037 75 29                    jnz 0x62
0039 B8 BE 00                 mov ax, 0xbe
003C 50                       push ax
003D B8 BE 00                 mov ax, 0xbe
0040 50                       push ax
0041 C4 5E 06                 les bx, [bp+0x6]
0044 26 FF 5F 54              call far word [es:bx+0x54]
0048 59                       pop cx
0049 59                       pop cx
004A 0B C0                    or ax, ax
004C 75 14                    jnz 0x62
004E                          ax = CheckState2(00, 01) ? 1 : 0 [es:bx+0x8]
0060 74 23                    jz 0x85
0062                          ShowMessage(04FD) [es:bx+0xf8] = There is a trapdoor in the floor.
006F                          SetState(00, 01, 01) [es:bx]
0083 EB 28                    jmp 0xad
0085                          GoMap(02, BA, 02, 05) [es:bx+0xbc]
00A0                          ShowMessage(051F) [es:bx+0xf8] = You fall through a trapdoor.
00AD                          RETURN

Functn0D: "TRAPDORG"
0000                          BEGIN
0003 B8 0D 00                 mov ax, 0xd
0006 50                       push ax
0007 C4 5E 06                 les bx, [bp+0x6]
000A 26 FF 5F 58              call far word [es:bx+0x58]
000E 59                       pop cx
000F 3D 0A 00                 cmp ax, 0xa
0012 73 4E                    jae 0x62
0014 B8 17 00                 mov ax, 0x17
0017 50                       push ax
0018 C4 5E 06                 les bx, [bp+0x6]
001B 26 FF 5F 64              call far word [es:bx+0x64]
001F 59                       pop cx
0020 0B C0                    or ax, ax
0022 75 3E                    jnz 0x62
0024 B8 A2 00                 mov ax, 0xa2
0027 50                       push ax
0028 B8 A2 00                 mov ax, 0xa2
002B 50                       push ax
002C C4 5E 06                 les bx, [bp+0x6]
002F 26 FF 5F 54              call far word [es:bx+0x54]
0033 59                       pop cx
0034 59                       pop cx
0035 0B C0                    or ax, ax
0037 75 29                    jnz 0x62
0039 B8 BE 00                 mov ax, 0xbe
003C 50                       push ax
003D B8 BE 00                 mov ax, 0xbe
0040 50                       push ax
0041 C4 5E 06                 les bx, [bp+0x6]
0044 26 FF 5F 54              call far word [es:bx+0x54]
0048 59                       pop cx
0049 59                       pop cx
004A 0B C0                    or ax, ax
004C 75 14                    jnz 0x62
004E                          ax = CheckState2(00, 01) ? 1 : 0 [es:bx+0x8]
0060 74 23                    jz 0x85
0062                          ShowMessage(053C) [es:bx+0xf8] = You discover a trapdoor.
006F                          SetState(00, 01, 01) [es:bx]
0083 EB 28                    jmp 0xad
0085                          GoMap(01, BF, 02, 05) [es:bx+0xbc]
00A0                          ShowMessage(0555) [es:bx+0xf8] = You fall through a trapdoor.
00AD                          RETURN

Functn0E: "TRAPDORH"
0000                          BEGIN
0003 B8 0D 00                 mov ax, 0xd
0006 50                       push ax
0007 C4 5E 06                 les bx, [bp+0x6]
000A 26 FF 5F 58              call far word [es:bx+0x58]
000E 59                       pop cx
000F 3D 0A 00                 cmp ax, 0xa
0012 73 4E                    jae 0x62
0014 B8 17 00                 mov ax, 0x17
0017 50                       push ax
0018 C4 5E 06                 les bx, [bp+0x6]
001B 26 FF 5F 64              call far word [es:bx+0x64]
001F 59                       pop cx
0020 0B C0                    or ax, ax
0022 75 3E                    jnz 0x62
0024 B8 A2 00                 mov ax, 0xa2
0027 50                       push ax
0028 B8 A2 00                 mov ax, 0xa2
002B 50                       push ax
002C C4 5E 06                 les bx, [bp+0x6]
002F 26 FF 5F 54              call far word [es:bx+0x54]
0033 59                       pop cx
0034 59                       pop cx
0035 0B C0                    or ax, ax
0037 75 29                    jnz 0x62
0039 B8 BE 00                 mov ax, 0xbe
003C 50                       push ax
003D B8 BE 00                 mov ax, 0xbe
0040 50                       push ax
0041 C4 5E 06                 les bx, [bp+0x6]
0044 26 FF 5F 54              call far word [es:bx+0x54]
0048 59                       pop cx
0049 59                       pop cx
004A 0B C0                    or ax, ax
004C 75 14                    jnz 0x62
004E                          ax = CheckState2(00, 01) ? 1 : 0 [es:bx+0x8]
0060 74 23                    jz 0x85
0062                          ShowMessage(0572) [es:bx+0xf8] = You detect a trapdoor.
006F                          SetState(00, 01, 01) [es:bx]
0083 EB 28                    jmp 0xad
0085                          GoMap(02, CA, 02, 05) [es:bx+0xbc]
00A0                          ShowMessage(0589) [es:bx+0xf8] = You fall through a trapdoor.
00AD                          RETURN

Functn0F: "TRAPDORI"
0000                          BEGIN
0003 B8 0D 00                 mov ax, 0xd
0006 50                       push ax
0007 C4 5E 06                 les bx, [bp+0x6]
000A 26 FF 5F 58              call far word [es:bx+0x58]
000E 59                       pop cx
000F 3D 0A 00                 cmp ax, 0xa
0012 73 4E                    jae 0x62
0014 B8 17 00                 mov ax, 0x17
0017 50                       push ax
0018 C4 5E 06                 les bx, [bp+0x6]
001B 26 FF 5F 64              call far word [es:bx+0x64]
001F 59                       pop cx
0020 0B C0                    or ax, ax
0022 75 3E                    jnz 0x62
0024 B8 A2 00                 mov ax, 0xa2
0027 50                       push ax
0028 B8 A2 00                 mov ax, 0xa2
002B 50                       push ax
002C C4 5E 06                 les bx, [bp+0x6]
002F 26 FF 5F 54              call far word [es:bx+0x54]
0033 59                       pop cx
0034 59                       pop cx
0035 0B C0                    or ax, ax
0037 75 29                    jnz 0x62
0039 B8 BE 00                 mov ax, 0xbe
003C 50                       push ax
003D B8 BE 00                 mov ax, 0xbe
0040 50                       push ax
0041 C4 5E 06                 les bx, [bp+0x6]
0044 26 FF 5F 54              call far word [es:bx+0x54]
0048 59                       pop cx
0049 59                       pop cx
004A 0B C0                    or ax, ax
004C 75 14                    jnz 0x62
004E                          ax = CheckState2(00, 01) ? 1 : 0 [es:bx+0x8]
0060 74 23                    jz 0x85
0062                          ShowMessage(05A6) [es:bx+0xf8] = You spot a trapdoor.
006F                          SetState(00, 01, 01) [es:bx]
0083 EB 28                    jmp 0xad
0085                          GoMap(01, D6, 02, 05) [es:bx+0xbc]
00A0                          ShowMessage(05BB) [es:bx+0xf8] = You fall through a trapdoor.
00AD                          RETURN

Functn10: "TRAPDORJ"
0000                          BEGIN
0003 B8 0D 00                 mov ax, 0xd
0006 50                       push ax
0007 C4 5E 06                 les bx, [bp+0x6]
000A 26 FF 5F 58              call far word [es:bx+0x58]
000E 59                       pop cx
000F 3D 0A 00                 cmp ax, 0xa
0012 73 4E                    jae 0x62
0014 B8 17 00                 mov ax, 0x17
0017 50                       push ax
0018 C4 5E 06                 les bx, [bp+0x6]
001B 26 FF 5F 64              call far word [es:bx+0x64]
001F 59                       pop cx
0020 0B C0                    or ax, ax
0022 75 3E                    jnz 0x62
0024 B8 A2 00                 mov ax, 0xa2
0027 50                       push ax
0028 B8 A2 00                 mov ax, 0xa2
002B 50                       push ax
002C C4 5E 06                 les bx, [bp+0x6]
002F 26 FF 5F 54              call far word [es:bx+0x54]
0033 59                       pop cx
0034 59                       pop cx
0035 0B C0                    or ax, ax
0037 75 29                    jnz 0x62
0039 B8 BE 00                 mov ax, 0xbe
003C 50                       push ax
003D B8 BE 00                 mov ax, 0xbe
0040 50                       push ax
0041 C4 5E 06                 les bx, [bp+0x6]
0044 26 FF 5F 54              call far word [es:bx+0x54]
0048 59                       pop cx
0049 59                       pop cx
004A 0B C0                    or ax, ax
004C 75 14                    jnz 0x62
004E                          ax = CheckState2(00, 01) ? 1 : 0 [es:bx+0x8]
0060 74 23                    jz 0x85
0062                          ShowMessage(05D8) [es:bx+0xf8] = You detect a trapdoor.
006F                          SetState(00, 01, 01) [es:bx]
0083 EB 28                    jmp 0xad
0085                          GoMap(03, D9, 02, 05) [es:bx+0xbc]
00A0                          ShowMessage(05EF) [es:bx+0xf8] = You fall through a trapdoor.
00AD                          RETURN

Functn11: "TRAPDORK"
0000                          BEGIN
0003 B8 0D 00                 mov ax, 0xd
0006 50                       push ax
0007 C4 5E 06                 les bx, [bp+0x6]
000A 26 FF 5F 58              call far word [es:bx+0x58]
000E 59                       pop cx
000F 3D 0A 00                 cmp ax, 0xa
0012 73 4E                    jae 0x62
0014 B8 17 00                 mov ax, 0x17
0017 50                       push ax
0018 C4 5E 06                 les bx, [bp+0x6]
001B 26 FF 5F 64              call far word [es:bx+0x64]
001F 59                       pop cx
0020 0B C0                    or ax, ax
0022 75 3E                    jnz 0x62
0024 B8 A2 00                 mov ax, 0xa2
0027 50                       push ax
0028 B8 A2 00                 mov ax, 0xa2
002B 50                       push ax
002C C4 5E 06                 les bx, [bp+0x6]
002F 26 FF 5F 54              call far word [es:bx+0x54]
0033 59                       pop cx
0034 59                       pop cx
0035 0B C0                    or ax, ax
0037 75 29                    jnz 0x62
0039 B8 BE 00                 mov ax, 0xbe
003C 50                       push ax
003D B8 BE 00                 mov ax, 0xbe
0040 50                       push ax
0041 C4 5E 06                 les bx, [bp+0x6]
0044 26 FF 5F 54              call far word [es:bx+0x54]
0048 59                       pop cx
0049 59                       pop cx
004A 0B C0                    or ax, ax
004C 75 14                    jnz 0x62
004E                          ax = CheckState2(00, 01) ? 1 : 0 [es:bx+0x8]
0060 74 23                    jz 0x85
0062                          ShowMessage(060C) [es:bx+0xf8] = A trapdoor is in this room.
006F                          SetState(00, 01, 01) [es:bx]
0083 EB 28                    jmp 0xad
0085                          GoMap(01, EC, 02, 05) [es:bx+0xbc]
00A0                          ShowMessage(0628) [es:bx+0xf8] = You fall through a trapdoor.
00AD                          RETURN

Functn12: "TRAPDORL"
0000                          BEGIN
0003 B8 0D 00                 mov ax, 0xd
0006 50                       push ax
0007 C4 5E 06                 les bx, [bp+0x6]
000A 26 FF 5F 58              call far word [es:bx+0x58]
000E 59                       pop cx
000F 3D 0A 00                 cmp ax, 0xa
0012 73 4E                    jae 0x62
0014 B8 17 00                 mov ax, 0x17
0017 50                       push ax
0018 C4 5E 06                 les bx, [bp+0x6]
001B 26 FF 5F 64              call far word [es:bx+0x64]
001F 59                       pop cx
0020 0B C0                    or ax, ax
0022 75 3E                    jnz 0x62
0024 B8 A2 00                 mov ax, 0xa2
0027 50                       push ax
0028 B8 A2 00                 mov ax, 0xa2
002B 50                       push ax
002C C4 5E 06                 les bx, [bp+0x6]
002F 26 FF 5F 54              call far word [es:bx+0x54]
0033 59                       pop cx
0034 59                       pop cx
0035 0B C0                    or ax, ax
0037 75 29                    jnz 0x62
0039 B8 BE 00                 mov ax, 0xbe
003C 50                       push ax
003D B8 BE 00                 mov ax, 0xbe
0040 50                       push ax
0041 C4 5E 06                 les bx, [bp+0x6]
0044 26 FF 5F 54              call far word [es:bx+0x54]
0048 59                       pop cx
0049 59                       pop cx
004A 0B C0                    or ax, ax
004C 75 14                    jnz 0x62
004E                          ax = CheckState2(00, 01) ? 1 : 0 [es:bx+0x8]
0060 74 23                    jz 0x85
0062                          ShowMessage(0645) [es:bx+0xf8] = You sidestep a trapdoor.
006F                          SetState(00, 01, 01) [es:bx]
0083 EB 27                    jmp 0xac
0085                          GoMap(00, F4, 02, 05) [es:bx+0xbc]
009F                          ShowMessage(065E) [es:bx+0xf8] = You fall through a trapdoor.
00AC                          RETURN

Functn13: "TRAPDORM"
0000                          BEGIN
0003 B8 0D 00                 mov ax, 0xd
0006 50                       push ax
0007 C4 5E 06                 les bx, [bp+0x6]
000A 26 FF 5F 58              call far word [es:bx+0x58]
000E 59                       pop cx
000F 3D 0A 00                 cmp ax, 0xa
0012 73 4E                    jae 0x62
0014 B8 17 00                 mov ax, 0x17
0017 50                       push ax
0018 C4 5E 06                 les bx, [bp+0x6]
001B 26 FF 5F 64              call far word [es:bx+0x64]
001F 59                       pop cx
0020 0B C0                    or ax, ax
0022 75 3E                    jnz 0x62
0024 B8 A2 00                 mov ax, 0xa2
0027 50                       push ax
0028 B8 A2 00                 mov ax, 0xa2
002B 50                       push ax
002C C4 5E 06                 les bx, [bp+0x6]
002F 26 FF 5F 54              call far word [es:bx+0x54]
0033 59                       pop cx
0034 59                       pop cx
0035 0B C0                    or ax, ax
0037 75 29                    jnz 0x62
0039 B8 BE 00                 mov ax, 0xbe
003C 50                       push ax
003D B8 BE 00                 mov ax, 0xbe
0040 50                       push ax
0041 C4 5E 06                 les bx, [bp+0x6]
0044 26 FF 5F 54              call far word [es:bx+0x54]
0048 59                       pop cx
0049 59                       pop cx
004A 0B C0                    or ax, ax
004C 75 14                    jnz 0x62
004E                          ax = CheckState2(00, 01) ? 1 : 0 [es:bx+0x8]
0060 74 23                    jz 0x85
0062                          ShowMessage(067B) [es:bx+0xf8] = You avoid a trapdoor.
006F                          SetState(00, 01, 01) [es:bx]
0083 EB 28                    jmp 0xad
0085                          GoMap(02, FD, 02, 05) [es:bx+0xbc]
00A0                          ShowMessage(0691) [es:bx+0xf8] = You fall through a trapdoor.
00AD                          RETURN

Functn14: "LKPKDORA"
0000                          BEGIN
0003 B8 C4 00                 mov ax, 0xc4
0006 50                       push ax
0007 B8 C1 00                 mov ax, 0xc1
000A 50                       push ax
000B C4 5E 06                 les bx, [bp+0x6]
000E 26 FF 5F 54              call far word [es:bx+0x54]
0012 59                       pop cx
0013 59                       pop cx
0014 0B C0                    or ax, ax
0016 75 11                    jnz 0x29
0018 B8 0E 00                 mov ax, 0xe
001B 50                       push ax
001C C4 5E 06                 les bx, [bp+0x6]
001F 26 FF 5F 58              call far word [es:bx+0x58]
0023 59                       pop cx
0024 3D 06 00                 cmp ax, 0x6
0027 72 4B                    jb 0x74
0029 B8 01 00                 mov ax, 0x1
002C 50                       push ax
002D C4 5E 06                 les bx, [bp+0x6]
0030 26 FF 5F 24              call far word [es:bx+0x24]
0034 50                       push ax
0035 C4 5E 06                 les bx, [bp+0x6]
0038 26 FF 5F 20              call far word [es:bx+0x20]
003C 50                       push ax
003D C4 5E 06                 les bx, [bp+0x6]
0040 26 FF 5F 2C              call far word [es:bx+0x2c]
0044 83 C4 06                 add sp, 0x6
0047 C4 5E 06                 les bx, [bp+0x6]
004A 26 FF 5F 24              call far word [es:bx+0x24]
004E 50                       push ax
004F C4 5E 06                 les bx, [bp+0x6]
0052 26 FF 5F 20              call far word [es:bx+0x20]
0056 50                       push ax
0057 B8 01 00                 mov ax, 0x1
005A 50                       push ax
005B C4 5E 06                 les bx, [bp+0x6]
005E 26 FF 5F 30              call far word [es:bx+0x30]
0062 83 C4 06                 add sp, 0x6
0065                          ShowMessage(06AE) [es:bx+0xf8] = You soon have the door unlocked.
0072 EB 2A                    jmp 0x9e
0074 33 C0                    xor ax, ax
0076 50                       push ax
0077 C4 5E 06                 les bx, [bp+0x6]
007A 26 FF 5F 24              call far word [es:bx+0x24]
007E 50                       push ax
007F C4 5E 06                 les bx, [bp+0x6]
0082 26 FF 5F 20              call far word [es:bx+0x20]
0086 50                       push ax
0087 C4 5E 06                 les bx, [bp+0x6]
008A 26 FF 5F 2C              call far word [es:bx+0x2c]
008E 83 C4 06                 add sp, 0x6
0091                          ShowMessage(06CF) [es:bx+0xf8] = The door is locked.
009E                          RETURN

Functn15: "LKPKDORB"
0000                          BEGIN
0003 B8 C4 00                 mov ax, 0xc4
0006 50                       push ax
0007 B8 C2 00                 mov ax, 0xc2
000A 50                       push ax
000B C4 5E 06                 les bx, [bp+0x6]
000E 26 FF 5F 54              call far word [es:bx+0x54]
0012 59                       pop cx
0013 59                       pop cx
0014 0B C0                    or ax, ax
0016 75 11                    jnz 0x29
0018 B8 0E 00                 mov ax, 0xe
001B 50                       push ax
001C C4 5E 06                 les bx, [bp+0x6]
001F 26 FF 5F 58              call far word [es:bx+0x58]
0023 59                       pop cx
0024 3D 07 00                 cmp ax, 0x7
0027 72 4B                    jb 0x74
0029 B8 01 00                 mov ax, 0x1
002C 50                       push ax
002D C4 5E 06                 les bx, [bp+0x6]
0030 26 FF 5F 24              call far word [es:bx+0x24]
0034 50                       push ax
0035 C4 5E 06                 les bx, [bp+0x6]
0038 26 FF 5F 20              call far word [es:bx+0x20]
003C 50                       push ax
003D C4 5E 06                 les bx, [bp+0x6]
0040 26 FF 5F 2C              call far word [es:bx+0x2c]
0044 83 C4 06                 add sp, 0x6
0047 C4 5E 06                 les bx, [bp+0x6]
004A 26 FF 5F 24              call far word [es:bx+0x24]
004E 50                       push ax
004F C4 5E 06                 les bx, [bp+0x6]
0052 26 FF 5F 20              call far word [es:bx+0x20]
0056 50                       push ax
0057 B8 01 00                 mov ax, 0x1
005A 50                       push ax
005B C4 5E 06                 les bx, [bp+0x6]
005E 26 FF 5F 30              call far word [es:bx+0x30]
0062 83 C4 06                 add sp, 0x6
0065                          ShowMessage(06E3) [es:bx+0xf8] = Your aptitude at opening locks pays off.
0072 EB 2A                    jmp 0x9e
0074 33 C0                    xor ax, ax
0076 50                       push ax
0077 C4 5E 06                 les bx, [bp+0x6]
007A 26 FF 5F 24              call far word [es:bx+0x24]
007E 50                       push ax
007F C4 5E 06                 les bx, [bp+0x6]
0082 26 FF 5F 20              call far word [es:bx+0x20]
0086 50                       push ax
0087 C4 5E 06                 les bx, [bp+0x6]
008A 26 FF 5F 2C              call far word [es:bx+0x2c]
008E 83 C4 06                 add sp, 0x6
0091                          ShowMessage(070C) [es:bx+0xf8] = The door is locked.
009E                          RETURN

Functn16: "LKPKDORC"
0000                          BEGIN
0003 B8 C4 00                 mov ax, 0xc4
0006 50                       push ax
0007 B8 C3 00                 mov ax, 0xc3
000A 50                       push ax
000B C4 5E 06                 les bx, [bp+0x6]
000E 26 FF 5F 54              call far word [es:bx+0x54]
0012 59                       pop cx
0013 59                       pop cx
0014 0B C0                    or ax, ax
0016 75 11                    jnz 0x29
0018 B8 0E 00                 mov ax, 0xe
001B 50                       push ax
001C C4 5E 06                 les bx, [bp+0x6]
001F 26 FF 5F 58              call far word [es:bx+0x58]
0023 59                       pop cx
0024 3D 09 00                 cmp ax, 0x9
0027 72 4B                    jb 0x74
0029 B8 01 00                 mov ax, 0x1
002C 50                       push ax
002D C4 5E 06                 les bx, [bp+0x6]
0030 26 FF 5F 24              call far word [es:bx+0x24]
0034 50                       push ax
0035 C4 5E 06                 les bx, [bp+0x6]
0038 26 FF 5F 20              call far word [es:bx+0x20]
003C 50                       push ax
003D C4 5E 06                 les bx, [bp+0x6]
0040 26 FF 5F 2C              call far word [es:bx+0x2c]
0044 83 C4 06                 add sp, 0x6
0047 C4 5E 06                 les bx, [bp+0x6]
004A 26 FF 5F 24              call far word [es:bx+0x24]
004E 50                       push ax
004F C4 5E 06                 les bx, [bp+0x6]
0052 26 FF 5F 20              call far word [es:bx+0x20]
0056 50                       push ax
0057 B8 01 00                 mov ax, 0x1
005A 50                       push ax
005B C4 5E 06                 les bx, [bp+0x6]
005E 26 FF 5F 30              call far word [es:bx+0x30]
0062 83 C4 06                 add sp, 0x6
0065                          ShowMessage(0720) [es:bx+0xf8] = You succeed at picking the door lock.
0072 EB 2A                    jmp 0x9e
0074 33 C0                    xor ax, ax
0076 50                       push ax
0077 C4 5E 06                 les bx, [bp+0x6]
007A 26 FF 5F 24              call far word [es:bx+0x24]
007E 50                       push ax
007F C4 5E 06                 les bx, [bp+0x6]
0082 26 FF 5F 20              call far word [es:bx+0x20]
0086 50                       push ax
0087 C4 5E 06                 les bx, [bp+0x6]
008A 26 FF 5F 2C              call far word [es:bx+0x2c]
008E 83 C4 06                 add sp, 0x6
0091                          ShowMessage(0746) [es:bx+0xf8] = The door is locked.
009E                          RETURN

Functn17: "KEYDOORA"
0000                          BEGIN
0003 B8 C4 00                 mov ax, 0xc4
0006 50                       push ax
0007 B8 C3 00                 mov ax, 0xc3
000A 50                       push ax
000B C4 5E 06                 les bx, [bp+0x6]
000E 26 FF 5F 54              call far word [es:bx+0x54]
0012 59                       pop cx
0013 59                       pop cx
0014 0B C0                    or ax, ax
0016 75 26                    jnz 0x3e
0018 B8 E1 00                 mov ax, 0xe1
001B 50                       push ax
001C B8 E1 00                 mov ax, 0xe1
001F 50                       push ax
0020 C4 5E 06                 les bx, [bp+0x6]
0023 26 FF 5F 54              call far word [es:bx+0x54]
0027 59                       pop cx
0028 59                       pop cx
0029 0B C0                    or ax, ax
002B 75 11                    jnz 0x3e
002D B8 0E 00                 mov ax, 0xe
0030 50                       push ax
0031 C4 5E 06                 les bx, [bp+0x6]
0034 26 FF 5F 58              call far word [es:bx+0x58]
0038 59                       pop cx
0039 3D 0A 00                 cmp ax, 0xa
003C 72 4B                    jb 0x89
003E B8 01 00                 mov ax, 0x1
0041 50                       push ax
0042 C4 5E 06                 les bx, [bp+0x6]
0045 26 FF 5F 24              call far word [es:bx+0x24]
0049 50                       push ax
004A C4 5E 06                 les bx, [bp+0x6]
004D 26 FF 5F 20              call far word [es:bx+0x20]
0051 50                       push ax
0052 C4 5E 06                 les bx, [bp+0x6]
0055 26 FF 5F 2C              call far word [es:bx+0x2c]
0059 83 C4 06                 add sp, 0x6
005C C4 5E 06                 les bx, [bp+0x6]
005F 26 FF 5F 24              call far word [es:bx+0x24]
0063 50                       push ax
0064 C4 5E 06                 les bx, [bp+0x6]
0067 26 FF 5F 20              call far word [es:bx+0x20]
006B 50                       push ax
006C B8 01 00                 mov ax, 0x1
006F 50                       push ax
0070 C4 5E 06                 les bx, [bp+0x6]
0073 26 FF 5F 30              call far word [es:bx+0x30]
0077 83 C4 06                 add sp, 0x6
007A                          ShowMessage(075A) [es:bx+0xf8] = The door lock is no match for your skills.
0087 EB 2A                    jmp 0xb3
0089 33 C0                    xor ax, ax
008B 50                       push ax
008C C4 5E 06                 les bx, [bp+0x6]
008F 26 FF 5F 24              call far word [es:bx+0x24]
0093 50                       push ax
0094 C4 5E 06                 les bx, [bp+0x6]
0097 26 FF 5F 20              call far word [es:bx+0x20]
009B 50                       push ax
009C C4 5E 06                 les bx, [bp+0x6]
009F 26 FF 5F 2C              call far word [es:bx+0x2c]
00A3 83 C4 06                 add sp, 0x6
00A6                          ShowMessage(0785) [es:bx+0xf8] = The door is locked.
00B3                          RETURN

Functn18: "KEYDOORB"
0000                          BEGIN
0003 B8 C4 00                 mov ax, 0xc4
0006 50                       push ax
0007 B8 C3 00                 mov ax, 0xc3
000A 50                       push ax
000B C4 5E 06                 les bx, [bp+0x6]
000E 26 FF 5F 54              call far word [es:bx+0x54]
0012 59                       pop cx
0013 59                       pop cx
0014 0B C0                    or ax, ax
0016 75 26                    jnz 0x3e
0018 B8 E1 00                 mov ax, 0xe1
001B 50                       push ax
001C B8 E1 00                 mov ax, 0xe1
001F 50                       push ax
0020 C4 5E 06                 les bx, [bp+0x6]
0023 26 FF 5F 54              call far word [es:bx+0x54]
0027 59                       pop cx
0028 59                       pop cx
0029 0B C0                    or ax, ax
002B 75 11                    jnz 0x3e
002D B8 0E 00                 mov ax, 0xe
0030 50                       push ax
0031 C4 5E 06                 les bx, [bp+0x6]
0034 26 FF 5F 58              call far word [es:bx+0x58]
0038 59                       pop cx
0039 3D 0B 00                 cmp ax, 0xb
003C 72 4B                    jb 0x89
003E B8 01 00                 mov ax, 0x1
0041 50                       push ax
0042 C4 5E 06                 les bx, [bp+0x6]
0045 26 FF 5F 24              call far word [es:bx+0x24]
0049 50                       push ax
004A C4 5E 06                 les bx, [bp+0x6]
004D 26 FF 5F 20              call far word [es:bx+0x20]
0051 50                       push ax
0052 C4 5E 06                 les bx, [bp+0x6]
0055 26 FF 5F 2C              call far word [es:bx+0x2c]
0059 83 C4 06                 add sp, 0x6
005C C4 5E 06                 les bx, [bp+0x6]
005F 26 FF 5F 24              call far word [es:bx+0x24]
0063 50                       push ax
0064 C4 5E 06                 les bx, [bp+0x6]
0067 26 FF 5F 20              call far word [es:bx+0x20]
006B 50                       push ax
006C B8 01 00                 mov ax, 0x1
006F 50                       push ax
0070 C4 5E 06                 les bx, [bp+0x6]
0073 26 FF 5F 30              call far word [es:bx+0x30]
0077 83 C4 06                 add sp, 0x6
007A                          ShowMessage(0799) [es:bx+0xf8] = You deftly trip the door lock.
0087 EB 2A                    jmp 0xb3
0089 33 C0                    xor ax, ax
008B 50                       push ax
008C C4 5E 06                 les bx, [bp+0x6]
008F 26 FF 5F 24              call far word [es:bx+0x24]
0093 50                       push ax
0094 C4 5E 06                 les bx, [bp+0x6]
0097 26 FF 5F 20              call far word [es:bx+0x20]
009B 50                       push ax
009C C4 5E 06                 les bx, [bp+0x6]
009F 26 FF 5F 2C              call far word [es:bx+0x2c]
00A3 83 C4 06                 add sp, 0x6
00A6                          ShowMessage(07B8) [es:bx+0xf8] = The door is locked.
00B3                          RETURN

Functn19: "KEYDOORC"
0000                          BEGIN
0003 B8 C4 00                 mov ax, 0xc4
0006 50                       push ax
0007 B8 C4 00                 mov ax, 0xc4
000A 50                       push ax
000B C4 5E 06                 les bx, [bp+0x6]
000E 26 FF 5F 54              call far word [es:bx+0x54]
0012 59                       pop cx
0013 59                       pop cx
0014 0B C0                    or ax, ax
0016 75 26                    jnz 0x3e
0018 B8 E1 00                 mov ax, 0xe1
001B 50                       push ax
001C B8 E1 00                 mov ax, 0xe1
001F 50                       push ax
0020 C4 5E 06                 les bx, [bp+0x6]
0023 26 FF 5F 54              call far word [es:bx+0x54]
0027 59                       pop cx
0028 59                       pop cx
0029 0B C0                    or ax, ax
002B 75 11                    jnz 0x3e
002D B8 0E 00                 mov ax, 0xe
0030 50                       push ax
0031 C4 5E 06                 les bx, [bp+0x6]
0034 26 FF 5F 58              call far word [es:bx+0x58]
0038 59                       pop cx
0039 3D 0C 00                 cmp ax, 0xc
003C 72 4B                    jb 0x89
003E B8 01 00                 mov ax, 0x1
0041 50                       push ax
0042 C4 5E 06                 les bx, [bp+0x6]
0045 26 FF 5F 24              call far word [es:bx+0x24]
0049 50                       push ax
004A C4 5E 06                 les bx, [bp+0x6]
004D 26 FF 5F 20              call far word [es:bx+0x20]
0051 50                       push ax
0052 C4 5E 06                 les bx, [bp+0x6]
0055 26 FF 5F 2C              call far word [es:bx+0x2c]
0059 83 C4 06                 add sp, 0x6
005C C4 5E 06                 les bx, [bp+0x6]
005F 26 FF 5F 24              call far word [es:bx+0x24]
0063 50                       push ax
0064 C4 5E 06                 les bx, [bp+0x6]
0067 26 FF 5F 20              call far word [es:bx+0x20]
006B 50                       push ax
006C B8 01 00                 mov ax, 0x1
006F 50                       push ax
0070 C4 5E 06                 les bx, [bp+0x6]
0073 26 FF 5F 30              call far word [es:bx+0x30]
0077 83 C4 06                 add sp, 0x6
007A                          ShowMessage(07CC) [es:bx+0xf8] = You quickly have the door open.
0087 EB 2A                    jmp 0xb3
0089 33 C0                    xor ax, ax
008B 50                       push ax
008C C4 5E 06                 les bx, [bp+0x6]
008F 26 FF 5F 24              call far word [es:bx+0x24]
0093 50                       push ax
0094 C4 5E 06                 les bx, [bp+0x6]
0097 26 FF 5F 20              call far word [es:bx+0x20]
009B 50                       push ax
009C C4 5E 06                 les bx, [bp+0x6]
009F 26 FF 5F 2C              call far word [es:bx+0x2c]
00A3 83 C4 06                 add sp, 0x6
00A6                          ShowMessage(07EC) [es:bx+0xf8] = The door is locked.
00B3                          RETURN

Functn1A: "STRDOORA"
0000                          BEGIN
0003                          CheckStrength(0E) [es:bx+0xa4]
0012 72 4B                    jb 0x5f
0014                          ShowMessage(0800) [es:bx+0xf8] = You push on the door and open it.
0021 C4 5E 06                 les bx, [bp+0x6]
0024 26 FF 5F 24              call far word [es:bx+0x24]
0028 50                       push ax
0029 C4 5E 06                 les bx, [bp+0x6]
002C 26 FF 5F 20              call far word [es:bx+0x20]
0030 50                       push ax
0031 B8 01 00                 mov ax, 0x1
0034 50                       push ax
0035 C4 5E 06                 les bx, [bp+0x6]
0038 26 FF 5F 30              call far word [es:bx+0x30]
003C 83 C4 06                 add sp, 0x6
003F B8 01 00                 mov ax, 0x1
0042 50                       push ax
0043 C4 5E 06                 les bx, [bp+0x6]
0046 26 FF 5F 24              call far word [es:bx+0x24]
004A 50                       push ax
004B C4 5E 06                 les bx, [bp+0x6]
004E 26 FF 5F 20              call far word [es:bx+0x20]
0052 50                       push ax
0053 C4 5E 06                 les bx, [bp+0x6]
0056 26 FF 5F 2C              call far word [es:bx+0x2c]
005A 83 C4 06                 add sp, 0x6
005D EB 2A                    jmp 0x89
005F                          ShowMessage(0822) [es:bx+0xf8] = The door is stuck shut.
006C 33 C0                    xor ax, ax
006E 50                       push ax
006F C4 5E 06                 les bx, [bp+0x6]
0072 26 FF 5F 24              call far word [es:bx+0x24]
0076 50                       push ax
0077 C4 5E 06                 les bx, [bp+0x6]
007A 26 FF 5F 20              call far word [es:bx+0x20]
007E 50                       push ax
007F C4 5E 06                 les bx, [bp+0x6]
0082 26 FF 5F 2C              call far word [es:bx+0x2c]
0086 83 C4 06                 add sp, 0x6
0089                          RETURN

Functn1B: "STRDOORB"
0000                          BEGIN
0003                          CheckStrength(10) [es:bx+0xa4]
0012 72 4B                    jb 0x5f
0014                          ShowMessage(083A) [es:bx+0xf8] = You force the door open by muscle power.
0021 C4 5E 06                 les bx, [bp+0x6]
0024 26 FF 5F 24              call far word [es:bx+0x24]
0028 50                       push ax
0029 C4 5E 06                 les bx, [bp+0x6]
002C 26 FF 5F 20              call far word [es:bx+0x20]
0030 50                       push ax
0031 B8 01 00                 mov ax, 0x1
0034 50                       push ax
0035 C4 5E 06                 les bx, [bp+0x6]
0038 26 FF 5F 30              call far word [es:bx+0x30]
003C 83 C4 06                 add sp, 0x6
003F B8 01 00                 mov ax, 0x1
0042 50                       push ax
0043 C4 5E 06                 les bx, [bp+0x6]
0046 26 FF 5F 24              call far word [es:bx+0x24]
004A 50                       push ax
004B C4 5E 06                 les bx, [bp+0x6]
004E 26 FF 5F 20              call far word [es:bx+0x20]
0052 50                       push ax
0053 C4 5E 06                 les bx, [bp+0x6]
0056 26 FF 5F 2C              call far word [es:bx+0x2c]
005A 83 C4 06                 add sp, 0x6
005D EB 2A                    jmp 0x89
005F                          ShowMessage(0863) [es:bx+0xf8] = The door is stuck shut.
006C 33 C0                    xor ax, ax
006E 50                       push ax
006F C4 5E 06                 les bx, [bp+0x6]
0072 26 FF 5F 24              call far word [es:bx+0x24]
0076 50                       push ax
0077 C4 5E 06                 les bx, [bp+0x6]
007A 26 FF 5F 20              call far word [es:bx+0x20]
007E 50                       push ax
007F C4 5E 06                 les bx, [bp+0x6]
0082 26 FF 5F 2C              call far word [es:bx+0x2c]
0086 83 C4 06                 add sp, 0x6
0089                          RETURN

Functn1C: "ITMDOORA"
0000                          BEGIN
0003 B8 E1 00                 mov ax, 0xe1
0006 50                       push ax
0007 B8 E1 00                 mov ax, 0xe1
000A 50                       push ax
000B C4 5E 06                 les bx, [bp+0x6]
000E 26 FF 5F 54              call far word [es:bx+0x54]
0012 59                       pop cx
0013 59                       pop cx
0014 0B C0                    or ax, ax
0016 74 4B                    jz 0x63
0018 B8 01 00                 mov ax, 0x1
001B 50                       push ax
001C C4 5E 06                 les bx, [bp+0x6]
001F 26 FF 5F 24              call far word [es:bx+0x24]
0023 50                       push ax
0024 C4 5E 06                 les bx, [bp+0x6]
0027 26 FF 5F 20              call far word [es:bx+0x20]
002B 50                       push ax
002C C4 5E 06                 les bx, [bp+0x6]
002F 26 FF 5F 2C              call far word [es:bx+0x2c]
0033 83 C4 06                 add sp, 0x6
0036 C4 5E 06                 les bx, [bp+0x6]
0039 26 FF 5F 24              call far word [es:bx+0x24]
003D 50                       push ax
003E C4 5E 06                 les bx, [bp+0x6]
0041 26 FF 5F 20              call far word [es:bx+0x20]
0045 50                       push ax
0046 B8 01 00                 mov ax, 0x1
0049 50                       push ax
004A C4 5E 06                 les bx, [bp+0x6]
004D 26 FF 5F 30              call far word [es:bx+0x30]
0051 83 C4 06                 add sp, 0x6
0054                          ShowMessage(087B) [es:bx+0xf8] = The Domicile Key opens the door!
0061 EB 2A                    jmp 0x8d
0063 33 C0                    xor ax, ax
0065 50                       push ax
0066 C4 5E 06                 les bx, [bp+0x6]
0069 26 FF 5F 24              call far word [es:bx+0x24]
006D 50                       push ax
006E C4 5E 06                 les bx, [bp+0x6]
0071 26 FF 5F 20              call far word [es:bx+0x20]
0075 50                       push ax
0076 C4 5E 06                 les bx, [bp+0x6]
0079 26 FF 5F 2C              call far word [es:bx+0x2c]
007D 83 C4 06                 add sp, 0x6
0080                          ShowMessage(089C) [es:bx+0xf8] = The door is locked.
008D                          RETURN

Functn1D: "DETCTDOR"
0000                          BEGIN
0003 B8 0D 00                 mov ax, 0xd
0006 50                       push ax
0007 C4 5E 06                 les bx, [bp+0x6]
000A 26 FF 5F 58              call far word [es:bx+0x58]
000E 59                       pop cx
000F 3D 0A 00                 cmp ax, 0xa
0012 73 3A                    jae 0x4e
0014 B8 17 00                 mov ax, 0x17
0017 50                       push ax
0018 C4 5E 06                 les bx, [bp+0x6]
001B 26 FF 5F 64              call far word [es:bx+0x64]
001F 59                       pop cx
0020 0B C0                    or ax, ax
0022 75 2A                    jnz 0x4e
0024 B8 A2 00                 mov ax, 0xa2
0027 50                       push ax
0028 B8 A2 00                 mov ax, 0xa2
002B 50                       push ax
002C C4 5E 06                 les bx, [bp+0x6]
002F 26 FF 5F 54              call far word [es:bx+0x54]
0033 59                       pop cx
0034 59                       pop cx
0035 0B C0                    or ax, ax
0037 75 15                    jnz 0x4e
0039 B8 BE 00                 mov ax, 0xbe
003C 50                       push ax
003D B8 BE 00                 mov ax, 0xbe
0040 50                       push ax
0041 C4 5E 06                 les bx, [bp+0x6]
0044 26 FF 5F 54              call far word [es:bx+0x54]
0048 59                       pop cx
0049 59                       pop cx
004A 0B C0                    or ax, ax
004C 74 4B                    jz 0x99
004E                          ShowMessage(08B0) [es:bx+0xf8] = You have spotted a secret door!
005B C4 5E 06                 les bx, [bp+0x6]
005E 26 FF 5F 24              call far word [es:bx+0x24]
0062 50                       push ax
0063 C4 5E 06                 les bx, [bp+0x6]
0066 26 FF 5F 20              call far word [es:bx+0x20]
006A 50                       push ax
006B B8 01 00                 mov ax, 0x1
006E 50                       push ax
006F C4 5E 06                 les bx, [bp+0x6]
0072 26 FF 5F 30              call far word [es:bx+0x30]
0076 83 C4 06                 add sp, 0x6
0079 B8 01 00                 mov ax, 0x1
007C 50                       push ax
007D C4 5E 06                 les bx, [bp+0x6]
0080 26 FF 5F 24              call far word [es:bx+0x24]
0084 50                       push ax
0085 C4 5E 06                 les bx, [bp+0x6]
0088 26 FF 5F 20              call far word [es:bx+0x20]
008C 50                       push ax
008D C4 5E 06                 les bx, [bp+0x6]
0090 26 FF 5F 2C              call far word [es:bx+0x2c]
0094 83 C4 06                 add sp, 0x6
0097 EB 1D                    jmp 0xb6
0099 33 C0                    xor ax, ax
009B 50                       push ax
009C C4 5E 06                 les bx, [bp+0x6]
009F 26 FF 5F 24              call far word [es:bx+0x24]
00A3 50                       push ax
00A4 C4 5E 06                 les bx, [bp+0x6]
00A7 26 FF 5F 20              call far word [es:bx+0x20]
00AB 50                       push ax
00AC C4 5E 06                 les bx, [bp+0x6]
00AF 26 FF 5F 2C              call far word [es:bx+0x2c]
00B3 83 C4 06                 add sp, 0x6
00B6                          RETURN

Functn1E: "LFTROTA"
0000                          BEGIN
0003 B8 02 00                 mov ax, 0x2
0006 50                       push ax
0007 33 C0                    xor ax, ax
0009 50                       push ax
000A C4 5E 06                 les bx, [bp+0x6]
000D 26 FF 5F 0C              call far word [es:bx+0xc]
0011 59                       pop cx
0012 59                       pop cx
0013 0B C0                    or ax, ax
0015 75 03                    jnz 0x1a
0017 E9 AF 00                 jmp 0xc9
001A                          SetState(00, 02, 01) [es:bx]
002E C4 5E 06                 les bx, [bp+0x6]
0031 26 FF 5F 24              call far word [es:bx+0x24]
0035 8B D8                    mov bx, ax
0037 83 FB 03                 cmp bx, 0x3
003A 76 03                    jbe 0x3f
003C E9 8A 00                 jmp 0xc9
003F D1 E3                    shl bx, 1
0041 2E FF A7 CB 10           jmp word [cs:bx+0x10cb]
0046 33 C0                    xor ax, ax
0048 50                       push ax
0049 C4 5E 06                 les bx, [bp+0x6]
004C 26 FF 5F 20              call far word [es:bx+0x20]
0050 50                       push ax
0051 B8 01 00                 mov ax, 0x1
0054 50                       push ax
0055 B8 04 00                 mov ax, 0x4
0058 50                       push ax
0059 C4 5E 06                 les bx, [bp+0x6]
005C 26 FF 9F BC 00           call far word [es:bx+0xbc]
0061 83 C4 08                 add sp, 0x8
0064 EB 63                    jmp 0xc9
0066 B8 02 00                 mov ax, 0x2
0069 50                       push ax
006A C4 5E 06                 les bx, [bp+0x6]
006D 26 FF 5F 20              call far word [es:bx+0x20]
0071 50                       push ax
0072 B8 01 00                 mov ax, 0x1
0075 50                       push ax
0076 B8 04 00                 mov ax, 0x4
0079 50                       push ax
007A C4 5E 06                 les bx, [bp+0x6]
007D 26 FF 9F BC 00           call far word [es:bx+0xbc]
0082 83 C4 08                 add sp, 0x8
0085 EB 42                    jmp 0xc9
0087 B8 03 00                 mov ax, 0x3
008A 50                       push ax
008B C4 5E 06                 les bx, [bp+0x6]
008E 26 FF 5F 20              call far word [es:bx+0x20]
0092 50                       push ax
0093 B8 01 00                 mov ax, 0x1
0096 50                       push ax
0097 B8 04 00                 mov ax, 0x4
009A 50                       push ax
009B C4 5E 06                 les bx, [bp+0x6]
009E 26 FF 9F BC 00           call far word [es:bx+0xbc]
00A3 83 C4 08                 add sp, 0x8
00A6 EB 21                    jmp 0xc9
00A8 B8 01 00                 mov ax, 0x1
00AB 50                       push ax
00AC C4 5E 06                 les bx, [bp+0x6]
00AF 26 FF 5F 20              call far word [es:bx+0x20]
00B3 50                       push ax
00B4 B8 01 00                 mov ax, 0x1
00B7 50                       push ax
00B8 B8 04 00                 mov ax, 0x4
00BB 50                       push ax
00BC C4 5E 06                 les bx, [bp+0x6]
00BF 26 FF 9F BC 00           call far word [es:bx+0xbc]
00C4 83 C4 08                 add sp, 0x8
00C7 EB 00                    jmp 0xc9
00C9                          RETURN
00CB A8 10                    test al, 0x10
00CD 66 10 87 10 46           o32 adc [bx+0x4610], al
00D2 10                       invalid

Functn1F: "LFTROTB"
0000                          BEGIN
0003 B8 02 00                 mov ax, 0x2
0006 50                       push ax
0007 33 C0                    xor ax, ax
0009 50                       push ax
000A C4 5E 06                 les bx, [bp+0x6]
000D 26 FF 5F 0C              call far word [es:bx+0xc]
0011 59                       pop cx
0012 59                       pop cx
0013 0B C0                    or ax, ax
0015 75 03                    jnz 0x1a
0017 E9 D5 00                 jmp 0xef
001A                          SetState(00, 02, 01) [es:bx]
002E C4 5E 06                 les bx, [bp+0x6]
0031 26 FF 5F 24              call far word [es:bx+0x24]
0035 8B D8                    mov bx, ax
0037 83 FB 03                 cmp bx, 0x3
003A 76 03                    jbe 0x3f
003C E9 8B 00                 jmp 0xca
003F D1 E3                    shl bx, 1
0041 2E FF A7 C4 11           jmp word [cs:bx+0x11c4]
0046 B8 02 00                 mov ax, 0x2
0049 50                       push ax
004A C4 5E 06                 les bx, [bp+0x6]
004D 26 FF 5F 20              call far word [es:bx+0x20]
0051 50                       push ax
0052 B8 01 00                 mov ax, 0x1
0055 50                       push ax
0056 B8 04 00                 mov ax, 0x4
0059 50                       push ax
005A C4 5E 06                 les bx, [bp+0x6]
005D 26 FF 9F BC 00           call far word [es:bx+0xbc]
0062 83 C4 08                 add sp, 0x8
0065 E9 87 00                 jmp 0xef
0068 33 C0                    xor ax, ax
006A 50                       push ax
006B C4 5E 06                 les bx, [bp+0x6]
006E 26 FF 5F 20              call far word [es:bx+0x20]
0072 50                       push ax
0073 B8 01 00                 mov ax, 0x1
0076 50                       push ax
0077 B8 04 00                 mov ax, 0x4
007A 50                       push ax
007B C4 5E 06                 les bx, [bp+0x6]
007E 26 FF 9F BC 00           call far word [es:bx+0xbc]
0083 83 C4 08                 add sp, 0x8
0086 EB 67                    jmp 0xef
0088 B8 01 00                 mov ax, 0x1
008B 50                       push ax
008C C4 5E 06                 les bx, [bp+0x6]
008F 26 FF 5F 20              call far word [es:bx+0x20]
0093 50                       push ax
0094 B8 01 00                 mov ax, 0x1
0097 50                       push ax
0098 B8 04 00                 mov ax, 0x4
009B 50                       push ax
009C C4 5E 06                 les bx, [bp+0x6]
009F 26 FF 9F BC 00           call far word [es:bx+0xbc]
00A4 83 C4 08                 add sp, 0x8
00A7 EB 46                    jmp 0xef
00A9 B8 03 00                 mov ax, 0x3
00AC 50                       push ax
00AD C4 5E 06                 les bx, [bp+0x6]
00B0 26 FF 5F 20              call far word [es:bx+0x20]
00B4 50                       push ax
00B5 B8 01 00                 mov ax, 0x1
00B8 50                       push ax
00B9 B8 04 00                 mov ax, 0x4
00BC 50                       push ax
00BD C4 5E 06                 les bx, [bp+0x6]
00C0 26 FF 9F BC 00           call far word [es:bx+0xbc]
00C5 83 C4 08                 add sp, 0x8
00C8 EB 25                    jmp 0xef
00CA C4 5E 06                 les bx, [bp+0x6]
00CD 26 FF 5F 24              call far word [es:bx+0x24]
00D1 50                       push ax
00D2 C4 5E 06                 les bx, [bp+0x6]
00D5 26 FF 5F 20              call far word [es:bx+0x20]
00D9 50                       push ax
00DA B8 01 00                 mov ax, 0x1
00DD 50                       push ax
00DE B8 04 00                 mov ax, 0x4
00E1 50                       push ax
00E2 C4 5E 06                 les bx, [bp+0x6]
00E5 26 FF 9F BC 00           call far word [es:bx+0xbc]
00EA 83 C4 08                 add sp, 0x8
00ED EB 00                    jmp 0xef
00EF                          RETURN
00F1 7C 11                    jl 0x104
00F3 3B 11                    cmp dx, [bx+di]
00F5 5B                       pop bx
00F6 11 19                    adc [bx+di], bx
00F8 11                       invalid

Functn20: "BACKROTL"
0000                          BEGIN
0003 B8 02 00                 mov ax, 0x2
0006 50                       push ax
0007 33 C0                    xor ax, ax
0009 50                       push ax
000A C4 5E 06                 les bx, [bp+0x6]
000D 26 FF 5F 0C              call far word [es:bx+0xc]
0011 59                       pop cx
0012 59                       pop cx
0013 0B C0                    or ax, ax
0015 75 03                    jnz 0x1a
0017 E9 D5 00                 jmp 0xef
001A                          SetState(00, 02, 01) [es:bx]
002E C4 5E 06                 les bx, [bp+0x6]
0031 26 FF 5F 24              call far word [es:bx+0x24]
0035 8B D8                    mov bx, ax
0037 83 FB 03                 cmp bx, 0x3
003A 76 03                    jbe 0x3f
003C E9 8B 00                 jmp 0xca
003F D1 E3                    shl bx, 1
0041 2E FF A7 BD 12           jmp word [cs:bx+0x12bd]
0046 B8 01 00                 mov ax, 0x1
0049 50                       push ax
004A C4 5E 06                 les bx, [bp+0x6]
004D 26 FF 5F 20              call far word [es:bx+0x20]
0051 50                       push ax
0052 B8 01 00                 mov ax, 0x1
0055 50                       push ax
0056 B8 04 00                 mov ax, 0x4
0059 50                       push ax
005A C4 5E 06                 les bx, [bp+0x6]
005D 26 FF 9F BC 00           call far word [es:bx+0xbc]
0062 83 C4 08                 add sp, 0x8
0065 E9 87 00                 jmp 0xef
0068 B8 03 00                 mov ax, 0x3
006B 50                       push ax
006C C4 5E 06                 les bx, [bp+0x6]
006F 26 FF 5F 20              call far word [es:bx+0x20]
0073 50                       push ax
0074 B8 01 00                 mov ax, 0x1
0077 50                       push ax
0078 B8 04 00                 mov ax, 0x4
007B 50                       push ax
007C C4 5E 06                 les bx, [bp+0x6]
007F 26 FF 9F BC 00           call far word [es:bx+0xbc]
0084 83 C4 08                 add sp, 0x8
0087 EB 66                    jmp 0xef
0089 33 C0                    xor ax, ax
008B 50                       push ax
008C C4 5E 06                 les bx, [bp+0x6]
008F 26 FF 5F 20              call far word [es:bx+0x20]
0093 50                       push ax
0094 B8 01 00                 mov ax, 0x1
0097 50                       push ax
0098 B8 04 00                 mov ax, 0x4
009B 50                       push ax
009C C4 5E 06                 les bx, [bp+0x6]
009F 26 FF 9F BC 00           call far word [es:bx+0xbc]
00A4 83 C4 08                 add sp, 0x8
00A7 EB 46                    jmp 0xef
00A9 B8 02 00                 mov ax, 0x2
00AC 50                       push ax
00AD C4 5E 06                 les bx, [bp+0x6]
00B0 26 FF 5F 20              call far word [es:bx+0x20]
00B4 50                       push ax
00B5 B8 01 00                 mov ax, 0x1
00B8 50                       push ax
00B9 B8 04 00                 mov ax, 0x4
00BC 50                       push ax
00BD C4 5E 06                 les bx, [bp+0x6]
00C0 26 FF 9F BC 00           call far word [es:bx+0xbc]
00C5 83 C4 08                 add sp, 0x8
00C8 EB 25                    jmp 0xef
00CA C4 5E 06                 les bx, [bp+0x6]
00CD 26 FF 5F 24              call far word [es:bx+0x24]
00D1 50                       push ax
00D2 C4 5E 06                 les bx, [bp+0x6]
00D5 26 FF 5F 20              call far word [es:bx+0x20]
00D9 50                       push ax
00DA B8 01 00                 mov ax, 0x1
00DD 50                       push ax
00DE B8 04 00                 mov ax, 0x4
00E1 50                       push ax
00E2 C4 5E 06                 les bx, [bp+0x6]
00E5 26 FF 9F BC 00           call far word [es:bx+0xbc]
00EA 83 C4 08                 add sp, 0x8
00ED EB 00                    jmp 0xef
00EF                          RETURN
00F1 75 12                    jnz 0x105
00F3 34 12                    xor al, 0x12
00F5 55                       push bp
00F6 12 12                    adc dl, [bp+si]
00F8 12                       invalid

Functn21: "RTROTA"
0000                          BEGIN
0003 B8 02 00                 mov ax, 0x2
0006 50                       push ax
0007 33 C0                    xor ax, ax
0009 50                       push ax
000A C4 5E 06                 les bx, [bp+0x6]
000D 26 FF 5F 0C              call far word [es:bx+0xc]
0011 59                       pop cx
0012 59                       pop cx
0013 0B C0                    or ax, ax
0015 75 03                    jnz 0x1a
0017 E9 D5 00                 jmp 0xef
001A                          SetState(00, 02, 01) [es:bx]
002E C4 5E 06                 les bx, [bp+0x6]
0031 26 FF 5F 24              call far word [es:bx+0x24]
0035 8B D8                    mov bx, ax
0037 83 FB 03                 cmp bx, 0x3
003A 76 03                    jbe 0x3f
003C E9 8B 00                 jmp 0xca
003F D1 E3                    shl bx, 1
0041 2E FF A7 B6 13           jmp word [cs:bx+0x13b6]
0046 B8 02 00                 mov ax, 0x2
0049 50                       push ax
004A C4 5E 06                 les bx, [bp+0x6]
004D 26 FF 5F 20              call far word [es:bx+0x20]
0051 50                       push ax
0052 B8 01 00                 mov ax, 0x1
0055 50                       push ax
0056 B8 04 00                 mov ax, 0x4
0059 50                       push ax
005A C4 5E 06                 les bx, [bp+0x6]
005D 26 FF 9F BC 00           call far word [es:bx+0xbc]
0062 83 C4 08                 add sp, 0x8
0065 E9 87 00                 jmp 0xef
0068 33 C0                    xor ax, ax
006A 50                       push ax
006B C4 5E 06                 les bx, [bp+0x6]
006E 26 FF 5F 20              call far word [es:bx+0x20]
0072 50                       push ax
0073 B8 01 00                 mov ax, 0x1
0076 50                       push ax
0077 B8 04 00                 mov ax, 0x4
007A 50                       push ax
007B C4 5E 06                 les bx, [bp+0x6]
007E 26 FF 9F BC 00           call far word [es:bx+0xbc]
0083 83 C4 08                 add sp, 0x8
0086 EB 67                    jmp 0xef
0088 B8 01 00                 mov ax, 0x1
008B 50                       push ax
008C C4 5E 06                 les bx, [bp+0x6]
008F 26 FF 5F 20              call far word [es:bx+0x20]
0093 50                       push ax
0094 B8 01 00                 mov ax, 0x1
0097 50                       push ax
0098 B8 04 00                 mov ax, 0x4
009B 50                       push ax
009C C4 5E 06                 les bx, [bp+0x6]
009F 26 FF 9F BC 00           call far word [es:bx+0xbc]
00A4 83 C4 08                 add sp, 0x8
00A7 EB 46                    jmp 0xef
00A9 B8 03 00                 mov ax, 0x3
00AC 50                       push ax
00AD C4 5E 06                 les bx, [bp+0x6]
00B0 26 FF 5F 20              call far word [es:bx+0x20]
00B4 50                       push ax
00B5 B8 01 00                 mov ax, 0x1
00B8 50                       push ax
00B9 B8 04 00                 mov ax, 0x4
00BC 50                       push ax
00BD C4 5E 06                 les bx, [bp+0x6]
00C0 26 FF 9F BC 00           call far word [es:bx+0xbc]
00C5 83 C4 08                 add sp, 0x8
00C8 EB 25                    jmp 0xef
00CA C4 5E 06                 les bx, [bp+0x6]
00CD 26 FF 5F 24              call far word [es:bx+0x24]
00D1 50                       push ax
00D2 C4 5E 06                 les bx, [bp+0x6]
00D5 26 FF 5F 20              call far word [es:bx+0x20]
00D9 50                       push ax
00DA B8 01 00                 mov ax, 0x1
00DD 50                       push ax
00DE B8 04 00                 mov ax, 0x4
00E1 50                       push ax
00E2 C4 5E 06                 les bx, [bp+0x6]
00E5 26 FF 9F BC 00           call far word [es:bx+0xbc]
00EA 83 C4 08                 add sp, 0x8
00ED EB 00                    jmp 0xef
00EF                          RETURN
00F1 6E                       outsb
00F2 13 2D                    adc bp, [di]
00F4 13 4D 13                 adc cx, [di+0x13]
00F7 0B 13                    or dx, [bp+di]

Functn22: "RTROTB"
0000                          BEGIN
0003 B8 02 00                 mov ax, 0x2
0006 50                       push ax
0007 33 C0                    xor ax, ax
0009 50                       push ax
000A C4 5E 06                 les bx, [bp+0x6]
000D 26 FF 5F 0C              call far word [es:bx+0xc]
0011 59                       pop cx
0012 59                       pop cx
0013 0B C0                    or ax, ax
0015 75 03                    jnz 0x1a
0017 E9 D5 00                 jmp 0xef
001A                          SetState(00, 02, 01) [es:bx]
002E C4 5E 06                 les bx, [bp+0x6]
0031 26 FF 5F 24              call far word [es:bx+0x24]
0035 8B D8                    mov bx, ax
0037 83 FB 03                 cmp bx, 0x3
003A 76 03                    jbe 0x3f
003C E9 8B 00                 jmp 0xca
003F D1 E3                    shl bx, 1
0041 2E FF A7 AF 14           jmp word [cs:bx+0x14af]
0046 33 C0                    xor ax, ax
0048 50                       push ax
0049 C4 5E 06                 les bx, [bp+0x6]
004C 26 FF 5F 20              call far word [es:bx+0x20]
0050 50                       push ax
0051 B8 01 00                 mov ax, 0x1
0054 50                       push ax
0055 B8 04 00                 mov ax, 0x4
0058 50                       push ax
0059 C4 5E 06                 les bx, [bp+0x6]
005C 26 FF 9F BC 00           call far word [es:bx+0xbc]
0061 83 C4 08                 add sp, 0x8
0064 E9 88 00                 jmp 0xef
0067 B8 02 00                 mov ax, 0x2
006A 50                       push ax
006B C4 5E 06                 les bx, [bp+0x6]
006E 26 FF 5F 20              call far word [es:bx+0x20]
0072 50                       push ax
0073 B8 01 00                 mov ax, 0x1
0076 50                       push ax
0077 B8 04 00                 mov ax, 0x4
007A 50                       push ax
007B C4 5E 06                 les bx, [bp+0x6]
007E 26 FF 9F BC 00           call far word [es:bx+0xbc]
0083 83 C4 08                 add sp, 0x8
0086 EB 67                    jmp 0xef
0088 B8 03 00                 mov ax, 0x3
008B 50                       push ax
008C C4 5E 06                 les bx, [bp+0x6]
008F 26 FF 5F 20              call far word [es:bx+0x20]
0093 50                       push ax
0094 B8 01 00                 mov ax, 0x1
0097 50                       push ax
0098 B8 04 00                 mov ax, 0x4
009B 50                       push ax
009C C4 5E 06                 les bx, [bp+0x6]
009F 26 FF 9F BC 00           call far word [es:bx+0xbc]
00A4 83 C4 08                 add sp, 0x8
00A7 EB 46                    jmp 0xef
00A9 B8 01 00                 mov ax, 0x1
00AC 50                       push ax
00AD C4 5E 06                 les bx, [bp+0x6]
00B0 26 FF 5F 20              call far word [es:bx+0x20]
00B4 50                       push ax
00B5 B8 01 00                 mov ax, 0x1
00B8 50                       push ax
00B9 B8 04 00                 mov ax, 0x4
00BC 50                       push ax
00BD C4 5E 06                 les bx, [bp+0x6]
00C0 26 FF 9F BC 00           call far word [es:bx+0xbc]
00C5 83 C4 08                 add sp, 0x8
00C8 EB 25                    jmp 0xef
00CA C4 5E 06                 les bx, [bp+0x6]
00CD 26 FF 5F 24              call far word [es:bx+0x24]
00D1 50                       push ax
00D2 C4 5E 06                 les bx, [bp+0x6]
00D5 26 FF 5F 20              call far word [es:bx+0x20]
00D9 50                       push ax
00DA B8 01 00                 mov ax, 0x1
00DD 50                       push ax
00DE B8 04 00                 mov ax, 0x4
00E1 50                       push ax
00E2 C4 5E 06                 les bx, [bp+0x6]
00E5 26 FF 9F BC 00           call far word [es:bx+0xbc]
00EA 83 C4 08                 add sp, 0x8
00ED EB 00                    jmp 0xef
00EF                          RETURN
00F1 67 14 25                 a32 adc al, 0x25
00F4 14 46                    adc al, 0x46
00F6 14 04                    adc al, 0x4
00F8 14                       invalid

Functn25: "BADMNSTR"
0000                          BEGIN
0003                          ax = PartyCountIs(01) [es:bx+0xf0]
000E 75 27                    jnz 0x37
0010                          SetEncData(1F, 01) [es:bx+0xd4]
0022                          SetEncData(20, 02) [es:bx+0xd4]
0034 E9 1B 01                 jmp 0x152
0037                          ax = PartyCountIs(02) [es:bx+0xf0]
0042 75 39                    jnz 0x7d
0044                          SetEncData(20, 01) [es:bx+0xd4]
0056                          SetEncData(20, 02) [es:bx+0xd4]
0068                          SetEncData(20, 03) [es:bx+0xd4]
007A E9 D5 00                 jmp 0x152
007D                          ax = PartyCountIs(03) [es:bx+0xf0]
0088 75 5C                    jnz 0xe6
008A                          SetEncData(1F, 01) [es:bx+0xd4]
009C                          SetEncData(20, 02) [es:bx+0xd4]
00AE                          SetEncData(21, 03) [es:bx+0xd4]
00C0                          SetEncData(1F, 05) [es:bx+0xd4]
00D2                          SetEncData(21, 06) [es:bx+0xd4]
00E4 EB 6C                    jmp 0x152
00E6                          SetEncData(21, 01) [es:bx+0xd4]
00F8                          SetEncData(21, 02) [es:bx+0xd4]
010A                          SetEncData(21, 03) [es:bx+0xd4]
011C                          SetEncData(21, 04) [es:bx+0xd4]
012E                          SetEncData(21, 05) [es:bx+0xd4]
0140                          SetEncData(21, 06) [es:bx+0xd4]
0152                          RETURN

Functn28: "ITEMAENC"
0000                          BEGIN
0003                          ax = HasItem(B1) [es:bx+0x50]
0011 74 2E                    jz 0x41
0013                          SetTreasureData(01F4, 00, 00, 00, 00, CE) [es:bx+0xd8]
0032                          ShowMessage(08D0) [es:bx+0xf8] = Clerics use this room as a sanctuary.
003F EB 2D                    jmp 0x6e
0041                          SetTreasureData(0BB8, 00, 00, 00, CF, B1) [es:bx+0xd8]
0061                          ShowMessage(08F6) [es:bx+0xf8] = A scroll fall from a Cleric's robe.
006E                          ax = PartyCountIs(01) [es:bx+0xf0]
0079 75 15                    jnz 0x90
007B                          SetEncData(25, 01) [es:bx+0xd4]
008D E9 C1 00                 jmp 0x151
0090                          ax = PartyCountIs(02) [es:bx+0xf0]
009B 75 27                    jnz 0xc4
009D                          SetEncData(25, 01) [es:bx+0xd4]
00AF                          SetEncData(25, 02) [es:bx+0xd4]
00C1 E9 8D 00                 jmp 0x151
00C4                          ax = PartyCountIs(03) [es:bx+0xf0]
00CF 75 38                    jnz 0x109
00D1                          SetEncData(25, 01) [es:bx+0xd4]
00E3                          SetEncData(25, 02) [es:bx+0xd4]
00F5                          SetEncData(25, 05) [es:bx+0xd4]
0107 EB 48                    jmp 0x151
0109                          SetEncData(25, 01) [es:bx+0xd4]
011B                          SetEncData(25, 02) [es:bx+0xd4]
012D                          SetEncData(25, 05) [es:bx+0xd4]
013F                          SetEncData(25, 06) [es:bx+0xd4]
0151                          RETURN

Functn29: "SPECITMB"
0000                          BEGIN
0003                          ax = HasItem(CD) [es:bx+0x50]
0011 74 2E                    jz 0x41
0013                          SetTreasureData(004B, 00, 00, 00, 00, CB) [es:bx+0xd8]
0032                          ShowMessage(091A) [es:bx+0xf8] = Rogues use this room as a hideout.
003F EB 2D                    jmp 0x6e
0041                          SetTreasureData(0DAC, 00, 00, 00, D0, CD) [es:bx+0xd8]
0061                          ShowMessage(093D) [es:bx+0xf8] = A Barbarian drops some potions when she sees you.
006E                          ax = PartyCountIs(01) [es:bx+0xf0]
0079 75 27                    jnz 0xa2
007B                          SetEncData(23, 01) [es:bx+0xd4]
008D                          SetEncData(23, 02) [es:bx+0xd4]
009F E9 B1 00                 jmp 0x153
00A2                          ax = PartyCountIs(02) [es:bx+0xf0]
00AD 75 4A                    jnz 0xf9
00AF                          SetEncData(23, 01) [es:bx+0xd4]
00C1                          SetEncData(23, 02) [es:bx+0xd4]
00D3                          SetEncData(04, 05) [es:bx+0xd4]
00E5                          SetEncData(04, 06) [es:bx+0xd4]
00F7 EB 5A                    jmp 0x153
00F9                          SetEncData(23, 01) [es:bx+0xd4]
010B                          SetEncData(23, 02) [es:bx+0xd4]
011D                          SetEncData(23, 03) [es:bx+0xd4]
012F                          SetEncData(22, 05) [es:bx+0xd4]
0141                          SetEncData(22, 06) [es:bx+0xd4]
0153                          RETURN

Functn2A: "ITEMCENC"
0000                          BEGIN
0003                          ax = HasItem(CA) [es:bx+0x50]
0011 74 2E                    jz 0x41
0013                          SetTreasureData(00C8, 00, 00, 00, 00, B6) [es:bx+0xd8]
0032                          ShowMessage(096F) [es:bx+0xf8] = You sense evil in the room.
003F EB 2C                    jmp 0x6d
0041                          SetTreasureData(1388, 00, 00, 00, 00, CA) [es:bx+0xd8]
0060                          ShowMessage(098B) [es:bx+0xf8] = You see a wand on the floor.
006D                          ax = PartyCountIs(01) [es:bx+0xf0]
0078 75 27                    jnz 0xa1
007A                          SetEncData(19, 02) [es:bx+0xd4]
008C                          SetEncData(1B, 06) [es:bx+0xd4]
009E E9 C3 00                 jmp 0x164
00A1                          ax = PartyCountIs(02) [es:bx+0xf0]
00AC 75 4A                    jnz 0xf8
00AE                          SetEncData(19, 01) [es:bx+0xd4]
00C0                          SetEncData(19, 02) [es:bx+0xd4]
00D2                          SetEncData(1B, 05) [es:bx+0xd4]
00E4                          SetEncData(1B, 06) [es:bx+0xd4]
00F6 EB 6C                    jmp 0x164
00F8                          SetEncData(1A, 01) [es:bx+0xd4]
010A                          SetEncData(1A, 02) [es:bx+0xd4]
011C                          SetEncData(19, 03) [es:bx+0xd4]
012E                          SetEncData(19, 04) [es:bx+0xd4]
0140                          SetEncData(1B, 05) [es:bx+0xd4]
0152                          SetEncData(1B, 06) [es:bx+0xd4]
0164                          RETURN

Functn2B: "ITEMDECN"
0000                          BEGIN
0003                          ax = HasItem(92) [es:bx+0x50]
0011 74 2E                    jz 0x41
0013                          SetTreasureData(02EE, 00, 00, 00, 00, CF) [es:bx+0xd8]
0032                          ShowMessage(09A8) [es:bx+0xf8] = The stench of reptiles assails you.
003F EB 2D                    jmp 0x6e
0041                          SetTreasureData(09C4, 00, 00, 00, B7, 92) [es:bx+0xd8]
0061                          ShowMessage(09CC) [es:bx+0xf8] = You hear hissing.
006E                          ax = PartyCountIs(01) [es:bx+0xf0]
0079 75 27                    jnz 0xa2
007B                          SetEncData(1C, 01) [es:bx+0xd4]
008D                          SetEncData(1E, 02) [es:bx+0xd4]
009F E9 C3 00                 jmp 0x165
00A2                          ax = PartyCountIs(02) [es:bx+0xf0]
00AD 75 4A                    jnz 0xf9
00AF                          SetEncData(1C, 01) [es:bx+0xd4]
00C1                          SetEncData(1E, 02) [es:bx+0xd4]
00D3                          SetEncData(1C, 03) [es:bx+0xd4]
00E5                          SetEncData(1E, 04) [es:bx+0xd4]
00F7 EB 6C                    jmp 0x165
00F9                          SetEncData(1D, 01) [es:bx+0xd4]
010B                          SetEncData(1D, 02) [es:bx+0xd4]
011D                          SetEncData(1E, 03) [es:bx+0xd4]
012F                          SetEncData(1E, 04) [es:bx+0xd4]
0141                          SetEncData(1C, 05) [es:bx+0xd4]
0153                          SetEncData(1C, 06) [es:bx+0xd4]
0165                          RETURN

Functn2C: "WEAPAENC"
0000                          BEGIN
0003                          ax = HasItem(3A) [es:bx+0x50]
0011 74 2F                    jz 0x42
0013                          SetTreasureData(023F, 00, 00, 00, CC, CF) [es:bx+0xd8]
0033                          ShowMessage(09DE) [es:bx+0xf8] = Rogues surprise you.
0040 EB 2C                    jmp 0x6e
0042                          SetTreasureData(04B0, 00, 00, 00, 00, 3A) [es:bx+0xd8]
0061                          ShowMessage(09F3) [es:bx+0xf8] = A Knight drops a poleaxe as you approach.
006E                          ax = PartyCountIs(01) [es:bx+0xf0]
0079 75 27                    jnz 0xa2
007B                          SetEncData(26, 01) [es:bx+0xd4]
008D                          SetEncData(27, 02) [es:bx+0xd4]
009F E9 1B 01                 jmp 0x1bd
00A2                          ax = PartyCountIs(02) [es:bx+0xf0]
00AD 75 39                    jnz 0xe8
00AF                          SetEncData(26, 01) [es:bx+0xd4]
00C1                          SetEncData(27, 02) [es:bx+0xd4]
00D3                          SetEncData(25, 05) [es:bx+0xd4]
00E5 E9 D5 00                 jmp 0x1bd
00E8                          ax = PartyCountIs(03) [es:bx+0xf0]
00F3 75 5C                    jnz 0x151
00F5                          SetEncData(26, 01) [es:bx+0xd4]
0107                          SetEncData(25, 02) [es:bx+0xd4]
0119                          SetEncData(27, 03) [es:bx+0xd4]
012B                          SetEncData(25, 05) [es:bx+0xd4]
013D                          SetEncData(27, 06) [es:bx+0xd4]
014F EB 6C                    jmp 0x1bd
0151                          SetEncData(26, 01) [es:bx+0xd4]
0163                          SetEncData(26, 02) [es:bx+0xd4]
0175                          SetEncData(24, 03) [es:bx+0xd4]
0187                          SetEncData(23, 04) [es:bx+0xd4]
0199                          SetEncData(27, 05) [es:bx+0xd4]
01AB                          SetEncData(25, 06) [es:bx+0xd4]
01BD                          RETURN

Functn2D: "WEAPBENC"
0000                          BEGIN
0003                          ax = HasItem(49) [es:bx+0x50]
0011 74 2E                    jz 0x41
0013                          SetTreasureData(0384, 00, 00, 00, 00, C9) [es:bx+0xd8]
0032                          ShowMessage(0A1D) [es:bx+0xf8] = Nightmares loom up before you.
003F EB 2D                    jmp 0x6e
0041                          SetTreasureData(1388, 00, 00, 00, CB, 49) [es:bx+0xd8]
0061                          ShowMessage(0A3C) [es:bx+0xf8] = A Nightmare throws a bow aside to attack.
006E                          ax = PartyCountIs(01) [es:bx+0xf0]
0079 75 15                    jnz 0x90
007B                          SetEncData(13, 01) [es:bx+0xd4]
008D E9 C1 00                 jmp 0x151
0090                          ax = PartyCountIs(02) [es:bx+0xf0]
009B 75 27                    jnz 0xc4
009D                          SetEncData(13, 01) [es:bx+0xd4]
00AF                          SetEncData(14, 02) [es:bx+0xd4]
00C1 E9 8D 00                 jmp 0x151
00C4                          ax = PartyCountIs(03) [es:bx+0xf0]
00CF 75 38                    jnz 0x109
00D1                          SetEncData(14, 01) [es:bx+0xd4]
00E3                          SetEncData(13, 02) [es:bx+0xd4]
00F5                          SetEncData(14, 03) [es:bx+0xd4]
0107 EB 48                    jmp 0x151
0109                          SetEncData(13, 01) [es:bx+0xd4]
011B                          SetEncData(13, 02) [es:bx+0xd4]
012D                          SetEncData(14, 03) [es:bx+0xd4]
013F                          SetEncData(14, 04) [es:bx+0xd4]
0151                          RETURN

Functn2E: "ARMRAENC"
0000                          BEGIN
0003                          ax = HasItem(7F) [es:bx+0x50]
0011 74 2F                    jz 0x42
0013                          SetTreasureData(00C8, 00, 00, 00, 4F, 02) [es:bx+0xd8]
0033                          ShowMessage(0A66) [es:bx+0xf8] = You stumble on some Dwarf Knights.
0040 EB 2D                    jmp 0x6f
0042                          SetTreasureData(1770, 00, 00, 00, CF, 7F) [es:bx+0xd8]
0062                          ShowMessage(0A89) [es:bx+0xf8] = The brilliant chainmail worn by a Knight blinds you.
006F                          ax = PartyCountIs(01) [es:bx+0xf0]
007A 75 15                    jnz 0x91
007C                          SetEncData(28, 01) [es:bx+0xd4]
008E E9 C1 00                 jmp 0x152
0091                          ax = PartyCountIs(02) [es:bx+0xf0]
009C 75 27                    jnz 0xc5
009E                          SetEncData(28, 01) [es:bx+0xd4]
00B0                          SetEncData(28, 02) [es:bx+0xd4]
00C2 E9 8D 00                 jmp 0x152
00C5                          ax = PartyCountIs(03) [es:bx+0xf0]
00D0 75 38                    jnz 0x10a
00D2                          SetEncData(28, 01) [es:bx+0xd4]
00E4                          SetEncData(28, 02) [es:bx+0xd4]
00F6                          SetEncData(28, 04) [es:bx+0xd4]
0108 EB 48                    jmp 0x152
010A                          SetEncData(28, 01) [es:bx+0xd4]
011C                          SetEncData(28, 02) [es:bx+0xd4]
012E                          SetEncData(28, 03) [es:bx+0xd4]
0140                          SetEncData(28, 06) [es:bx+0xd4]
0152                          RETURN

Functn2F: "ARMRBENC"
0000                          BEGIN
0003                          ax = HasItem(5A) [es:bx+0x50]
0011 74 2D                    jz 0x40
0013                          SetTreasureData(0000, 00, 00, 00, 00, CE) [es:bx+0xd8]
0031                          ShowMessage(0ABE) [es:bx+0xf8] = You enter a den of thieves.
003E EB 2B                    jmp 0x6b
0040                          SetTreasureData(0000, 00, 00, 00, 00, 5A) [es:bx+0xd8]
005E                          ShowMessage(0ADA) [es:bx+0xf8] = A Halfling Thief tries to wield a large shield.
006B                          ax = PartyCountIs(01) [es:bx+0xf0]
0076 75 38                    jnz 0xb0
0078                          SetEncData(24, 01) [es:bx+0xd4]
008A                          SetEncData(24, 02) [es:bx+0xd4]
009C                          SetEncData(24, 05) [es:bx+0xd4]
00AE EB 6C                    jmp 0x11c
00B0                          SetEncData(24, 01) [es:bx+0xd4]
00C2                          SetEncData(24, 02) [es:bx+0xd4]
00D4                          SetEncData(24, 03) [es:bx+0xd4]
00E6                          SetEncData(24, 04) [es:bx+0xd4]
00F8                          SetEncData(24, 05) [es:bx+0xd4]
010A                          SetEncData(24, 06) [es:bx+0xd4]
011C                          RETURN

Functn30: "KEYENC"
0000                          BEGIN
0003                          ax = HasItem(E1) [es:bx+0x50]
0011 74 2F                    jz 0x42
0013                          SetTreasureData(03E8, 00, 00, 00, B7, CE) [es:bx+0xd8]
0033                          ShowMessage(0B0A) [es:bx+0xf8] = The room is jammed with Rogues.
0040 EB 2B                    jmp 0x6d
0042                          SetTreasureData(0000, 00, 00, 00, 00, E1) [es:bx+0xd8]
0060                          ShowMessage(0B2A) [es:bx+0xf8] = A Ranger wears the King's Domicile Key around his neck.
006D                          ax = PartyCountIs(01) [es:bx+0xf0]
0078 75 27                    jnz 0xa1
007A                          SetEncData(27, 01) [es:bx+0xd4]
008C                          SetEncData(25, 05) [es:bx+0xd4]
009E E9 D5 00                 jmp 0x176
00A1                          ax = PartyCountIs(02) [es:bx+0xf0]
00AC 75 5C                    jnz 0x10a
00AE                          SetEncData(27, 01) [es:bx+0xd4]
00C0                          SetEncData(26, 02) [es:bx+0xd4]
00D2                          SetEncData(28, 03) [es:bx+0xd4]
00E4                          SetEncData(25, 05) [es:bx+0xd4]
00F6                          SetEncData(25, 06) [es:bx+0xd4]
0108 EB 6C                    jmp 0x176
010A                          SetEncData(27, 01) [es:bx+0xd4]
011C                          SetEncData(28, 02) [es:bx+0xd4]
012E                          SetEncData(26, 03) [es:bx+0xd4]
0140                          SetEncData(28, 04) [es:bx+0xd4]
0152                          SetEncData(27, 05) [es:bx+0xd4]
0164                          SetEncData(25, 06) [es:bx+0xd4]
0176                          RETURN

Functn31: "TELMESGA"
0000                          BEGIN
0003                          ShowMessage(0B62) [es:bx+0xf8] = There is a teleport in the south wall.
0010                          RETURN

Functn32: "TELMESGB"
0000                          BEGIN
0003                          ShowMessage(0B89) [es:bx+0xf8] = There is a teleport to the south.
0010                          RETURN

Functn33: "TELMESSC"
0000                          BEGIN
0003                          ShowMessage(0BAB) [es:bx+0xf8] = There is a teleport to the north.
0010                          RETURN

Functn34: "GOLDAENC"
0000                          BEGIN
0003                          ax = CheckState(02, 38, 01) [es:bx+0x4]
0017 75 21                    jnz 0x3a
0019                          SetTreasureData(01F4, 00, 00, 00, 00, B5) [es:bx+0xd8]
0038 EB 35                    jmp 0x6f
003A                          SetTreasureData(1388, 00, 00, 00, AB, A8) [es:bx+0xd8]
005A                          SetState(02, 1F, 01) [es:bx]
006F                          ShowMessage(0BCD) [es:bx+0xf8] = Banshees haunt this room.
007C                          ax = PartyCountIs(01) [es:bx+0xf0]
0087 75 15                    jnz 0x9e
0089                          SetEncData(0E, 01) [es:bx+0xd4]
009B E9 9F 00                 jmp 0x13d
009E                          ax = PartyCountIs(02) [es:bx+0xf0]
00A9 75 38                    jnz 0xe3
00AB                          SetEncData(0E, 01) [es:bx+0xd4]
00BD                          SetEncData(0E, 02) [es:bx+0xd4]
00CF                          SetEncData(0E, 03) [es:bx+0xd4]
00E1 EB 5A                    jmp 0x13d
00E3                          SetEncData(0F, 01) [es:bx+0xd4]
00F5                          SetEncData(10, 02) [es:bx+0xd4]
0107                          SetEncData(0F, 03) [es:bx+0xd4]
0119                          SetEncData(11, 05) [es:bx+0xd4]
012B                          SetEncData(10, 06) [es:bx+0xd4]
013D                          RETURN

Functn35: "GOLDBENC"
0000                          BEGIN
0003                          ShowMessage(0BE7) [es:bx+0xf8] = Deinons protect a chest.
0010                          ax = CheckState(02, 39, 01) [es:bx+0x4]
0024 75 21                    jnz 0x47
0026                          SetTreasureData(00C8, 00, 00, 00, 00, 04) [es:bx+0xd8]
0045 EB 35                    jmp 0x7c
0047                          SetTreasureData(1770, 00, 00, 00, B6, CE) [es:bx+0xd8]
0067                          SetState(02, 20, 01) [es:bx]
007C                          ax = PartyCountIs(01) [es:bx+0xf0]
0087 75 15                    jnz 0x9e
0089                          SetEncData(1E, 01) [es:bx+0xd4]
009B E9 C1 00                 jmp 0x15f
009E                          ax = PartyCountIs(02) [es:bx+0xf0]
00A9 75 27                    jnz 0xd2
00AB                          SetEncData(1E, 01) [es:bx+0xd4]
00BD                          SetEncData(1E, 02) [es:bx+0xd4]
00CF E9 8D 00                 jmp 0x15f
00D2                          ax = PartyCountIs(03) [es:bx+0xf0]
00DD 75 38                    jnz 0x117
00DF                          SetEncData(1E, 01) [es:bx+0xd4]
00F1                          SetEncData(1E, 02) [es:bx+0xd4]
0103                          SetEncData(1E, 04) [es:bx+0xd4]
0115 EB 48                    jmp 0x15f
0117                          SetEncData(1E, 01) [es:bx+0xd4]
0129                          SetEncData(1E, 02) [es:bx+0xd4]
013B                          SetEncData(1E, 03) [es:bx+0xd4]
014D                          SetEncData(1E, 04) [es:bx+0xd4]
015F                          RETURN

Functn36: "BACKROTR"
0000                          BEGIN
0003 B8 02 00                 mov ax, 0x2
0006 50                       push ax
0007 33 C0                    xor ax, ax
0009 50                       push ax
000A C4 5E 06                 les bx, [bp+0x6]
000D 26 FF 5F 0C              call far word [es:bx+0xc]
0011 59                       pop cx
0012 59                       pop cx
0013 0B C0                    or ax, ax
0015 75 03                    jnz 0x1a
0017 E9 D5 00                 jmp 0xef
001A                          SetState(00, 02, 01) [es:bx]
002E C4 5E 06                 les bx, [bp+0x6]
0031 26 FF 5F 24              call far word [es:bx+0x24]
0035 8B D8                    mov bx, ax
0037 83 FB 03                 cmp bx, 0x3
003A 76 03                    jbe 0x3f
003C E9 8B 00                 jmp 0xca
003F D1 E3                    shl bx, 1
0041 2E FF A7 57 26           jmp word [cs:bx+0x2657]
0046 B8 01 00                 mov ax, 0x1
0049 50                       push ax
004A C4 5E 06                 les bx, [bp+0x6]
004D 26 FF 5F 20              call far word [es:bx+0x20]
0051 50                       push ax
0052 B8 01 00                 mov ax, 0x1
0055 50                       push ax
0056 B8 04 00                 mov ax, 0x4
0059 50                       push ax
005A C4 5E 06                 les bx, [bp+0x6]
005D 26 FF 9F BC 00           call far word [es:bx+0xbc]
0062 83 C4 08                 add sp, 0x8
0065 E9 87 00                 jmp 0xef
0068 B8 03 00                 mov ax, 0x3
006B 50                       push ax
006C C4 5E 06                 les bx, [bp+0x6]
006F 26 FF 5F 20              call far word [es:bx+0x20]
0073 50                       push ax
0074 B8 01 00                 mov ax, 0x1
0077 50                       push ax
0078 B8 04 00                 mov ax, 0x4
007B 50                       push ax
007C C4 5E 06                 les bx, [bp+0x6]
007F 26 FF 9F BC 00           call far word [es:bx+0xbc]
0084 83 C4 08                 add sp, 0x8
0087 EB 66                    jmp 0xef
0089 33 C0                    xor ax, ax
008B 50                       push ax
008C C4 5E 06                 les bx, [bp+0x6]
008F 26 FF 5F 20              call far word [es:bx+0x20]
0093 50                       push ax
0094 B8 01 00                 mov ax, 0x1
0097 50                       push ax
0098 B8 04 00                 mov ax, 0x4
009B 50                       push ax
009C C4 5E 06                 les bx, [bp+0x6]
009F 26 FF 9F BC 00           call far word [es:bx+0xbc]
00A4 83 C4 08                 add sp, 0x8
00A7 EB 46                    jmp 0xef
00A9 B8 02 00                 mov ax, 0x2
00AC 50                       push ax
00AD C4 5E 06                 les bx, [bp+0x6]
00B0 26 FF 5F 20              call far word [es:bx+0x20]
00B4 50                       push ax
00B5 B8 01 00                 mov ax, 0x1
00B8 50                       push ax
00B9 B8 04 00                 mov ax, 0x4
00BC 50                       push ax
00BD C4 5E 06                 les bx, [bp+0x6]
00C0 26 FF 9F BC 00           call far word [es:bx+0xbc]
00C5 83 C4 08                 add sp, 0x8
00C8 EB 25                    jmp 0xef
00CA C4 5E 06                 les bx, [bp+0x6]
00CD 26 FF 5F 24              call far word [es:bx+0x24]
00D1 50                       push ax
00D2 C4 5E 06                 les bx, [bp+0x6]
00D5 26 FF 5F 20              call far word [es:bx+0x20]
00D9 50                       push ax
00DA B8 01 00                 mov ax, 0x1
00DD 50                       push ax
00DE B8 04 00                 mov ax, 0x4
00E1 50                       push ax
00E2 C4 5E 06                 les bx, [bp+0x6]
00E5 26 FF 9F BC 00           call far word [es:bx+0xbc]
00EA 83 C4 08                 add sp, 0x8
00ED EB 00                    jmp 0xef
00EF                          RETURN
00F1 0F 26                    invalid
00F1 CE                       into
00F2 25 EF 25                 and ax, 0x25ef
00F5 AC                       lodsb
00F6 25                       invalid

Functn37: "STRSMESA"
0000                          BEGIN
0003                          ShowMessage(0C00) [es:bx+0xf8] = Stairs through the east gateway lead upstairs.
0010                          RETURN

Functn38: "STRSMESB"
0000                          BEGIN
0003                          ShowMessage(0C2F) [es:bx+0xf8] = There are stairs to the north beyond the gateway.
0010                          RETURN

Functn39: "PLATFMMS"
0000                          BEGIN
0003                          ShowMessage(0C61) [es:bx+0xf8] = There is an elevator platform to the north.
0010                          RETURN

Functn3A: "STRSMESS"
0000                          BEGIN
0003                          ShowMessage(0C8D) [es:bx+0xf8] = Stairs through the west gateway lead down a level.
0010                          RETURN

Functn3B: "NPCCHATA"
0000                          BEGIN
0003                          ShowMessage(0CC0) [es:bx+0xf8] = You encounter a Human Wizard.
0010                          ShowPortrait(002B) [es:bx+0xfc]
001D                          UnknownFunction(000F) [es:bx+0xec]
002A 3D 0A 00                 cmp ax, 0xa
002D 77 0F                    ja 0x3e
002F                          ShowMessage(0CDE) [es:bx+0xf8] = This is the lowest level of Cleowyn's Palace, yet you are merely at the beginning of the dungeon proper.
003C EB 0D                    jmp 0x4b
003E                          ShowMessage(0D47) [es:bx+0xf8] = The Human Wizard chortles softly.
004B                          RETURN

Functn3C: "NPCCHATB"
0000                          BEGIN
0003                          ShowMessage(0D69) [es:bx+0xf8] = You encounter a Gnome Thief.
0010                          ShowPortrait(0024) [es:bx+0xfc]
001D                          UnknownFunction(000F) [es:bx+0xec]
002A 3D 09 00                 cmp ax, 0x9
002D 77 0F                    ja 0x3e
002F                          ShowMessage(0D86) [es:bx+0xf8] = In the king's quarters is an elevator that will lift you up to the King's Palace. Cleowyn used this elevator to  by-pass the traps around his throne.
003C EB 0D                    jmp 0x4b
003E                          ShowMessage(0E1C) [es:bx+0xf8] = The Gnome Thief tiptoes away as you draw near.
004B                          RETURN

Functn3D: "NPCCHATC"
0000                          BEGIN
0003                          ShowMessage(0E4B) [es:bx+0xf8] = You encounter a Gnome Barbarian.
0010                          ShowPortrait(0019) [es:bx+0xfc]
001D                          UnknownFunction(000F) [es:bx+0xec]
002A 3D 05 00                 cmp ax, 0x5
002D 77 0F                    ja 0x3e
002F                          ShowMessage(0E6C) [es:bx+0xf8] = The name of the Elemental bound by the wizard Arnakkian is En-li-kil. This Elemental commands Time itself.
003C EB 1A                    jmp 0x58
003E                          DoDamage(004B) [es:bx+0x90]
004B                          ShowMessage(0ED7) [es:bx+0xf8] = The Gnome Barbarian warns you to stay away.
0058                          RETURN

Functn3E: "STRSTELE"
0000                          BEGIN
0003                          GoMap(03, E0, 03, 03) [es:bx+0xbc]
001E                          RETURN

03FC: You found a trapdoor.
0412: You fall through a trapdoor.
042F: You spot a trapdoor.
0444: You fall through a trapdoor.
0461: You detect a trapdoor.
0478: You fall through a trapdoor.
0495: You escape a trapdoor.
04AC: You fall through a trapdoor.
04C9: You notice a trapdoor.
04E0: You fall through a trapdoor.
04FD: There is a trapdoor in the floor.
051F: You fall through a trapdoor.
053C: You discover a trapdoor.
0555: You fall through a trapdoor.
0572: You detect a trapdoor.
0589: You fall through a trapdoor.
05A6: You spot a trapdoor.
05BB: You fall through a trapdoor.
05D8: You detect a trapdoor.
05EF: You fall through a trapdoor.
060C: A trapdoor is in this room.
0628: You fall through a trapdoor.
0645: You sidestep a trapdoor.
065E: You fall through a trapdoor.
067B: You avoid a trapdoor.
0691: You fall through a trapdoor.
06AE: You soon have the door unlocked.
06CF: The door is locked.
06E3: Your aptitude at opening locks pays off.
070C: The door is locked.
0720: You succeed at picking the door lock.
0746: The door is locked.
075A: The door lock is no match for your skills.
0785: The door is locked.
0799: You deftly trip the door lock.
07B8: The door is locked.
07CC: You quickly have the door open.
07EC: The door is locked.
0800: You push on the door and open it.
0822: The door is stuck shut.
083A: You force the door open by muscle power.
0863: The door is stuck shut.
087B: The Domicile Key opens the door!
089C: The door is locked.
08B0: You have spotted a secret door!
08D0: Clerics use this room as a sanctuary.
08F6: A scroll fall from a Cleric's robe.
091A: Rogues use this room as a hideout.
093D: A Barbarian drops some potions when she sees you.
096F: You sense evil in the room.
098B: You see a wand on the floor.
09A8: The stench of reptiles assails you.
09CC: You hear hissing.
09DE: Rogues surprise you.
09F3: A Knight drops a poleaxe as you approach.
0A1D: Nightmares loom up before you.
0A3C: A Nightmare throws a bow aside to attack.
0A66: You stumble on some Dwarf Knights.
0A89: The brilliant chainmail worn by a Knight blinds you.
0ABE: You enter a den of thieves.
0ADA: A Halfling Thief tries to wield a large shield.
0B0A: The room is jammed with Rogues.
0B2A: A Ranger wears the King's Domicile Key around his neck.
0B62: There is a teleport in the south wall.
0B89: There is a teleport to the south.
0BAB: There is a teleport to the north.
0BCD: Banshees haunt this room.
0BE7: Deinons protect a chest.
0C00: Stairs through the east gateway lead upstairs.
0C2F: There are stairs to the north beyond the gateway.
0C61: There is an elevator platform to the north.
0C8D: Stairs through the west gateway lead down a level.
0CC0: You encounter a Human Wizard.
0CDE: This is the lowest level of Cleowyn's Palace, yet you are merely at the beginning of the dungeon proper.
0D47: The Human Wizard chortles softly.
0D69: You encounter a Gnome Thief.
0D86: In the king's quarters is an elevator that will lift you up to the King's Palace. Cleowyn used this elevator to  by-pass the traps around his throne.
0E1C: The Gnome Thief tiptoes away as you draw near.
0E4B: You encounter a Gnome Barbarian.
0E6C: The name of the Elemental bound by the wizard Arnakkian is En-li-kil. This Elemental commands Time itself.
0ED7: The Gnome Barbarian warns you to stay away.
