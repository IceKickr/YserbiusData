STRSTELE_01:
000B  0000        BEGIN
000E  0003        SetMoveMap(0x02, 0x97, 0x03, 0x01)
0029  001E        RETURN

STRSTELE_02:
002B  0000        BEGIN
002E  0003        SetMoveMap(0x01, 0x1F, 0x01, 0x03)
0049  001E        RETURN

LKPKDOOR_03:
004B  0000        BEGIN
004E  0003        ax = UsedItem(0xC1, 0xC4)
0061  0016        If (result.notequal) jump to 0029
0063  0018        ax = UsedSkill(0x0E) // returns 0 if did not use, compares to 2nd op if did use
006F  0024        compare(ax, 0x0006)
0072  0027        If (result.below) jump to 0074
0074  0029        Push(01)
0078  002D        ax = GetFacing()
007F  0034        Push(ax)
0080  0035        ax = GetNextTile()
0087  003C        Push(ax)
0088  003D        SetMove2C(stk[0], stk[1], stk[2])
0092  0047        ax = GetFacing()
0099  004E        Push(ax)
009A  004F        ax = GetNextTile()
00A1  0056        Push(ax)
00A2  0057        Push(01)
00A6  005B        SetUnblocked()
00B0  0065        ShowMessage(0x03FC) = You succeeded at opening the locked door.
00BD  0072        Jump to 009E
00BF  0074        Push(00)
00C2  0077        ax = GetFacing()
00C9  007E        Push(ax)
00CA  007F        ax = GetNextTile()
00D1  0086        Push(ax)
00D2  0087        SetMove2C(stk[0], stk[1], stk[2])
00DC  0091        ShowMessage(0x0426) = The door is locked.
00E9  009E        RETURN

LKPKDOOR_04:
00EB  0000        BEGIN
00EE  0003        ax = UsedItem(0xBF, 0xC4)
0101  0016        If (result.notequal) jump to 0029
0103  0018        ax = UsedSkill(0x0E) // returns 0 if did not use, compares to 2nd op if did use
010F  0024        compare(ax, 0x0001)
0112  0027        If (result.below) jump to 0046
0114  0029        DoDamage(0x0096)
0121  0036        ShowMessage(0x043A) = Your attempt to open the door springs a trap. Dozens of darts attack you.
012E  0043        Jump to 00D0
0131  0046        ax = UsedItem(0xD9, 0xD9)
0144  0059        If (result.equal) jump to 00A6
0146  005B        Push(01)
014A  005F        ax = GetFacing()
0151  0066        Push(ax)
0152  0067        ax = GetNextTile()
0159  006E        Push(ax)
015A  006F        SetMove2C(stk[0], stk[1], stk[2])
0164  0079        ax = GetFacing()
016B  0080        Push(ax)
016C  0081        ax = GetNextTile()
0173  0088        Push(ax)
0174  0089        Push(01)
0178  008D        SetUnblocked()
0182  0097        ShowMessage(0x0484) = The key unlocked the massive door, bypassing a well hidden trap.
018F  00A4        Jump to 00D0
0191  00A6        Push(00)
0194  00A9        ax = GetFacing()
019B  00B0        Push(ax)
019C  00B1        ax = GetNextTile()
01A3  00B8        Push(ax)
01A4  00B9        SetMove2C(stk[0], stk[1], stk[2])
01AE  00C3        ShowMessage(0x04C5) = The Palace doors are locked.  Only the Palace key will open these doors.
01BB  00D0        RETURN

RUNESIGN_05:
01BD  0000        BEGIN
01C0  0003        ShowMessage(0x050E) = Runes can be seen on the tapestry...
01CD  0010        ShowRunes(0x0533) = None shall pass save one who holds the Key to the Palace.
01DA  001D        RETURN

TOPALACA_06:
01DC  0000        BEGIN
01DF  0003        SetMoveMap(0x01, 0x03, 0x06, 0x02)
01FA  001E        RETURN

LOWMNSTR_07:
01FC  0000        BEGIN
01FF  0003        ax = PartyCount()
0207  000B        compare(ax, 0x0001)
020A  000E        If (result.notequal) jump to 0025
020C  0010        AddEncounter(0x19, 0x01)
021E  0022        Jump to 00E6
0221  0025        ax = PartyCount()
0229  002D        compare(ax, 0x0002)
022C  0030        If (result.notequal) jump to 0059
022E  0032        AddEncounter(0x1A, 0x01)
0240  0044        AddEncounter(0x1C, 0x02)
0252  0056        Jump to 00E6
0255  0059        ax = PartyCount()
025D  0061        compare(ax, 0x0003)
0260  0064        If (result.notequal) jump to 009E
0262  0066        AddEncounter(0x1A, 0x01)
0274  0078        AddEncounter(0x1A, 0x02)
0286  008A        AddEncounter(0x1B, 0x03)
0298  009C        Jump to 00E6
029A  009E        AddEncounter(0x19, 0x01)
02AC  00B0        AddEncounter(0x1C, 0x02)
02BE  00C2        AddEncounter(0x1B, 0x03)
02D0  00D4        AddEncounter(0x1A, 0x04)
02E2  00E6        RETURN

MEDMNSTR_08:
02E4  0000        BEGIN
02E7  0003        ax = PartyCount()
02EF  000B        compare(ax, 0x0001)
02F2  000E        If (result.notequal) jump to 0037
02F4  0010        AddEncounter(0x1E, 0x01)
0306  0022        AddEncounter(0x20, 0x02)
0318  0034        Jump to 0176
031B  0037        ax = PartyCount()
0323  003F        compare(ax, 0x0002)
0326  0042        If (result.notequal) jump to 008F
0328  0044        AddEncounter(0x1F, 0x01)
033A  0056        AddEncounter(0x1F, 0x02)
034C  0068        AddEncounter(0x1E, 0x03)
035E  007A        AddEncounter(0x21, 0x04)
0370  008C        Jump to 0176
0373  008F        ax = PartyCount()
037B  0097        compare(ax, 0x0003)
037E  009A        If (result.notequal) jump to 010A
0380  009C        AddEncounter(0x1E, 0x01)
0392  00AE        AddEncounter(0x1F, 0x02)
03A4  00C0        AddEncounter(0x1E, 0x03)
03B6  00D2        AddEncounter(0x1F, 0x04)
03C8  00E4        AddEncounter(0x20, 0x05)
03DA  00F6        AddEncounter(0x20, 0x06)
03EC  0108        Jump to 0176
03EE  010A        AddEncounter(0x22, 0x01)
0400  011C        AddEncounter(0x22, 0x02)
0412  012E        AddEncounter(0x22, 0x03)
0424  0140        AddEncounter(0x22, 0x04)
0436  0152        AddEncounter(0x22, 0x05)
0448  0164        AddEncounter(0x22, 0x06)
045A  0176        RETURN

STRMNSTR_09:
045C  0000        BEGIN
045F  0003        ax = PartyCount()
0467  000B        compare(ax, 0x0001)
046A  000E        If (result.notequal) jump to 0025
046C  0010        AddEncounter(0x23, 0x01)
047E  0022        Jump to 012E
0481  0025        ax = PartyCount()
0489  002D        compare(ax, 0x0002)
048C  0030        If (result.notequal) jump to 0059
048E  0032        AddEncounter(0x24, 0x01)
04A0  0044        AddEncounter(0x24, 0x02)
04B2  0056        Jump to 012E
04B5  0059        ax = PartyCount()
04BD  0061        compare(ax, 0x0003)
04C0  0064        If (result.notequal) jump to 00C2
04C2  0066        AddEncounter(0x24, 0x01)
04D4  0078        AddEncounter(0x24, 0x02)
04E6  008A        AddEncounter(0x23, 0x03)
04F8  009C        AddEncounter(0x23, 0x04)
050A  00AE        AddEncounter(0x26, 0x05)
051C  00C0        Jump to 012E
051E  00C2        AddEncounter(0x28, 0x01)
0530  00D4        AddEncounter(0x25, 0x02)
0542  00E6        AddEncounter(0x23, 0x03)
0554  00F8        AddEncounter(0x27, 0x04)
0566  010A        AddEncounter(0x24, 0x05)
0578  011C        AddEncounter(0x28, 0x06)
058A  012E        RETURN

STRSMESA_0A:
058C  0000        BEGIN
058F  0003        ShowMessage(0x056D) = The stairs through the west gateway lead up a level.
059C  0010        RETURN

STRSMESB_0B:
059E  0000        BEGIN
05A1  0003        ShowMessage(0x05A2) = Through the north gateway are stairs going up to the next level.
05AE  0010        RETURN

STRSMESC_0C:
05B0  0000        BEGIN
05B3  0003        ShowMessage(0x05E3) = The stairs to the east lead downstairs.
05C0  0010        RETURN

STRSMESD_0D:
05C2  0000        BEGIN
05C5  0003        ShowMessage(0x060B) = The stairs past the north gateway go down a level.
05D2  0010        RETURN

GATEMESS_0E:
05D4  0000        BEGIN
05D7  0003        ShowMessage(0x063E) = The gateway leads to THE PALACE OF KING CLEOWYN.
05E4  0010        RETURN

TOPALACB_0F:
05E6  0000        BEGIN
05E9  0003        SetMoveMap(0x01, 0x04, 0x06, 0x02)
0604  001E        RETURN

NPCCHATA_10:
0606  0000        BEGIN
0609  0003        ShowMessage(0x066F) = You encounter a Dwarf Thief.
0616  0010        ShowPortrait(0x0023)
0623  001D        ax = UnknownFunctionEC(0x000F)
0630  002A        compare(ax, 0x000B)
0633  002D        If (result.unsigned_greater_than) jump to 003E
0635  002F        ShowMessage(0x068C) = The palace doors are locked. Somewhere on the first level is the object that will open these doors.
0642  003C        Jump to 004B
0644  003E        ShowMessage(0x06F0) = The Dwarf Thief is too busy removing darts from his leather shield to answer you.
0651  004B        RETURN

NPCCHATB_11:
0653  0000        BEGIN
0656  0003        ShowMessage(0x0742) = You encounter a Halfling Ranger.
0663  0010        ShowPortrait(0x0021)
0670  001D        ax = UnknownFunctionEC(0x000F)
067D  002A        compare(ax, 0x0008)
0680  002D        If (result.unsigned_greater_than) jump to 003E
0682  002F        ShowMessage(0x0763) = I know there are three secret areas on this level, but they cannot be entered from this corridor.
068F  003C        Jump to 004B
0691  003E        ShowMessage(0x07C5) = The Halfling Ranger waves you away in annoyance.
069E  004B        RETURN

NPCCHATC_12:
06A0  0000        BEGIN
06A3  0003        ShowMessage(0x07F6) = You encounter a Dwarf Wizard.
06B0  0010        ShowPortrait(0x002C)
06BD  001D        ax = UnknownFunctionEC(0x000F)
06CA  002A        compare(ax, 0x000C)
06CD  002D        If (result.unsigned_greater_than) jump to 003E
06CF  002F        ShowMessage(0x0814) = Not all traps should be by-passed. I fell through one and, after some nosing around and polishing off some bothersome rogues and monsters, found a most useful key.
06DC  003C        Jump to 004B
06DE  003E        ShowMessage(0x08B8) = The Dwarf Wizard disappears in a puff of smoke.
06EB  004B        RETURN

NPCCHATD_13:
06ED  0000        BEGIN
06F0  0003        ShowMessage(0x08E8) = You encounter an Orc Knight.
06FD  0010        ShowPortrait(0x001A)
070A  001D        ax = UnknownFunctionEC(0x000F)
0717  002A        compare(ax, 0x0007)
071A  002D        If (result.unsigned_greater_than) jump to 003E
071C  002F        ShowMessage(0x0905) = King Cleowyn's Palace is an evil place, filled with the spirits of the tormented dead.  A cleric told me to look for an asymmetry in the Palace if I wished to learn the truth about the dead king.
0729  003C        Jump to 004B
072B  003E        ShowMessage(0x09C9) = The Orc Knight pretends not to hear you.
0738  004B        RETURN

STRSTELE_14:
073A  0000        BEGIN
073D  0003        SetMoveMap(0x02, 0x97, 0x03, 0x01)
0758  001E        RETURN

STRSTELE_15:
075A  0000        BEGIN
075D  0003        SetMoveMap(0x01, 0x1F, 0x01, 0x03)
0778  001E        RETURN

NPCCHATE_16:
077A  0000        BEGIN
077D  0003        ShowMessage(0x09F2) = You encounter a Halfling Cleric.
078A  0010        ShowPortrait(0x0029)
0797  001D        ax = UnknownFunctionEC(0x000F)
07A4  002A        compare(ax, 0x000D)
07A7  002D        If (result.unsigned_greater_than) jump to 004B
07A9  002F        ShowMessage(0x0A13) = On the next level down you will find a dwarf by the name of Deldwinn.  He guards the entrance to King Cleowyn's Apartments.
07B6  003C        ShowMessage(0x0A8F) = Do not try to fight Deldwinn, for he is enchanted and cannot be killed by mortals.
07C3  0049        Jump to 0058
07C5  004B        ShowMessage(0x0AE2) = The Halfling Cleric mumbles his prayers.
07D2  0058        RETURN

EMPTY:
07D4  0000        <Empty Function>

EMPTY:
07D9  0000        <Empty Function>

EMPTY:
07DE  0000        <Empty Function>

EMPTY:
07E3  0000        <Empty Function>

EMPTY:
07E8  0000        <Empty Function>

EMPTY:
07ED  0000        <Empty Function>

EMPTY:
07F2  0000        <Empty Function>

EMPTY:
07F7  0000        <Empty Function>

EMPTY:
07FC  0000        <Empty Function>

EMPTY:
0801  0000        <Empty Function>

EMPTY:
0806  0000        <Empty Function>

EMPTY:
080B  0000        <Empty Function>

EMPTY:
0810  0000        <Empty Function>

EMPTY:
0815  0000        <Empty Function>

EMPTY:
081A  0000        <Empty Function>

EMPTY:
081F  0000        <Empty Function>

EMPTY:
0824  0000        <Empty Function>

EMPTY:
0829  0000        <Empty Function>

EMPTY:
082E  0000        <Empty Function>

EMPTY:
0833  0000        <Empty Function>

EMPTY:
0838  0000        <Empty Function>

EMPTY:
083D  0000        <Empty Function>

EMPTY:
0842  0000        <Empty Function>

EMPTY:
0847  0000        <Empty Function>

EMPTY:
084C  0000        <Empty Function>

EMPTY:
0851  0000        <Empty Function>

EMPTY:
0856  0000        <Empty Function>

EMPTY:
085B  0000        <Empty Function>

EMPTY:
0860  0000        <Empty Function>

EMPTY:
0865  0000        <Empty Function>

EMPTY:
086A  0000        <Empty Function>

EMPTY:
086F  0000        <Empty Function>

EMPTY:
0874  0000        <Empty Function>

EMPTY:
0879  0000        <Empty Function>

EMPTY:
087E  0000        <Empty Function>

EMPTY:
0883  0000        <Empty Function>

EMPTY:
0888  0000        <Empty Function>

EMPTY:
088D  0000        <Empty Function>

EMPTY:
0892  0000        <Empty Function>

EMPTY:
0897  0000        <Empty Function>

EMPTY:
089C  0000        <Empty Function>

EMPTY:
08A1  0000        <Empty Function>

EMPTY:
08A6  0000        <Empty Function>

EMPTY:
08AB  0000        <Empty Function>

EMPTY:
08B0  0000        <Empty Function>

EMPTY:
08B5  0000        <Empty Function>

EMPTY:
08BA  0000        <Empty Function>

EMPTY:
08BF  0000        <Empty Function>

EMPTY:
08C4  0000        <Empty Function>

EMPTY:
08C9  0000        <Empty Function>

EMPTY:
08CE  0000        <Empty Function>

EMPTY:
08D3  0000        <Empty Function>

EMPTY:
08D8  0000        <Empty Function>

EMPTY:
08DD  0000        <Empty Function>

EMPTY:
08E2  0000        <Empty Function>

EMPTY:
08E7  0000        <Empty Function>

EMPTY:
08EC  0000        <Empty Function>

EMPTY:
08F1  0000        <Empty Function>

EMPTY:
08F6  0000        <Empty Function>

EMPTY:
08FB  0000        <Empty Function>

EMPTY:
0900  0000        <Empty Function>

EMPTY:
0905  0000        <Empty Function>

EMPTY:
090A  0000        <Empty Function>

EMPTY:
090F  0000        <Empty Function>

EMPTY:
0914  0000        <Empty Function>

EMPTY:
0919  0000        <Empty Function>

EMPTY:
091E  0000        <Empty Function>

EMPTY:
0923  0000        <Empty Function>

EMPTY:
0928  0000        <Empty Function>

EMPTY:
092D  0000        <Empty Function>

EMPTY:
0932  0000        <Empty Function>

EMPTY:
0937  0000        <Empty Function>

EMPTY:
093C  0000        <Empty Function>

EMPTY:
0941  0000        <Empty Function>

EMPTY:
0946  0000        <Empty Function>

EMPTY:
094B  0000        <Empty Function>

EMPTY:
0950  0000        <Empty Function>

EMPTY:
0955  0000        <Empty Function>

EMPTY:
095A  0000        <Empty Function>

EMPTY:
095F  0000        <Empty Function>

EMPTY:
0964  0000        <Empty Function>

EMPTY:
0969  0000        <Empty Function>

EMPTY:
096E  0000        <Empty Function>

EMPTY:
0973  0000        <Empty Function>

EMPTY:
0978  0000        <Empty Function>

EMPTY:
097D  0000        <Empty Function>

EMPTY:
0982  0000        <Empty Function>

EMPTY:
0987  0000        <Empty Function>

EMPTY:
098C  0000        <Empty Function>

EMPTY:
0991  0000        <Empty Function>

EMPTY:
0996  0000        <Empty Function>

EMPTY:
099B  0000        <Empty Function>

EMPTY:
09A0  0000        <Empty Function>

EMPTY:
09A5  0000        <Empty Function>

EMPTY:
09AA  0000        <Empty Function>

EMPTY:
09AF  0000        <Empty Function>

EMPTY:
09B4  0000        <Empty Function>

EMPTY:
09B9  0000        <Empty Function>

EMPTY:
09BE  0000        <Empty Function>

EMPTY:
09C3  0000        <Empty Function>

EMPTY:
09C8  0000        <Empty Function>

EMPTY:
09CD  0000        <Empty Function>

EMPTY:
09D2  0000        <Empty Function>

EMPTY:
09D7  0000        <Empty Function>

EMPTY:
09DC  0000        <Empty Function>

EMPTY:
09E1  0000        <Empty Function>

EMPTY:
09E6  0000        <Empty Function>

EMPTY:
09EB  0000        <Empty Function>

EMPTY:
09F0  0000        <Empty Function>

EMPTY:
09F5  0000        <Empty Function>

EMPTY:
09FA  0000        <Empty Function>

EMPTY:
09FF  0000        <Empty Function>

EMPTY:
0A04  0000        <Empty Function>

EMPTY:
0A09  0000        <Empty Function>

EMPTY:
0A0E  0000        <Empty Function>

EMPTY:
0A13  0000        <Empty Function>

EMPTY:
0A18  0000        <Empty Function>

EMPTY:
0A1D  0000        <Empty Function>

EMPTY:
0A22  0000        <Empty Function>

EMPTY:
0A27  0000        <Empty Function>

EMPTY:
0A2C  0000        <Empty Function>

EMPTY:
0A31  0000        <Empty Function>

EMPTY:
0A36  0000        <Empty Function>

EMPTY:
0A3B  0000        <Empty Function>

EMPTY:
0A40  0000        <Empty Function>

EMPTY:
0A45  0000        <Empty Function>

EMPTY:
0A4A  0000        <Empty Function>

EMPTY:
0A4F  0000        <Empty Function>

EMPTY:
0A54  0000        <Empty Function>

EMPTY:
0A59  0000        <Empty Function>

EMPTY:
0A5E  0000        <Empty Function>

EMPTY:
0A63  0000        <Empty Function>

EMPTY:
0A68  0000        <Empty Function>

EMPTY:
0A6D  0000        <Empty Function>

EMPTY:
0A72  0000        <Empty Function>

EMPTY:
0A77  0000        <Empty Function>

EMPTY:
0A7C  0000        <Empty Function>

EMPTY:
0A81  0000        <Empty Function>

EMPTY:
0A86  0000        <Empty Function>

EMPTY:
0A8B  0000        <Empty Function>

EMPTY:
0A90  0000        <Empty Function>

EMPTY:
0A95  0000        <Empty Function>

EMPTY:
0A9A  0000        <Empty Function>

EMPTY:
0A9F  0000        <Empty Function>

EMPTY:
0AA4  0000        <Empty Function>

EMPTY:
0AA9  0000        <Empty Function>

EMPTY:
0AAE  0000        <Empty Function>

EMPTY:
0AB3  0000        <Empty Function>

EMPTY:
0AB8  0000        <Empty Function>

EMPTY:
0ABD  0000        <Empty Function>

EMPTY:
0AC2  0000        <Empty Function>

EMPTY:
0AC7  0000        <Empty Function>

EMPTY:
0ACC  0000        <Empty Function>

EMPTY:
0AD1  0000        <Empty Function>

EMPTY:
0AD6  0000        <Empty Function>

EMPTY:
0ADB  0000        <Empty Function>

EMPTY:
0AE0  0000        <Empty Function>

EMPTY:
0AE5  0000        <Empty Function>

EMPTY:
0AEA  0000        <Empty Function>

EMPTY:
0AEF  0000        <Empty Function>

EMPTY:
0AF4  0000        <Empty Function>

EMPTY:
0AF9  0000        <Empty Function>

EMPTY:
0AFE  0000        <Empty Function>

EMPTY:
0B03  0000        <Empty Function>

EMPTY:
0B08  0000        <Empty Function>

EMPTY:
0B0D  0000        <Empty Function>

EMPTY:
0B12  0000        <Empty Function>

EMPTY:
0B17  0000        <Empty Function>

EMPTY:
0B1C  0000        <Empty Function>

EMPTY:
0B21  0000        <Empty Function>

EMPTY:
0B26  0000        <Empty Function>

EMPTY:
0B2B  0000        <Empty Function>

EMPTY:
0B30  0000        <Empty Function>

EMPTY:
0B35  0000        <Empty Function>

EMPTY:
0B3A  0000        <Empty Function>

EMPTY:
0B3F  0000        <Empty Function>

EMPTY:
0B44  0000        <Empty Function>

EMPTY:
0B49  0000        <Empty Function>

EMPTY:
0B4E  0000        <Empty Function>

EMPTY:
0B53  0000        <Empty Function>

EMPTY:
0B58  0000        <Empty Function>

EMPTY:
0B5D  0000        <Empty Function>

EMPTY:
0B62  0000        <Empty Function>

EMPTY:
0B67  0000        <Empty Function>

EMPTY:
0B6C  0000        <Empty Function>

EMPTY:
0B71  0000        <Empty Function>

EMPTY:
0B76  0000        <Empty Function>

EMPTY:
0B7B  0000        <Empty Function>

EMPTY:
0B80  0000        <Empty Function>

EMPTY:
0B85  0000        <Empty Function>

EMPTY:
0B8A  0000        <Empty Function>

EMPTY:
0B8F  0000        <Empty Function>

EMPTY:
0B94  0000        <Empty Function>

EMPTY:
0B99  0000        <Empty Function>

EMPTY:
0B9E  0000        <Empty Function>

EMPTY:
0BA3  0000        <Empty Function>

EMPTY:
0BA8  0000        <Empty Function>

EMPTY:
0BAD  0000        <Empty Function>

EMPTY:
0BB2  0000        <Empty Function>

EMPTY:
0BB7  0000        <Empty Function>

EMPTY:
0BBC  0000        <Empty Function>

EMPTY:
0BC1  0000        <Empty Function>

EMPTY:
0BC6  0000        <Empty Function>

EMPTY:
0BCB  0000        <Empty Function>

EMPTY:
0BD0  0000        <Empty Function>

EMPTY:
0BD5  0000        <Empty Function>

EMPTY:
0BDA  0000        <Empty Function>

EMPTY:
0BDF  0000        <Empty Function>

EMPTY:
0BE4  0000        <Empty Function>

EMPTY:
0BE9  0000        <Empty Function>

EMPTY:
0BEE  0000        <Empty Function>

EMPTY:
0BF3  0000        <Empty Function>

EMPTY:
0BF8  0000        <Empty Function>

EMPTY:
0BFD  0000        <Empty Function>

EMPTY:
0C02  0000        <Empty Function>

EMPTY:
0C07  0000        <Empty Function>

EMPTY:
0C0C  0000        <Empty Function>

EMPTY:
0C11  0000        <Empty Function>

EMPTY:
0C16  0000        <Empty Function>

EMPTY:
0C1B  0000        <Empty Function>

EMPTY:
0C20  0000        <Empty Function>

EMPTY:
0C25  0000        <Empty Function>

EMPTY:
0C2A  0000        <Empty Function>

EMPTY:
0C2F  0000        <Empty Function>

EMPTY:
0C34  0000        <Empty Function>

EMPTY:
0C39  0000        <Empty Function>

EMPTY:
0C3E  0000        <Empty Function>

EMPTY:
0C43  0000        <Empty Function>

EMPTY:
0C48  0000        <Empty Function>

EMPTY:
0C4D  0000        <Empty Function>

EMPTY:
0C52  0000        <Empty Function>

EMPTY:
0C57  0000        <Empty Function>

EMPTY:
0C5C  0000        <Empty Function>

STRINGS:
03FC: You succeeded at opening the locked door.
0426: The door is locked.
043A: Your attempt to open the door springs a trap. Dozens of darts attack you.
0484: The key unlocked the massive door, bypassing a well hidden trap.
04C5: The Palace doors are locked.  Only the Palace key will open these doors.
050E: Runes can be seen on the tapestry...
0533: None shall pass save one who holds the Key to the Palace.
056D: The stairs through the west gateway lead up a level.
05A2: Through the north gateway are stairs going up to the next level.
05E3: The stairs to the east lead downstairs.
060B: The stairs past the north gateway go down a level.
063E: The gateway leads to THE PALACE OF KING CLEOWYN.
066F: You encounter a Dwarf Thief.
068C: The palace doors are locked. Somewhere on the first level is the object that will open these doors.
06F0: The Dwarf Thief is too busy removing darts from his leather shield to answer you.
0742: You encounter a Halfling Ranger.
0763: I know there are three secret areas on this level, but they cannot be entered from this corridor.
07C5: The Halfling Ranger waves you away in annoyance.
07F6: You encounter a Dwarf Wizard.
0814: Not all traps should be by-passed. I fell through one and, after some nosing around and polishing off some bothersome rogues and monsters, found a most useful key.
08B8: The Dwarf Wizard disappears in a puff of smoke.
08E8: You encounter an Orc Knight.
0905: King Cleowyn's Palace is an evil place, filled with the spirits of the tormented dead.  A cleric told me to look for an asymmetry in the Palace if I wished to learn the truth about the dead king.
09C9: The Orc Knight pretends not to hear you.
09F2: You encounter a Halfling Cleric.
0A13: On the next level down you will find a dwarf by the name of Deldwinn.  He guards the entrance to King Cleowyn's Apartments.
0A8F: Do not try to fight Deldwinn, for he is enchanted and cannot be killed by mortals.
0AE2: The Halfling Cleric mumbles his prayers.
